{"ast":null,"code":"import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\n * Context to store the filter part of the useListController() result.\n *\n * Use the useListFilterContext() hook to read the context. That's what many\n * List components do in react-admn (e.g. <Filter>, <FilterListItem>).\n *\n * @typedef {Object} ListFilterContextValue\n * @prop {Object}   filterValues a dictionary of filter values, e.g. { title: 'lorem', nationality: 'fr' }\n * @prop {Function} setFilters a callback to update the filters, e.g. setFilters(filters, displayedFilters)\n * @prop {Object}   displayedFilters a dictionary of the displayed filters, e.g. { title: true, nationality: true }\n * @prop {Function} showFilter a callback to show one of the filters, e.g. showFilter('title', defaultValue)\n * @prop {Function} hideFilter a callback to hide one of the filters, e.g. hidefilter('title')\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @typedef Props\n * @prop {ListFilterContextValue} value\n *\n * @param {Props}\n *\n * @see useListController\n * @see useListFilterContext\n *\n * @example\n *\n * import { useListController, usePickFilterContext, ListFilterContext } from 'ra-core';\n *\n * const List = props => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListFilterContext.Provider value={usePickFilterContext(controllerProps)}>\n *             ...\n *         </ListFilterContext.Provider>\n *     );\n * };\n */\n\nvar ListFilterContext = createContext({\n  displayedFilters: null,\n  filterValues: null,\n  hideFilter: null,\n  setFilters: null,\n  showFilter: null,\n  resource: null\n});\nexport var usePickFilterContext = function (context) {\n  return useMemo(function () {\n    return pick(context, ['displayedFilters', 'filterValues', 'hideFilter', 'setFilters', 'showFilter', 'resource']);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [context.displayedFilters, context.filterValues, context.hideFilter, context.setFilters, context.showFilter]);\n};\nListFilterContext.displayName = 'ListFilterContext';\nexport default ListFilterContext;","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/ListFilterContext.js"],"names":["createContext","useMemo","pick","ListFilterContext","displayedFilters","filterValues","hideFilter","setFilters","showFilter","resource","usePickFilterContext","context","displayName"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAIC,iBAAiB,GAAGH,aAAa,CAAC;AAClCI,EAAAA,gBAAgB,EAAE,IADgB;AAElCC,EAAAA,YAAY,EAAE,IAFoB;AAGlCC,EAAAA,UAAU,EAAE,IAHsB;AAIlCC,EAAAA,UAAU,EAAE,IAJsB;AAKlCC,EAAAA,UAAU,EAAE,IALsB;AAMlCC,EAAAA,QAAQ,EAAE;AANwB,CAAD,CAArC;AAQA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,OAAV,EAAmB;AACjD,SAAOV,OAAO,CAAC,YAAY;AACvB,WAAOC,IAAI,CAACS,OAAD,EAAU,CACjB,kBADiB,EAEjB,cAFiB,EAGjB,YAHiB,EAIjB,YAJiB,EAKjB,YALiB,EAMjB,UANiB,CAAV,CAAX;AAQH,GATa,EAUd;AACA,GACIA,OAAO,CAACP,gBADZ,EAEIO,OAAO,CAACN,YAFZ,EAGIM,OAAO,CAACL,UAHZ,EAIIK,OAAO,CAACJ,UAJZ,EAKII,OAAO,CAACH,UALZ,CAXc,CAAd;AAkBH,CAnBM;AAoBPL,iBAAiB,CAACS,WAAlB,GAAgC,mBAAhC;AACA,eAAeT,iBAAf","sourcesContent":["import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\n * Context to store the filter part of the useListController() result.\n *\n * Use the useListFilterContext() hook to read the context. That's what many\n * List components do in react-admn (e.g. <Filter>, <FilterListItem>).\n *\n * @typedef {Object} ListFilterContextValue\n * @prop {Object}   filterValues a dictionary of filter values, e.g. { title: 'lorem', nationality: 'fr' }\n * @prop {Function} setFilters a callback to update the filters, e.g. setFilters(filters, displayedFilters)\n * @prop {Object}   displayedFilters a dictionary of the displayed filters, e.g. { title: true, nationality: true }\n * @prop {Function} showFilter a callback to show one of the filters, e.g. showFilter('title', defaultValue)\n * @prop {Function} hideFilter a callback to hide one of the filters, e.g. hidefilter('title')\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @typedef Props\n * @prop {ListFilterContextValue} value\n *\n * @param {Props}\n *\n * @see useListController\n * @see useListFilterContext\n *\n * @example\n *\n * import { useListController, usePickFilterContext, ListFilterContext } from 'ra-core';\n *\n * const List = props => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListFilterContext.Provider value={usePickFilterContext(controllerProps)}>\n *             ...\n *         </ListFilterContext.Provider>\n *     );\n * };\n */\nvar ListFilterContext = createContext({\n    displayedFilters: null,\n    filterValues: null,\n    hideFilter: null,\n    setFilters: null,\n    showFilter: null,\n    resource: null,\n});\nexport var usePickFilterContext = function (context) {\n    return useMemo(function () {\n        return pick(context, [\n            'displayedFilters',\n            'filterValues',\n            'hideFilter',\n            'setFilters',\n            'showFilter',\n            'resource',\n        ]);\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        context.displayedFilters,\n        context.filterValues,\n        context.hideFilter,\n        context.setFilters,\n        context.showFilter,\n    ]);\n};\nListFilterContext.displayName = 'ListFilterContext';\nexport default ListFilterContext;\n"]},"metadata":{},"sourceType":"module"}