{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { isValidElement, useEffect, useMemo } from 'react';\nimport inflection from 'inflection';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport useListParams from './useListParams';\nimport useRecordSelection from './useRecordSelection';\nimport useTranslate from '../i18n/useTranslate';\nimport useNotify from '../sideEffect/useNotify';\nimport useGetList from '../dataProvider/useGetList';\nimport { SORT_ASC } from '../reducer/admin/resource/list/queryReducer';\nimport { CRUD_GET_LIST } from '../actions';\nimport defaultExporter from '../export/defaultExporter';\nvar defaultSort = {\n  field: 'id',\n  order: SORT_ASC\n};\nvar defaultData = {};\n/**\n * Prepare data for the List view\n *\n * @param {Object} props The props passed to the List component.\n *\n * @return {Object} controllerProps Fetched and computed data for the List view\n *\n * @example\n *\n * import { useListController } from 'react-admin';\n * import ListView from './ListView';\n *\n * const MyList = props => {\n *     const controllerProps = useListController(props);\n *     return <ListView {...controllerProps} {...props} />;\n * }\n */\n\nvar useListController = function (props) {\n  useCheckMinimumRequiredProps('List', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      _a = props.exporter,\n      exporter = _a === void 0 ? defaultExporter : _a,\n      resource = props.resource,\n      hasCreate = props.hasCreate,\n      filterDefaultValues = props.filterDefaultValues,\n      _b = props.sort,\n      sort = _b === void 0 ? defaultSort : _b,\n      _c = props.perPage,\n      perPage = _c === void 0 ? 10 : _c,\n      filter = props.filter,\n      _d = props.debounce,\n      debounce = _d === void 0 ? 500 : _d;\n\n  if (filter && isValidElement(filter)) {\n    throw new Error('<List> received a React element as `filter` props. If you intended to set the list filter elements, use the `filters` (with an s) prop instead. The `filter` prop is internal and should not be set by the developer.');\n  }\n\n  var location = useLocation();\n  var translate = useTranslate();\n  var notify = useNotify();\n\n  var _e = useListParams({\n    resource: resource,\n    location: location,\n    filterDefaultValues: filterDefaultValues,\n    sort: sort,\n    perPage: perPage,\n    debounce: debounce\n  }),\n      query = _e[0],\n      queryModifiers = _e[1];\n\n  var _f = useRecordSelection(resource),\n      selectedIds = _f[0],\n      selectionModifiers = _f[1];\n  /**\n   * We want the list of ids to be always available for optimistic rendering,\n   * and therefore we need a custom action (CRUD_GET_LIST) that will be used.\n   */\n\n\n  var _g = useGetList(resource, {\n    page: query.page,\n    perPage: query.perPage\n  }, {\n    field: query.sort,\n    order: query.order\n  }, __assign(__assign({}, query.filter), filter), {\n    action: CRUD_GET_LIST,\n    onFailure: function (error) {\n      return notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n    }\n  }),\n      ids = _g.ids,\n      total = _g.total,\n      error = _g.error,\n      loading = _g.loading,\n      loaded = _g.loaded;\n\n  var data = useSelector(function (state) {\n    return get(state.admin.resources, [resource, 'data'], defaultData);\n  }); // When the user changes the page/sort/filter, this controller runs the\n  // useGetList hook again. While the result of this new call is loading,\n  // the ids and total are empty. To avoid rendering an empty list at that\n  // moment, we override the ids and total with the latest loaded ones.\n\n  var defaultIds = useSelector(function (state) {\n    return get(state.admin.resources, [resource, 'list', 'ids'], []);\n  });\n  var defaultTotal = useSelector(function (state) {\n    return get(state.admin.resources, [resource, 'list', 'total'], 0);\n  });\n  var finalIds = typeof total === 'undefined' ? defaultIds : ids;\n  var totalPages = useMemo(function () {\n    return Math.ceil(total / query.perPage) || 1;\n  }, [query.perPage, total]);\n  useEffect(function () {\n    if (query.page <= 0 || !loading && query.page > 1 && (finalIds || []).length === 0) {\n      // Query for a page that doesn't exist, set page to 1\n      queryModifiers.setPage(1);\n    } else if (!loading && query.page > totalPages) {\n      // Query for a page out of bounds, set page to the last existing page\n      // It occurs when deleting the last element of the last page\n      queryModifiers.setPage(totalPages);\n    }\n  }, [loading, query.page, finalIds, queryModifiers, total, totalPages, defaultIds]);\n  var currentSort = useMemo(function () {\n    return {\n      field: query.sort,\n      order: query.order\n    };\n  }, [query.sort, query.order]);\n  var resourceName = translate(\"resources.\" + resource + \".name\", {\n    smart_count: 2,\n    _: inflection.humanize(inflection.pluralize(resource))\n  });\n  var defaultTitle = translate('ra.page.list', {\n    name: resourceName\n  });\n  return {\n    basePath: basePath,\n    currentSort: currentSort,\n    data: data,\n    defaultTitle: defaultTitle,\n    displayedFilters: query.displayedFilters,\n    error: error,\n    exporter: exporter,\n    filterValues: query.filterValues,\n    hasCreate: hasCreate,\n    hideFilter: queryModifiers.hideFilter,\n    ids: finalIds,\n    loaded: loaded || defaultIds.length > 0,\n    loading: loading,\n    onSelect: selectionModifiers.select,\n    onToggleItem: selectionModifiers.toggle,\n    onUnselectItems: selectionModifiers.clearSelection,\n    page: query.page,\n    perPage: query.perPage,\n    resource: resource,\n    selectedIds: selectedIds,\n    setFilters: queryModifiers.setFilters,\n    setPage: queryModifiers.setPage,\n    setPerPage: queryModifiers.setPerPage,\n    setSort: queryModifiers.setSort,\n    showFilter: queryModifiers.showFilter,\n    total: typeof total === 'undefined' ? defaultTotal : total\n  };\n};\n\nexport var injectedProps = ['basePath', 'currentSort', 'data', 'defaultTitle', 'displayedFilters', 'error', 'exporter', 'filterValues', 'hasCreate', 'hideFilter', 'ids', 'loading', 'loaded', 'onSelect', 'onToggleItem', 'onUnselectItems', 'page', 'perPage', 'refresh', 'resource', 'selectedIds', 'setFilters', 'setPage', 'setPerPage', 'setSort', 'showFilter', 'total', 'totalPages', 'version'];\n/**\n * Select the props injected by the useListController hook\n * to be passed to the List children need\n * This is an implementation of pick()\n */\n\nexport var getListControllerProps = function (props) {\n  return injectedProps.reduce(function (acc, key) {\n    var _a;\n\n    return __assign(__assign({}, acc), (_a = {}, _a[key] = props[key], _a));\n  }, {});\n};\n/**\n * Select the props not injected by the useListController hook\n * to be used inside the List children to sanitize props injected by List\n * This is an implementation of omit()\n */\n\nexport var sanitizeListRestProps = function (props) {\n  return Object.keys(props).filter(function (propName) {\n    return !injectedProps.includes(propName);\n  }).reduce(function (acc, key) {\n    var _a;\n\n    return __assign(__assign({}, acc), (_a = {}, _a[key] = props[key], _a));\n  }, {});\n};\nexport default useListController;","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/useListController.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isValidElement","useEffect","useMemo","inflection","useLocation","useSelector","get","useCheckMinimumRequiredProps","useListParams","useRecordSelection","useTranslate","useNotify","useGetList","SORT_ASC","CRUD_GET_LIST","defaultExporter","defaultSort","field","order","defaultData","useListController","props","basePath","_a","exporter","resource","hasCreate","filterDefaultValues","_b","sort","_c","perPage","filter","_d","debounce","Error","location","translate","notify","_e","query","queryModifiers","_f","selectedIds","selectionModifiers","_g","page","action","onFailure","error","message","ids","total","loading","loaded","data","state","admin","resources","defaultIds","defaultTotal","finalIds","totalPages","Math","ceil","setPage","currentSort","resourceName","smart_count","_","humanize","pluralize","defaultTitle","name","displayedFilters","filterValues","hideFilter","onSelect","select","onToggleItem","toggle","onUnselectItems","clearSelection","setFilters","setPerPage","setSort","showFilter","injectedProps","getListControllerProps","reduce","acc","key","sanitizeListRestProps","keys","propName","includes"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isValidElement, useEffect, useMemo } from 'react';\nimport inflection from 'inflection';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport useListParams from './useListParams';\nimport useRecordSelection from './useRecordSelection';\nimport useTranslate from '../i18n/useTranslate';\nimport useNotify from '../sideEffect/useNotify';\nimport useGetList from '../dataProvider/useGetList';\nimport { SORT_ASC } from '../reducer/admin/resource/list/queryReducer';\nimport { CRUD_GET_LIST } from '../actions';\nimport defaultExporter from '../export/defaultExporter';\nvar defaultSort = {\n    field: 'id',\n    order: SORT_ASC,\n};\nvar defaultData = {};\n/**\n * Prepare data for the List view\n *\n * @param {Object} props The props passed to the List component.\n *\n * @return {Object} controllerProps Fetched and computed data for the List view\n *\n * @example\n *\n * import { useListController } from 'react-admin';\n * import ListView from './ListView';\n *\n * const MyList = props => {\n *     const controllerProps = useListController(props);\n *     return <ListView {...controllerProps} {...props} />;\n * }\n */\nvar useListController = function (props) {\n    useCheckMinimumRequiredProps('List', ['basePath', 'resource'], props);\n    var basePath = props.basePath, _a = props.exporter, exporter = _a === void 0 ? defaultExporter : _a, resource = props.resource, hasCreate = props.hasCreate, filterDefaultValues = props.filterDefaultValues, _b = props.sort, sort = _b === void 0 ? defaultSort : _b, _c = props.perPage, perPage = _c === void 0 ? 10 : _c, filter = props.filter, _d = props.debounce, debounce = _d === void 0 ? 500 : _d;\n    if (filter && isValidElement(filter)) {\n        throw new Error('<List> received a React element as `filter` props. If you intended to set the list filter elements, use the `filters` (with an s) prop instead. The `filter` prop is internal and should not be set by the developer.');\n    }\n    var location = useLocation();\n    var translate = useTranslate();\n    var notify = useNotify();\n    var _e = useListParams({\n        resource: resource,\n        location: location,\n        filterDefaultValues: filterDefaultValues,\n        sort: sort,\n        perPage: perPage,\n        debounce: debounce,\n    }), query = _e[0], queryModifiers = _e[1];\n    var _f = useRecordSelection(resource), selectedIds = _f[0], selectionModifiers = _f[1];\n    /**\n     * We want the list of ids to be always available for optimistic rendering,\n     * and therefore we need a custom action (CRUD_GET_LIST) that will be used.\n     */\n    var _g = useGetList(resource, {\n        page: query.page,\n        perPage: query.perPage,\n    }, { field: query.sort, order: query.order }, __assign(__assign({}, query.filter), filter), {\n        action: CRUD_GET_LIST,\n        onFailure: function (error) {\n            return notify(typeof error === 'string'\n                ? error\n                : error.message || 'ra.notification.http_error', 'warning');\n        },\n    }), ids = _g.ids, total = _g.total, error = _g.error, loading = _g.loading, loaded = _g.loaded;\n    var data = useSelector(function (state) {\n        return get(state.admin.resources, [resource, 'data'], defaultData);\n    });\n    // When the user changes the page/sort/filter, this controller runs the\n    // useGetList hook again. While the result of this new call is loading,\n    // the ids and total are empty. To avoid rendering an empty list at that\n    // moment, we override the ids and total with the latest loaded ones.\n    var defaultIds = useSelector(function (state) {\n        return get(state.admin.resources, [resource, 'list', 'ids'], []);\n    });\n    var defaultTotal = useSelector(function (state) {\n        return get(state.admin.resources, [resource, 'list', 'total'], 0);\n    });\n    var finalIds = typeof total === 'undefined' ? defaultIds : ids;\n    var totalPages = useMemo(function () {\n        return Math.ceil(total / query.perPage) || 1;\n    }, [query.perPage, total]);\n    useEffect(function () {\n        if (query.page <= 0 ||\n            (!loading && query.page > 1 && (finalIds || []).length === 0)) {\n            // Query for a page that doesn't exist, set page to 1\n            queryModifiers.setPage(1);\n        }\n        else if (!loading && query.page > totalPages) {\n            // Query for a page out of bounds, set page to the last existing page\n            // It occurs when deleting the last element of the last page\n            queryModifiers.setPage(totalPages);\n        }\n    }, [\n        loading,\n        query.page,\n        finalIds,\n        queryModifiers,\n        total,\n        totalPages,\n        defaultIds,\n    ]);\n    var currentSort = useMemo(function () { return ({\n        field: query.sort,\n        order: query.order,\n    }); }, [query.sort, query.order]);\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n        smart_count: 2,\n        _: inflection.humanize(inflection.pluralize(resource)),\n    });\n    var defaultTitle = translate('ra.page.list', {\n        name: resourceName,\n    });\n    return {\n        basePath: basePath,\n        currentSort: currentSort,\n        data: data,\n        defaultTitle: defaultTitle,\n        displayedFilters: query.displayedFilters,\n        error: error,\n        exporter: exporter,\n        filterValues: query.filterValues,\n        hasCreate: hasCreate,\n        hideFilter: queryModifiers.hideFilter,\n        ids: finalIds,\n        loaded: loaded || defaultIds.length > 0,\n        loading: loading,\n        onSelect: selectionModifiers.select,\n        onToggleItem: selectionModifiers.toggle,\n        onUnselectItems: selectionModifiers.clearSelection,\n        page: query.page,\n        perPage: query.perPage,\n        resource: resource,\n        selectedIds: selectedIds,\n        setFilters: queryModifiers.setFilters,\n        setPage: queryModifiers.setPage,\n        setPerPage: queryModifiers.setPerPage,\n        setSort: queryModifiers.setSort,\n        showFilter: queryModifiers.showFilter,\n        total: typeof total === 'undefined' ? defaultTotal : total,\n    };\n};\nexport var injectedProps = [\n    'basePath',\n    'currentSort',\n    'data',\n    'defaultTitle',\n    'displayedFilters',\n    'error',\n    'exporter',\n    'filterValues',\n    'hasCreate',\n    'hideFilter',\n    'ids',\n    'loading',\n    'loaded',\n    'onSelect',\n    'onToggleItem',\n    'onUnselectItems',\n    'page',\n    'perPage',\n    'refresh',\n    'resource',\n    'selectedIds',\n    'setFilters',\n    'setPage',\n    'setPerPage',\n    'setSort',\n    'showFilter',\n    'total',\n    'totalPages',\n    'version',\n];\n/**\n * Select the props injected by the useListController hook\n * to be passed to the List children need\n * This is an implementation of pick()\n */\nexport var getListControllerProps = function (props) {\n    return injectedProps.reduce(function (acc, key) {\n        var _a;\n        return (__assign(__assign({}, acc), (_a = {}, _a[key] = props[key], _a)));\n    }, {});\n};\n/**\n * Select the props not injected by the useListController hook\n * to be used inside the List children to sanitize props injected by List\n * This is an implementation of omit()\n */\nexport var sanitizeListRestProps = function (props) {\n    return Object.keys(props)\n        .filter(function (propName) { return !injectedProps.includes(propName); })\n        .reduce(function (acc, key) {\n        var _a;\n        return (__assign(__assign({}, acc), (_a = {}, _a[key] = props[key], _a)));\n    }, {});\n};\nexport default useListController;\n"]},"metadata":{},"sourceType":"module"}