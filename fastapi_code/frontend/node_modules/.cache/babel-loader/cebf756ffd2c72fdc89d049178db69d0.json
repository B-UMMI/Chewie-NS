{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _rolesMap = require('./rolesMap');\n\nvar _rolesMap2 = _interopRequireDefault(_rolesMap);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar elementRoleMap = new Map([]);\n[].concat(_toConsumableArray(_rolesMap2.default.keys())).forEach(function (key) {\n  var role = _rolesMap2.default.get(key);\n\n  if (role) {\n    [].concat(_toConsumableArray(role.baseConcepts), _toConsumableArray(role.relatedConcepts)).forEach(function (relation) {\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n\n        if (concept) {\n          var conceptStr = JSON.stringify(concept);\n          var roles = ([].concat(_toConsumableArray(elementRoleMap.entries())).find(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                key = _ref2[0],\n                value = _ref2[1];\n\n            return JSON.stringify(key) === conceptStr;\n          }) || [])[1];\n\n          if (!roles) {\n            roles = new Set([]);\n          }\n\n          roles.add(key);\n          elementRoleMap.set(concept, roles);\n        }\n      }\n    });\n  }\n});\nexports.default = elementRoleMap;","map":{"version":3,"sources":["/node_modules/aria-query/lib/elementRoleMap.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_rolesMap","require","_rolesMap2","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr2","from","elementRoleMap","Map","concat","keys","forEach","key","role","get","baseConcepts","relatedConcepts","relation","module","concept","conceptStr","JSON","stringify","roles","entries","find","_ref","_ref2","Set","add","set"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _rolesMap = require('./rolesMap');\n\nvar _rolesMap2 = _interopRequireDefault(_rolesMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar elementRoleMap = new Map([]);\n\n[].concat(_toConsumableArray(_rolesMap2.default.keys())).forEach(function (key) {\n  var role = _rolesMap2.default.get(key);\n  if (role) {\n    [].concat(_toConsumableArray(role.baseConcepts), _toConsumableArray(role.relatedConcepts)).forEach(function (relation) {\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n        if (concept) {\n          var conceptStr = JSON.stringify(concept);\n\n          var roles = ([].concat(_toConsumableArray(elementRoleMap.entries())).find(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                key = _ref2[0],\n                value = _ref2[1];\n\n            return JSON.stringify(key) === conceptStr;\n          }) || [])[1];\n\n          if (!roles) {\n            roles = new Set([]);\n          }\n          roles.add(key);\n          elementRoleMap.set(concept, roles);\n        }\n      }\n    });\n  }\n});\n\nexports.default = elementRoleMap;"]},"metadata":{},"sourceType":"script"}