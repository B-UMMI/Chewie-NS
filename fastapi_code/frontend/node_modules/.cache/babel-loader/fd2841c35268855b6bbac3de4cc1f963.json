{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rolesMap = require('./rolesMap');\n\nvar _rolesMap2 = _interopRequireDefault(_rolesMap);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar roleElementMap = new Map([]);\n[].concat(_toConsumableArray(_rolesMap2.default.keys())).forEach(function (key) {\n  var role = _rolesMap2.default.get(key);\n\n  if (role) {\n    [].concat(_toConsumableArray(role.baseConcepts), _toConsumableArray(role.relatedConcepts)).forEach(function (relation) {\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n\n        if (concept) {\n          var relationConcepts = roleElementMap.get(key) || new Set([]);\n          relationConcepts.add(concept);\n          roleElementMap.set(key, relationConcepts);\n        }\n      }\n    });\n  }\n});\nexports.default = roleElementMap;","map":{"version":3,"sources":["/node_modules/aria-query/lib/roleElementMap.js"],"names":["Object","defineProperty","exports","value","_rolesMap","require","_rolesMap2","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","roleElementMap","Map","concat","keys","forEach","key","role","get","baseConcepts","relatedConcepts","relation","module","concept","relationConcepts","Set","add","set"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACH,SAAD,CAAvC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGH,KAAK,CAACD,GAAG,CAACK,MAAL,CAA5B,EAA0CF,CAAC,GAAGH,GAAG,CAACK,MAAlD,EAA0DF,CAAC,EAA3D,EAA+D;AAAEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUH,GAAG,CAACG,CAAD,CAAb;AAAmB;;AAAC,WAAOC,IAAP;AAAc,GAA7H,MAAmI;AAAE,WAAOH,KAAK,CAACK,IAAN,CAAWN,GAAX,CAAP;AAAyB;AAAE;;AAEnM,IAAIO,cAAc,GAAG,IAAIC,GAAJ,CAAQ,EAAR,CAArB;AAEA,GAAGC,MAAH,CAAUV,kBAAkB,CAACL,UAAU,CAACI,OAAX,CAAmBY,IAAnB,EAAD,CAA5B,EAAyDC,OAAzD,CAAiE,UAAUC,GAAV,EAAe;AAC9E,MAAIC,IAAI,GAAGnB,UAAU,CAACI,OAAX,CAAmBgB,GAAnB,CAAuBF,GAAvB,CAAX;;AACA,MAAIC,IAAJ,EAAU;AACR,OAAGJ,MAAH,CAAUV,kBAAkB,CAACc,IAAI,CAACE,YAAN,CAA5B,EAAiDhB,kBAAkB,CAACc,IAAI,CAACG,eAAN,CAAnE,EAA2FL,OAA3F,CAAmG,UAAUM,QAAV,EAAoB;AACrH,UAAIA,QAAQ,CAACC,MAAT,KAAoB,MAAxB,EAAgC;AAC9B,YAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAvB;;AACA,YAAIA,OAAJ,EAAa;AACX,cAAIC,gBAAgB,GAAGb,cAAc,CAACO,GAAf,CAAmBF,GAAnB,KAA2B,IAAIS,GAAJ,CAAQ,EAAR,CAAlD;AACAD,UAAAA,gBAAgB,CAACE,GAAjB,CAAqBH,OAArB;AACAZ,UAAAA,cAAc,CAACgB,GAAf,CAAmBX,GAAnB,EAAwBQ,gBAAxB;AACD;AACF;AACF,KATD;AAUD;AACF,CAdD;AAgBA9B,OAAO,CAACQ,OAAR,GAAkBS,cAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rolesMap = require('./rolesMap');\n\nvar _rolesMap2 = _interopRequireDefault(_rolesMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar roleElementMap = new Map([]);\n\n[].concat(_toConsumableArray(_rolesMap2.default.keys())).forEach(function (key) {\n  var role = _rolesMap2.default.get(key);\n  if (role) {\n    [].concat(_toConsumableArray(role.baseConcepts), _toConsumableArray(role.relatedConcepts)).forEach(function (relation) {\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n        if (concept) {\n          var relationConcepts = roleElementMap.get(key) || new Set([]);\n          relationConcepts.add(concept);\n          roleElementMap.set(key, relationConcepts);\n        }\n      }\n    });\n  }\n});\n\nexports.default = roleElementMap;"]},"metadata":{},"sourceType":"script"}