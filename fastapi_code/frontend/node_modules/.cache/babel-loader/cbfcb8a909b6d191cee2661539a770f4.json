{"ast":null,"code":"var isMatchingReferencesError = function (matchingReferences) {\n  return matchingReferences && matchingReferences.error !== undefined;\n};\n\nexport var getStatusForInput = function (_a) {\n  var input = _a.input,\n      matchingReferences = _a.matchingReferences,\n      referenceRecord = _a.referenceRecord,\n      _b = _a.translate,\n      translate = _b === void 0 ? function (x) {\n    return x;\n  } : _b;\n  var matchingReferencesError = isMatchingReferencesError(matchingReferences) ? translate(matchingReferences.error, {\n    _: matchingReferences.error\n  }) : null;\n  var selectedReferenceError = input.value && !referenceRecord ? translate('ra.input.references.single_missing', {\n    _: 'ra.input.references.single_missing'\n  }) : null;\n  return {\n    waiting: input.value && selectedReferenceError && !matchingReferences || !input.value && !matchingReferences,\n    error: input.value && selectedReferenceError && matchingReferencesError || !input.value && matchingReferencesError ? input.value ? selectedReferenceError : matchingReferencesError : null,\n    warning: selectedReferenceError || matchingReferencesError,\n    choices: Array.isArray(matchingReferences) ? matchingReferences : [referenceRecord].filter(function (choice) {\n      return choice;\n    })\n  };\n};\nexport var REFERENCES_STATUS_READY = 'REFERENCES_STATUS_READY';\nexport var REFERENCES_STATUS_INCOMPLETE = 'REFERENCES_STATUS_INCOMPLETE';\nexport var REFERENCES_STATUS_EMPTY = 'REFERENCES_STATUS_EMPTY';\nexport var getSelectedReferencesStatus = function (input, referenceRecords) {\n  return !input.value || input.value.length === referenceRecords.length ? REFERENCES_STATUS_READY : referenceRecords.length > 0 ? REFERENCES_STATUS_INCOMPLETE : REFERENCES_STATUS_EMPTY;\n};\nexport var getStatusForArrayInput = function (_a) {\n  var input = _a.input,\n      matchingReferences = _a.matchingReferences,\n      referenceRecords = _a.referenceRecords,\n      _b = _a.translate,\n      translate = _b === void 0 ? function (x) {\n    return x;\n  } : _b; // selectedReferencesDataStatus can be \"empty\" (no data was found for references from input.value)\n  // or \"incomplete\" (Not all of the reference data was found)\n  // or \"ready\" (all references data was found or there is no references from input.value)\n\n  var selectedReferencesDataStatus = getSelectedReferencesStatus(input, referenceRecords);\n  var matchingReferencesError = isMatchingReferencesError(matchingReferences) ? translate(matchingReferences.error, {\n    _: matchingReferences.error\n  }) : null;\n  return {\n    waiting: !matchingReferences && input.value && selectedReferencesDataStatus === REFERENCES_STATUS_EMPTY || !matchingReferences && !input.value,\n    error: matchingReferencesError && (!input.value || input.value && selectedReferencesDataStatus === REFERENCES_STATUS_EMPTY) ? translate('ra.input.references.all_missing', {\n      _: 'ra.input.references.all_missing'\n    }) : null,\n    warning: matchingReferencesError || input.value && selectedReferencesDataStatus !== REFERENCES_STATUS_READY ? matchingReferencesError || translate('ra.input.references.many_missing', {\n      _: 'ra.input.references.many_missing'\n    }) : null,\n    choices: Array.isArray(matchingReferences) ? matchingReferences : referenceRecords\n  };\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/input/referenceDataStatus.js"],"names":["isMatchingReferencesError","matchingReferences","error","undefined","getStatusForInput","_a","input","referenceRecord","_b","translate","x","matchingReferencesError","_","selectedReferenceError","value","waiting","warning","choices","Array","isArray","filter","choice","REFERENCES_STATUS_READY","REFERENCES_STATUS_INCOMPLETE","REFERENCES_STATUS_EMPTY","getSelectedReferencesStatus","referenceRecords","length","getStatusForArrayInput","selectedReferencesDataStatus"],"mappings":"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","sourcesContent":["var isMatchingReferencesError = function (matchingReferences) {\n    return matchingReferences && matchingReferences.error !== undefined;\n};\nexport var getStatusForInput = function (_a) {\n    var input = _a.input, matchingReferences = _a.matchingReferences, referenceRecord = _a.referenceRecord, _b = _a.translate, translate = _b === void 0 ? function (x) { return x; } : _b;\n    var matchingReferencesError = isMatchingReferencesError(matchingReferences)\n        ? translate(matchingReferences.error, {\n            _: matchingReferences.error,\n        })\n        : null;\n    var selectedReferenceError = input.value && !referenceRecord\n        ? translate('ra.input.references.single_missing', {\n            _: 'ra.input.references.single_missing',\n        })\n        : null;\n    return {\n        waiting: (input.value && selectedReferenceError && !matchingReferences) ||\n            (!input.value && !matchingReferences),\n        error: (input.value &&\n            selectedReferenceError &&\n            matchingReferencesError) ||\n            (!input.value && matchingReferencesError)\n            ? input.value\n                ? selectedReferenceError\n                : matchingReferencesError\n            : null,\n        warning: selectedReferenceError || matchingReferencesError,\n        choices: Array.isArray(matchingReferences)\n            ? matchingReferences\n            : [referenceRecord].filter(function (choice) { return choice; }),\n    };\n};\nexport var REFERENCES_STATUS_READY = 'REFERENCES_STATUS_READY';\nexport var REFERENCES_STATUS_INCOMPLETE = 'REFERENCES_STATUS_INCOMPLETE';\nexport var REFERENCES_STATUS_EMPTY = 'REFERENCES_STATUS_EMPTY';\nexport var getSelectedReferencesStatus = function (input, referenceRecords) {\n    return !input.value || input.value.length === referenceRecords.length\n        ? REFERENCES_STATUS_READY\n        : referenceRecords.length > 0\n            ? REFERENCES_STATUS_INCOMPLETE\n            : REFERENCES_STATUS_EMPTY;\n};\nexport var getStatusForArrayInput = function (_a) {\n    var input = _a.input, matchingReferences = _a.matchingReferences, referenceRecords = _a.referenceRecords, _b = _a.translate, translate = _b === void 0 ? function (x) { return x; } : _b;\n    // selectedReferencesDataStatus can be \"empty\" (no data was found for references from input.value)\n    // or \"incomplete\" (Not all of the reference data was found)\n    // or \"ready\" (all references data was found or there is no references from input.value)\n    var selectedReferencesDataStatus = getSelectedReferencesStatus(input, referenceRecords);\n    var matchingReferencesError = isMatchingReferencesError(matchingReferences)\n        ? translate(matchingReferences.error, {\n            _: matchingReferences.error,\n        })\n        : null;\n    return {\n        waiting: (!matchingReferences &&\n            input.value &&\n            selectedReferencesDataStatus === REFERENCES_STATUS_EMPTY) ||\n            (!matchingReferences && !input.value),\n        error: matchingReferencesError &&\n            (!input.value ||\n                (input.value &&\n                    selectedReferencesDataStatus === REFERENCES_STATUS_EMPTY))\n            ? translate('ra.input.references.all_missing', {\n                _: 'ra.input.references.all_missing',\n            })\n            : null,\n        warning: matchingReferencesError ||\n            (input.value &&\n                selectedReferencesDataStatus !== REFERENCES_STATUS_READY)\n            ? matchingReferencesError ||\n                translate('ra.input.references.many_missing', {\n                    _: 'ra.input.references.many_missing',\n                })\n            : null,\n        choices: Array.isArray(matchingReferences)\n            ? matchingReferences\n            : referenceRecords,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}