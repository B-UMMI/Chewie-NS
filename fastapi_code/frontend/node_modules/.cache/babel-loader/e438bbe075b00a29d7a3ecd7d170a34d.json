{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport inflection from 'inflection';\nimport { useShowController, InferredElement, getElementsFromRecords } from 'ra-core';\nimport { ShowView } from './Show';\nimport showFieldTypes from './showFieldTypes';\n\nvar ShowViewGuesser = function (props) {\n  var record = props.record,\n      resource = props.resource;\n\n  var _a = useState(null),\n      inferredChild = _a[0],\n      setInferredChild = _a[1];\n\n  useEffect(function () {\n    if (record && !inferredChild) {\n      var inferredElements = getElementsFromRecords([record], showFieldTypes);\n      var inferredChild_1 = new InferredElement(showFieldTypes.show, null, inferredElements);\n      process.env.NODE_ENV !== 'production' && // eslint-disable-next-line no-console\n      console.log(\"Guessed Show:\\n\\nexport const \" + inflection.capitalize(inflection.singularize(resource)) + \"Show = props => (\\n    <Show {...props}>\\n\" + inferredChild_1.getRepresentation() + \"\\n    </Show>\\n);\");\n      setInferredChild(inferredChild_1.getElement());\n    }\n  }, [record, inferredChild, resource]);\n  return React.createElement(ShowView, __assign({}, props), inferredChild);\n};\n\nShowViewGuesser.propTypes = ShowView.propTypes;\n\nvar ShowGuesser = function (props) {\n  return React.createElement(ShowViewGuesser, __assign({}, props, useShowController(props)));\n};\n\nexport default ShowGuesser;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/detail/ShowGuesser.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","useState","inflection","useShowController","InferredElement","getElementsFromRecords","ShowView","showFieldTypes","ShowViewGuesser","props","record","resource","_a","inferredChild","setInferredChild","inferredElements","inferredChild_1","show","process","env","NODE_ENV","console","log","capitalize","singularize","getRepresentation","getElement","createElement","propTypes","ShowGuesser"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,sBAA7C,QAA4E,SAA5E;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiB;AACnC,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MAA2BC,QAAQ,GAAGF,KAAK,CAACE,QAA5C;;AACA,MAAIC,EAAE,GAAGX,QAAQ,CAAC,IAAD,CAAjB;AAAA,MAAyBY,aAAa,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,MAAgDE,gBAAgB,GAAGF,EAAE,CAAC,CAAD,CAArE;;AACAZ,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIU,MAAM,IAAI,CAACG,aAAf,EAA8B;AAC1B,UAAIE,gBAAgB,GAAGV,sBAAsB,CAAC,CAACK,MAAD,CAAD,EAAWH,cAAX,CAA7C;AACA,UAAIS,eAAe,GAAG,IAAIZ,eAAJ,CAAoBG,cAAc,CAACU,IAAnC,EAAyC,IAAzC,EAA+CF,gBAA/C,CAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCpB,UAAU,CAACqB,UAAX,CAAsBrB,UAAU,CAACsB,WAAX,CAAuBb,QAAvB,CAAtB,CAAnC,GAA6F,4CAA7F,GAA4IK,eAAe,CAACS,iBAAhB,EAA5I,GAAkL,mBAA9L,CAFJ;AAGAX,MAAAA,gBAAgB,CAACE,eAAe,CAACU,UAAhB,EAAD,CAAhB;AACH;AACJ,GATQ,EASN,CAAChB,MAAD,EAASG,aAAT,EAAwBF,QAAxB,CATM,CAAT;AAUA,SAAOZ,KAAK,CAAC4B,aAAN,CAAoBrB,QAApB,EAA8BrB,QAAQ,CAAC,EAAD,EAAKwB,KAAL,CAAtC,EAAmDI,aAAnD,CAAP;AACH,CAdD;;AAeAL,eAAe,CAACoB,SAAhB,GAA4BtB,QAAQ,CAACsB,SAArC;;AACA,IAAIC,WAAW,GAAG,UAAUpB,KAAV,EAAiB;AAAE,SAAQV,KAAK,CAAC4B,aAAN,CAAoBnB,eAApB,EAAqCvB,QAAQ,CAAC,EAAD,EAAKwB,KAAL,EAAYN,iBAAiB,CAACM,KAAD,CAA7B,CAA7C,CAAR;AAA+F,CAApI;;AACA,eAAeoB,WAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport inflection from 'inflection';\nimport { useShowController, InferredElement, getElementsFromRecords, } from 'ra-core';\nimport { ShowView } from './Show';\nimport showFieldTypes from './showFieldTypes';\nvar ShowViewGuesser = function (props) {\n    var record = props.record, resource = props.resource;\n    var _a = useState(null), inferredChild = _a[0], setInferredChild = _a[1];\n    useEffect(function () {\n        if (record && !inferredChild) {\n            var inferredElements = getElementsFromRecords([record], showFieldTypes);\n            var inferredChild_1 = new InferredElement(showFieldTypes.show, null, inferredElements);\n            process.env.NODE_ENV !== 'production' &&\n                // eslint-disable-next-line no-console\n                console.log(\"Guessed Show:\\n\\nexport const \" + inflection.capitalize(inflection.singularize(resource)) + \"Show = props => (\\n    <Show {...props}>\\n\" + inferredChild_1.getRepresentation() + \"\\n    </Show>\\n);\");\n            setInferredChild(inferredChild_1.getElement());\n        }\n    }, [record, inferredChild, resource]);\n    return React.createElement(ShowView, __assign({}, props), inferredChild);\n};\nShowViewGuesser.propTypes = ShowView.propTypes;\nvar ShowGuesser = function (props) { return (React.createElement(ShowViewGuesser, __assign({}, props, useShowController(props)))); };\nexport default ShowGuesser;\n"]},"metadata":{},"sourceType":"module"}