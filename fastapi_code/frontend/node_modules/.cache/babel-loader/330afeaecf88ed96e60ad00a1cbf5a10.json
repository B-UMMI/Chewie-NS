{"ast":null,"code":"import { SHOW_NOTIFICATION, HIDE_NOTIFICATION } from '../../actions/notificationActions';\nimport { UNDO } from '../../actions/undoActions';\n\nvar notificationsReducer = function (previousState, action) {\n  if (previousState === void 0) {\n    previousState = [];\n  }\n\n  switch (action.type) {\n    case SHOW_NOTIFICATION:\n      return previousState.concat(action.payload);\n\n    case HIDE_NOTIFICATION:\n    case UNDO:\n      return previousState.slice(1);\n\n    default:\n      return previousState;\n  }\n};\n\nexport default notificationsReducer;\n/**\n * Returns the first available notification to show\n * @param {Object} state - Redux state\n */\n\nexport var getNotification = function (state) {\n  return state.admin.notifications[0];\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/reducer/admin/notifications.js"],"names":["SHOW_NOTIFICATION","HIDE_NOTIFICATION","UNDO","notificationsReducer","previousState","action","type","concat","payload","slice","getNotification","state","admin","notifications"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAsD,mCAAtD;AACA,SAASC,IAAT,QAAqB,2BAArB;;AACA,IAAIC,oBAAoB,GAAG,UAAUC,aAAV,EAAyBC,MAAzB,EAAiC;AACxD,MAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAG,EAAhB;AAAqB;;AACrD,UAAQC,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAL;AACI,aAAOI,aAAa,CAACG,MAAd,CAAqBF,MAAM,CAACG,OAA5B,CAAP;;AACJ,SAAKP,iBAAL;AACA,SAAKC,IAAL;AACI,aAAOE,aAAa,CAACK,KAAd,CAAoB,CAApB,CAAP;;AACJ;AACI,aAAOL,aAAP;AAPR;AASH,CAXD;;AAYA,eAAeD,oBAAf;AACA;;;;;AAIA,OAAO,IAAIO,eAAe,GAAG,UAAUC,KAAV,EAAiB;AAAE,SAAOA,KAAK,CAACC,KAAN,CAAYC,aAAZ,CAA0B,CAA1B,CAAP;AAAsC,CAA/E","sourcesContent":["import { SHOW_NOTIFICATION, HIDE_NOTIFICATION, } from '../../actions/notificationActions';\nimport { UNDO } from '../../actions/undoActions';\nvar notificationsReducer = function (previousState, action) {\n    if (previousState === void 0) { previousState = []; }\n    switch (action.type) {\n        case SHOW_NOTIFICATION:\n            return previousState.concat(action.payload);\n        case HIDE_NOTIFICATION:\n        case UNDO:\n            return previousState.slice(1);\n        default:\n            return previousState;\n    }\n};\nexport default notificationsReducer;\n/**\n * Returns the first available notification to show\n * @param {Object} state - Redux state\n */\nexport var getNotification = function (state) { return state.admin.notifications[0]; };\n"]},"metadata":{},"sourceType":"module"}