{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { useCallback, useEffect, useRef } from 'react';\nimport { useSafeSetState } from '../util';\nvar defaultSelection = [];\n/**\n * Hooks to provide selection state.\n *\n * The names of the return values match the ListContext interface\n *\n * @example\n *\n * const { selectedIds, onSelect, onToggleItem, onUnselectItem } = useSelectionState();\n *\n */\n\nvar useSelectionState = function (initialSelection) {\n  if (initialSelection === void 0) {\n    initialSelection = defaultSelection;\n  }\n\n  var _a = useSafeSetState(initialSelection),\n      selectedIds = _a[0],\n      setSelectedIds = _a[1];\n\n  var isFirstRender = useRef(true);\n  useEffect(function () {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    setSelectedIds(initialSelection);\n  }, [initialSelection, setSelectedIds]);\n  var onSelect = useCallback(function (newIds) {\n    setSelectedIds(newIds);\n  }, [setSelectedIds]);\n  var onToggleItem = useCallback(function (id) {\n    setSelectedIds(function (previousState) {\n      var index = previousState.indexOf(id);\n\n      if (index > -1) {\n        return __spreadArrays(previousState.slice(0, index), previousState.slice(index + 1));\n      } else {\n        return __spreadArrays(previousState, [id]);\n      }\n    });\n  }, [setSelectedIds]);\n  var onUnselectItems = useCallback(function () {\n    setSelectedIds([]);\n  }, [setSelectedIds]);\n  return {\n    selectedIds: selectedIds,\n    onSelect: onSelect,\n    onToggleItem: onToggleItem,\n    onUnselectItems: onUnselectItems\n  };\n};\n\nexport default useSelectionState;","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/useSelectionState.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","useCallback","useEffect","useRef","useSafeSetState","defaultSelection","useSelectionState","initialSelection","_a","selectedIds","setSelectedIds","isFirstRender","current","onSelect","newIds","onToggleItem","id","previousState","index","indexOf","slice","onUnselectItems"],"mappings":"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","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { useCallback, useEffect, useRef } from 'react';\nimport { useSafeSetState } from '../util';\nvar defaultSelection = [];\n/**\n * Hooks to provide selection state.\n *\n * The names of the return values match the ListContext interface\n *\n * @example\n *\n * const { selectedIds, onSelect, onToggleItem, onUnselectItem } = useSelectionState();\n *\n */\nvar useSelectionState = function (initialSelection) {\n    if (initialSelection === void 0) { initialSelection = defaultSelection; }\n    var _a = useSafeSetState(initialSelection), selectedIds = _a[0], setSelectedIds = _a[1];\n    var isFirstRender = useRef(true);\n    useEffect(function () {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n        setSelectedIds(initialSelection);\n    }, [initialSelection, setSelectedIds]);\n    var onSelect = useCallback(function (newIds) {\n        setSelectedIds(newIds);\n    }, [setSelectedIds]);\n    var onToggleItem = useCallback(function (id) {\n        setSelectedIds(function (previousState) {\n            var index = previousState.indexOf(id);\n            if (index > -1) {\n                return __spreadArrays(previousState.slice(0, index), previousState.slice(index + 1));\n            }\n            else {\n                return __spreadArrays(previousState, [id]);\n            }\n        });\n    }, [setSelectedIds]);\n    var onUnselectItems = useCallback(function () {\n        setSelectedIds([]);\n    }, [setSelectedIds]);\n    return {\n        selectedIds: selectedIds,\n        onSelect: onSelect,\n        onToggleItem: onToggleItem,\n        onUnselectItems: onUnselectItems,\n    };\n};\nexport default useSelectionState;\n"]},"metadata":{},"sourceType":"module"}