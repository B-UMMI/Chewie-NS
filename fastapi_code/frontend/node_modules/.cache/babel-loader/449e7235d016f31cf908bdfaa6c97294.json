{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useEffect, useRef, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nvar defaultFilterToQuery = function (v) {\n  return {\n    q: v\n  };\n};\n/**\n * Hooks to provide filter state and setFilter which update the query part of the filter\n *\n * @example\n *\n * const { filter, setFilter } = useFilter({\n *      filterToQuery: v => ({ query: v }),\n *      permanentFilter: { foo: 'bar' },\n *      debounceTime: 500,\n * });\n * // filter inital value:\n * {\n *      query: '',\n *      foo: 'bar'\n * }\n *  // after updating filter\n *  setFilter('needle');\n *  {\n *      query: 'needle',\n *      foo: 'bar'\n *  }\n *\n * @param {Object} option\n * @param {Function} option.filterToQuery Function to convert the filter string to a filter object. Defaults to v => ({ q: v }).\n * @param {Object} option.permanentFilter Permanent filter to be merged with the filter string. Defaults to {}.\n * @param {number} option.debounceTime Time in ms between filter updates - used to debounce the search. Defaults to 500ms.\n *\n * @returns {UseFilterStateOptions} The filter props\n */\n\n\nexport default (function (_a) {\n  var _b = _a.filterToQuery,\n      filterToQuery = _b === void 0 ? defaultFilterToQuery : _b,\n      _c = _a.permanentFilter,\n      permanentFilter = _c === void 0 ? {} : _c,\n      _d = _a.debounceTime,\n      debounceTime = _d === void 0 ? 500 : _d;\n  var permanentFilterProp = useRef(permanentFilter);\n  var latestValue = useRef();\n\n  var _e = useState(__assign(__assign({}, permanentFilter), filterToQuery(''))),\n      filter = _e[0],\n      setFilterValue = _e[1]; // Developers often pass an object literal as permanent filter\n  // e.g. <ReferenceInput source=\"book_id\" reference=\"books\" filter={{ is_published: true }}>\n  // The effect should execute again when the parent component updates the filter value,\n  // but not when the object literal describes the same values. Therefore,\n  // we use JSON.stringify(permanentFilter) in the `useEffect` and `useCallback`\n  // dependencies instead of permanentFilter.\n\n\n  var permanentFilterSignature = JSON.stringify(permanentFilter);\n  useEffect(function () {\n    if (!isEqual(permanentFilterProp.current, permanentFilter)) {\n      permanentFilterProp.current = permanentFilter;\n      setFilterValue(__assign(__assign({}, permanentFilter), filterToQuery(latestValue.current)));\n    }\n  }, [permanentFilterSignature, permanentFilterProp, filterToQuery]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var setFilter = useCallback(debounce(function (value) {\n    setFilterValue(__assign(__assign({}, permanentFilter), filterToQuery(value)));\n    latestValue.current = value;\n  }, debounceTime), [permanentFilterSignature] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return {\n    filter: filter,\n    setFilter: setFilter\n  };\n});","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/useFilterState.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useEffect","useRef","useState","useCallback","debounce","isEqual","defaultFilterToQuery","v","q","_a","_b","filterToQuery","_c","permanentFilter","_d","debounceTime","permanentFilterProp","latestValue","_e","filter","setFilterValue","permanentFilterSignature","JSON","stringify","current","setFilter","value"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useEffect, useRef, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nvar defaultFilterToQuery = function (v) { return ({ q: v }); };\n/**\n * Hooks to provide filter state and setFilter which update the query part of the filter\n *\n * @example\n *\n * const { filter, setFilter } = useFilter({\n *      filterToQuery: v => ({ query: v }),\n *      permanentFilter: { foo: 'bar' },\n *      debounceTime: 500,\n * });\n * // filter inital value:\n * {\n *      query: '',\n *      foo: 'bar'\n * }\n *  // after updating filter\n *  setFilter('needle');\n *  {\n *      query: 'needle',\n *      foo: 'bar'\n *  }\n *\n * @param {Object} option\n * @param {Function} option.filterToQuery Function to convert the filter string to a filter object. Defaults to v => ({ q: v }).\n * @param {Object} option.permanentFilter Permanent filter to be merged with the filter string. Defaults to {}.\n * @param {number} option.debounceTime Time in ms between filter updates - used to debounce the search. Defaults to 500ms.\n *\n * @returns {UseFilterStateOptions} The filter props\n */\nexport default (function (_a) {\n    var _b = _a.filterToQuery, filterToQuery = _b === void 0 ? defaultFilterToQuery : _b, _c = _a.permanentFilter, permanentFilter = _c === void 0 ? {} : _c, _d = _a.debounceTime, debounceTime = _d === void 0 ? 500 : _d;\n    var permanentFilterProp = useRef(permanentFilter);\n    var latestValue = useRef();\n    var _e = useState(__assign(__assign({}, permanentFilter), filterToQuery(''))), filter = _e[0], setFilterValue = _e[1];\n    // Developers often pass an object literal as permanent filter\n    // e.g. <ReferenceInput source=\"book_id\" reference=\"books\" filter={{ is_published: true }}>\n    // The effect should execute again when the parent component updates the filter value,\n    // but not when the object literal describes the same values. Therefore,\n    // we use JSON.stringify(permanentFilter) in the `useEffect` and `useCallback`\n    // dependencies instead of permanentFilter.\n    var permanentFilterSignature = JSON.stringify(permanentFilter);\n    useEffect(function () {\n        if (!isEqual(permanentFilterProp.current, permanentFilter)) {\n            permanentFilterProp.current = permanentFilter;\n            setFilterValue(__assign(__assign({}, permanentFilter), filterToQuery(latestValue.current)));\n        }\n    }, [permanentFilterSignature, permanentFilterProp, filterToQuery]); // eslint-disable-line react-hooks/exhaustive-deps\n    var setFilter = useCallback(debounce(function (value) {\n        setFilterValue(__assign(__assign({}, permanentFilter), filterToQuery(value)));\n        latestValue.current = value;\n    }, debounceTime), [permanentFilterSignature] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    return {\n        filter: filter,\n        setFilter: setFilter,\n    };\n});\n"]},"metadata":{},"sourceType":"module"}