{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { CRUD_GET_MATCHING_SUCCESS, CRUD_GET_MATCHING_FAILURE } from '../../../actions/dataActions';\nvar initialState = {};\n\nvar possibleValuesreducer = function (previousState, action) {\n  var _a, _b;\n\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n\n  switch (action.type) {\n    case CRUD_GET_MATCHING_SUCCESS:\n      return __assign(__assign({}, previousState), (_a = {}, _a[action.meta.relatedTo] = action.payload.data.map(function (record) {\n        return record.id;\n      }), _a));\n\n    case CRUD_GET_MATCHING_FAILURE:\n      return __assign(__assign({}, previousState), (_b = {}, _b[action.meta.relatedTo] = {\n        error: action.error\n      }, _b));\n\n    default:\n      return previousState;\n  }\n};\n\nexport var getPossibleReferenceValues = function (state, props) {\n  return state[props.referenceSource(props.resource, props.source)];\n};\nexport var getPossibleReferences = function (referenceState, possibleValues, selectedIds) {\n  if (selectedIds === void 0) {\n    selectedIds = [];\n  }\n\n  if (!possibleValues) {\n    return null;\n  }\n\n  if (possibleValues.error) {\n    return possibleValues;\n  }\n\n  possibleValues = Array.from(possibleValues);\n  selectedIds.forEach(function (id) {\n    return possibleValues.some(function (value) {\n      return value === id;\n    }) || possibleValues.unshift(id);\n  });\n  return possibleValues.map(function (id) {\n    return referenceState.data[id];\n  }).filter(function (r) {\n    return typeof r !== 'undefined';\n  });\n};\nexport default possibleValuesreducer;","map":{"version":3,"sources":["/node_modules/ra-core/esm/reducer/admin/references/possibleValues.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","CRUD_GET_MATCHING_SUCCESS","CRUD_GET_MATCHING_FAILURE","initialState","possibleValuesreducer","previousState","action","_a","_b","type","meta","relatedTo","payload","data","map","record","id","error","getPossibleReferenceValues","state","props","referenceSource","resource","source","getPossibleReferences","referenceState","possibleValues","selectedIds","Array","from","forEach","some","value","unshift","filter","r"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { CRUD_GET_MATCHING_SUCCESS, CRUD_GET_MATCHING_FAILURE, } from '../../../actions/dataActions';\nvar initialState = {};\nvar possibleValuesreducer = function (previousState, action) {\n    var _a, _b;\n    if (previousState === void 0) { previousState = initialState; }\n    switch (action.type) {\n        case CRUD_GET_MATCHING_SUCCESS:\n            return __assign(__assign({}, previousState), (_a = {}, _a[action.meta.relatedTo] = action.payload.data.map(function (record) { return record.id; }), _a));\n        case CRUD_GET_MATCHING_FAILURE:\n            return __assign(__assign({}, previousState), (_b = {}, _b[action.meta.relatedTo] = { error: action.error }, _b));\n        default:\n            return previousState;\n    }\n};\nexport var getPossibleReferenceValues = function (state, props) {\n    return state[props.referenceSource(props.resource, props.source)];\n};\nexport var getPossibleReferences = function (referenceState, possibleValues, selectedIds) {\n    if (selectedIds === void 0) { selectedIds = []; }\n    if (!possibleValues) {\n        return null;\n    }\n    if (possibleValues.error) {\n        return possibleValues;\n    }\n    possibleValues = Array.from(possibleValues);\n    selectedIds.forEach(function (id) {\n        return possibleValues.some(function (value) { return value === id; }) ||\n            possibleValues.unshift(id);\n    });\n    return possibleValues\n        .map(function (id) { return referenceState.data[id]; })\n        .filter(function (r) { return typeof r !== 'undefined'; });\n};\nexport default possibleValuesreducer;\n"]},"metadata":{},"sourceType":"module"}