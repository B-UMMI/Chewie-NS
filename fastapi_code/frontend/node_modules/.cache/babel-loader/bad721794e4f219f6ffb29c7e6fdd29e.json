{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, FormHelperText, FormLabel, RadioGroup } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport get from 'lodash/get';\nimport { useInput, FieldTitle, warning } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport InputHelperText from './InputHelperText';\nimport RadioButtonGroupInputItem from './RadioButtonGroupInputItem';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    label: {\n      transform: 'translate(0, 5px) scale(0.75)',\n      transformOrigin: \"top \" + (theme.direction === 'ltr' ? 'left' : 'right')\n    }\n  };\n}, {\n  name: 'RaRadioButtonGroupInput'\n});\n/**\n * An Input component for a radio button group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <RadioButtonGroupInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <RadioButtonGroupInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <RadioButtonGroupInput source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <RadioButtonGroupInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <RadioButtonGroup> component\n */\n\nvar RadioButtonGroupInput = function (props) {\n  var _a = props.choices,\n      choices = _a === void 0 ? [] : _a,\n      classesOverride = props.classes,\n      format = props.format,\n      helperText = props.helperText,\n      label = props.label,\n      _b = props.margin,\n      margin = _b === void 0 ? 'dense' : _b,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      options = props.options,\n      optionText = props.optionText,\n      optionValue = props.optionValue,\n      parse = props.parse,\n      resource = props.resource,\n      row = props.row,\n      source = props.source,\n      translateChoice = props.translateChoice,\n      validate = props.validate,\n      rest = __rest(props, [\"choices\", \"classes\", \"format\", \"helperText\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]);\n\n  var classes = useStyles(props);\n  warning(source === undefined, \"If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the source prop\");\n  warning(choices === undefined, \"If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the choices prop\");\n\n  var _c = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _c.id,\n      isRequired = _c.isRequired,\n      _d = _c.meta,\n      error = _d.error,\n      touched = _d.touched,\n      input = _c.input;\n\n  return React.createElement(FormControl, __assign({\n    component: \"fieldset\",\n    margin: margin,\n    error: touched && !!error\n  }, sanitizeRestProps(rest)), React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.label\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired\n  })), React.createElement(RadioGroup, __assign({\n    id: id,\n    row: row\n  }, options), choices.map(function (choice) {\n    return React.createElement(RadioButtonGroupInputItem, __assign({}, input, {\n      key: get(choice, optionValue),\n      choice: choice,\n      optionText: optionText,\n      optionValue: optionValue,\n      source: source,\n      translateChoice: translateChoice\n    }));\n  })), React.createElement(FormHelperText, null, React.createElement(InputHelperText, {\n    touched: touched,\n    error: error,\n    helperText: helperText\n  })));\n};\n\nRadioButtonGroupInput.propTypes = {\n  choices: PropTypes.arrayOf(PropTypes.any).isRequired,\n  label: PropTypes.string,\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]),\n  optionValue: PropTypes.string,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nRadioButtonGroupInput.defaultProps = {\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  row: true,\n  translateChoice: true\n};\nexport default RadioButtonGroupInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/RadioButtonGroupInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","FormControl","FormHelperText","FormLabel","RadioGroup","makeStyles","get","useInput","FieldTitle","warning","sanitizeRestProps","InputHelperText","RadioButtonGroupInputItem","useStyles","theme","label","transform","transformOrigin","direction","name","RadioButtonGroupInput","props","_a","choices","classesOverride","classes","format","helperText","_b","margin","onBlur","onChange","onFocus","options","optionText","optionValue","parse","resource","row","source","translateChoice","validate","rest","undefined","_c","id","isRequired","_d","meta","error","touched","input","createElement","component","className","map","choice","key","propTypes","arrayOf","any","string","object","oneOfType","func","element","bool","defaultProps"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;AACJ,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKgB,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAoE,mBAApE;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,OAA/B,QAA8C,SAA9C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,IAAIC,SAAS,GAAGR,UAAU,CAAC,UAAUS,KAAV,EAAiB;AAAE,SAAQ;AAClDC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAE,+BADR;AAEHC,MAAAA,eAAe,EAAE,UAAUH,KAAK,CAACI,SAAN,KAAoB,KAApB,GAA4B,MAA5B,GAAqC,OAA/C;AAFd;AAD2C,GAAR;AAKzC,CALqB,EAKnB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CALmB,CAA1B;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,IAAIC,qBAAqB,GAAG,UAAUC,KAAV,EAAiB;AACzC,MAAIC,EAAE,GAAGD,KAAK,CAACE,OAAf;AAAA,MAAwBA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAvD;AAAA,MAA2DE,eAAe,GAAGH,KAAK,CAACI,OAAnF;AAAA,MAA4FC,MAAM,GAAGL,KAAK,CAACK,MAA3G;AAAA,MAAmHC,UAAU,GAAGN,KAAK,CAACM,UAAtI;AAAA,MAAkJZ,KAAK,GAAGM,KAAK,CAACN,KAAhK;AAAA,MAAuKa,EAAE,GAAGP,KAAK,CAACQ,MAAlL;AAAA,MAA0LA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA7N;AAAA,MAAiOE,MAAM,GAAGT,KAAK,CAACS,MAAhP;AAAA,MAAwPC,QAAQ,GAAGV,KAAK,CAACU,QAAzQ;AAAA,MAAmRC,OAAO,GAAGX,KAAK,CAACW,OAAnS;AAAA,MAA4SC,OAAO,GAAGZ,KAAK,CAACY,OAA5T;AAAA,MAAqUC,UAAU,GAAGb,KAAK,CAACa,UAAxV;AAAA,MAAoWC,WAAW,GAAGd,KAAK,CAACc,WAAxX;AAAA,MAAqYC,KAAK,GAAGf,KAAK,CAACe,KAAnZ;AAAA,MAA0ZC,QAAQ,GAAGhB,KAAK,CAACgB,QAA3a;AAAA,MAAqbC,GAAG,GAAGjB,KAAK,CAACiB,GAAjc;AAAA,MAAscC,MAAM,GAAGlB,KAAK,CAACkB,MAArd;AAAA,MAA6dC,eAAe,GAAGnB,KAAK,CAACmB,eAArf;AAAA,MAAsgBC,QAAQ,GAAGpB,KAAK,CAACoB,QAAvhB;AAAA,MAAiiBC,IAAI,GAAGhD,MAAM,CAAC2B,KAAD,EAAQ,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,YAAjC,EAA+C,OAA/C,EAAwD,QAAxD,EAAkE,QAAlE,EAA4E,UAA5E,EAAwF,SAAxF,EAAmG,SAAnG,EAA8G,YAA9G,EAA4H,aAA5H,EAA2I,OAA3I,EAAoJ,UAApJ,EAAgK,KAAhK,EAAuK,QAAvK,EAAiL,iBAAjL,EAAoM,UAApM,CAAR,CAA9iB;;AACA,MAAII,OAAO,GAAGZ,SAAS,CAACQ,KAAD,CAAvB;AACAZ,EAAAA,OAAO,CAAC8B,MAAM,KAAKI,SAAZ,EAAuB,4GAAvB,CAAP;AACAlC,EAAAA,OAAO,CAACc,OAAO,KAAKoB,SAAb,EAAwB,6GAAxB,CAAP;;AACA,MAAIC,EAAE,GAAGrC,QAAQ,CAAC3B,QAAQ,CAAC;AAAE8C,IAAAA,MAAM,EAAEA,MAAV;AACvBI,IAAAA,MAAM,EAAEA,MADe;AAEvBC,IAAAA,QAAQ,EAAEA,QAFa;AAGvBC,IAAAA,OAAO,EAAEA,OAHc;AAIvBI,IAAAA,KAAK,EAAEA,KAJgB;AAKvBC,IAAAA,QAAQ,EAAEA,QALa;AAMvBE,IAAAA,MAAM,EAAEA,MANe;AAOvBE,IAAAA,QAAQ,EAAEA;AAPa,GAAD,EAOAC,IAPA,CAAT,CAAjB;AAAA,MAOkCG,EAAE,GAAGD,EAAE,CAACC,EAP1C;AAAA,MAO8CC,UAAU,GAAGF,EAAE,CAACE,UAP9D;AAAA,MAO0EC,EAAE,GAAGH,EAAE,CAACI,IAPlF;AAAA,MAOwFC,KAAK,GAAGF,EAAE,CAACE,KAPnG;AAAA,MAO0GC,OAAO,GAAGH,EAAE,CAACG,OAPvH;AAAA,MAOgIC,KAAK,GAAGP,EAAE,CAACO,KAP3I;;AAQA,SAAQpD,KAAK,CAACqD,aAAN,CAAoBnD,WAApB,EAAiCrB,QAAQ,CAAC;AAAEyE,IAAAA,SAAS,EAAE,UAAb;AAAyBxB,IAAAA,MAAM,EAAEA,MAAjC;AAAyCoB,IAAAA,KAAK,EAAEC,OAAO,IAAI,CAAC,CAACD;AAA7D,GAAD,EAAuEvC,iBAAiB,CAACgC,IAAD,CAAxF,CAAzC,EACJ3C,KAAK,CAACqD,aAAN,CAAoBjD,SAApB,EAA+B;AAAEkD,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,SAAS,EAAE7B,OAAO,CAACV;AAA1C,GAA/B,EACIhB,KAAK,CAACqD,aAAN,CAAoB5C,UAApB,EAAgC;AAAEO,IAAAA,KAAK,EAAEA,KAAT;AAAgBwB,IAAAA,MAAM,EAAEA,MAAxB;AAAgCF,IAAAA,QAAQ,EAAEA,QAA1C;AAAoDS,IAAAA,UAAU,EAAEA;AAAhE,GAAhC,CADJ,CADI,EAGJ/C,KAAK,CAACqD,aAAN,CAAoBhD,UAApB,EAAgCxB,QAAQ,CAAC;AAAEiE,IAAAA,EAAE,EAAEA,EAAN;AAAUP,IAAAA,GAAG,EAAEA;AAAf,GAAD,EAAuBL,OAAvB,CAAxC,EAAyEV,OAAO,CAACgC,GAAR,CAAY,UAAUC,MAAV,EAAkB;AAAE,WAAQzD,KAAK,CAACqD,aAAN,CAAoBxC,yBAApB,EAA+ChC,QAAQ,CAAC,EAAD,EAAKuE,KAAL,EAAY;AAAEM,MAAAA,GAAG,EAAEnD,GAAG,CAACkD,MAAD,EAASrB,WAAT,CAAV;AAAiCqB,MAAAA,MAAM,EAAEA,MAAzC;AAAiDtB,MAAAA,UAAU,EAAEA,UAA7D;AAAyEC,MAAAA,WAAW,EAAEA,WAAtF;AAAmGI,MAAAA,MAAM,EAAEA,MAA3G;AAAmHC,MAAAA,eAAe,EAAEA;AAApI,KAAZ,CAAvD,CAAR;AAAsO,GAAtQ,CAAzE,CAHI,EAIJzC,KAAK,CAACqD,aAAN,CAAoBlD,cAApB,EAAoC,IAApC,EACIH,KAAK,CAACqD,aAAN,CAAoBzC,eAApB,EAAqC;AAAEuC,IAAAA,OAAO,EAAEA,OAAX;AAAoBD,IAAAA,KAAK,EAAEA,KAA3B;AAAkCtB,IAAAA,UAAU,EAAEA;AAA9C,GAArC,CADJ,CAJI,CAAR;AAMH,CAnBD;;AAoBAP,qBAAqB,CAACsC,SAAtB,GAAkC;AAC9BnC,EAAAA,OAAO,EAAEvB,SAAS,CAAC2D,OAAV,CAAkB3D,SAAS,CAAC4D,GAA5B,EAAiCd,UADZ;AAE9B/B,EAAAA,KAAK,EAAEf,SAAS,CAAC6D,MAFa;AAG9B5B,EAAAA,OAAO,EAAEjC,SAAS,CAAC8D,MAHW;AAI9B5B,EAAAA,UAAU,EAAElC,SAAS,CAAC+D,SAAV,CAAoB,CAC5B/D,SAAS,CAAC6D,MADkB,EAE5B7D,SAAS,CAACgE,IAFkB,EAG5BhE,SAAS,CAACiE,OAHkB,CAApB,CAJkB;AAS9B9B,EAAAA,WAAW,EAAEnC,SAAS,CAAC6D,MATO;AAU9BxB,EAAAA,QAAQ,EAAErC,SAAS,CAAC6D,MAVU;AAW9BtB,EAAAA,MAAM,EAAEvC,SAAS,CAAC6D,MAXY;AAY9BrB,EAAAA,eAAe,EAAExC,SAAS,CAACkE;AAZG,CAAlC;AAcA9C,qBAAqB,CAAC+C,YAAtB,GAAqC;AACjClC,EAAAA,OAAO,EAAE,EADwB;AAEjCC,EAAAA,UAAU,EAAE,MAFqB;AAGjCC,EAAAA,WAAW,EAAE,IAHoB;AAIjCG,EAAAA,GAAG,EAAE,IAJ4B;AAKjCE,EAAAA,eAAe,EAAE;AALgB,CAArC;AAOA,eAAepB,qBAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, FormHelperText, FormLabel, RadioGroup, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport get from 'lodash/get';\nimport { useInput, FieldTitle, warning } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport InputHelperText from './InputHelperText';\nimport RadioButtonGroupInputItem from './RadioButtonGroupInputItem';\nvar useStyles = makeStyles(function (theme) { return ({\n    label: {\n        transform: 'translate(0, 5px) scale(0.75)',\n        transformOrigin: \"top \" + (theme.direction === 'ltr' ? 'left' : 'right'),\n    },\n}); }, { name: 'RaRadioButtonGroupInput' });\n/**\n * An Input component for a radio button group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <RadioButtonGroupInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <RadioButtonGroupInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <RadioButtonGroupInput source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <RadioButtonGroupInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <RadioButtonGroup> component\n */\nvar RadioButtonGroupInput = function (props) {\n    var _a = props.choices, choices = _a === void 0 ? [] : _a, classesOverride = props.classes, format = props.format, helperText = props.helperText, label = props.label, _b = props.margin, margin = _b === void 0 ? 'dense' : _b, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, options = props.options, optionText = props.optionText, optionValue = props.optionValue, parse = props.parse, resource = props.resource, row = props.row, source = props.source, translateChoice = props.translateChoice, validate = props.validate, rest = __rest(props, [\"choices\", \"classes\", \"format\", \"helperText\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]);\n    var classes = useStyles(props);\n    warning(source === undefined, \"If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the source prop\");\n    warning(choices === undefined, \"If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the choices prop\");\n    var _c = useInput(__assign({ format: format,\n        onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        resource: resource,\n        source: source,\n        validate: validate }, rest)), id = _c.id, isRequired = _c.isRequired, _d = _c.meta, error = _d.error, touched = _d.touched, input = _c.input;\n    return (React.createElement(FormControl, __assign({ component: \"fieldset\", margin: margin, error: touched && !!error }, sanitizeRestProps(rest)),\n        React.createElement(FormLabel, { component: \"legend\", className: classes.label },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })),\n        React.createElement(RadioGroup, __assign({ id: id, row: row }, options), choices.map(function (choice) { return (React.createElement(RadioButtonGroupInputItem, __assign({}, input, { key: get(choice, optionValue), choice: choice, optionText: optionText, optionValue: optionValue, source: source, translateChoice: translateChoice }))); })),\n        React.createElement(FormHelperText, null,\n            React.createElement(InputHelperText, { touched: touched, error: error, helperText: helperText }))));\n};\nRadioButtonGroupInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.any).isRequired,\n    label: PropTypes.string,\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]),\n    optionValue: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\nRadioButtonGroupInput.defaultProps = {\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    row: true,\n    translateChoice: true,\n};\nexport default RadioButtonGroupInput;\n"]},"metadata":{},"sourceType":"module"}