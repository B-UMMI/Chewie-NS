{"ast":null,"code":"var _jsxFileName = \"/app/src/admin/Admin.tsx\";\nimport React from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url, options) => {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\nexport const Admin = () => {\n  return /*#__PURE__*/React.createElement(ReactAdmin, {\n    dataProvider: dataProvider,\n    authProvider: authProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, permissions => [permissions === 'admin' ? /*#__PURE__*/React.createElement(Resource, {\n    name: \"users\",\n    list: UserList,\n    edit: UserEdit,\n    create: UserCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }) : null]);\n};","map":{"version":3,"sources":["/app/src/admin/Admin.tsx"],"names":["React","fetchUtils","Admin","ReactAdmin","Resource","simpleRestProvider","authProvider","UserList","UserEdit","UserCreate","httpClient","url","options","headers","Headers","Accept","token","localStorage","getItem","set","fetchJson","dataProvider","permissions"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,KAAK,IAAIC,UAA9B,EAA0CC,QAA1C,QAA0D,aAA1D;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,SAA/C;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAWC,OAAX,KAA4B;AAC7C,MAAI,CAACA,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,EAAV;AACD;;AACD,MAAI,CAACA,OAAO,CAACC,OAAb,EAAsB;AACpBD,IAAAA,OAAO,CAACC,OAAR,GAAkB,IAAIC,OAAJ,CAAY;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAlB;AACD;;AACD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAN,EAAAA,OAAO,CAACC,OAAR,CAAgBM,GAAhB,CAAoB,eAApB,EAAsC,UAASH,KAAM,EAArD;AACA,SAAOf,UAAU,CAACmB,SAAX,CAAqBT,GAArB,EAA0BC,OAA1B,CAAP;AACD,CAVD;;AAYA,MAAMS,YAAY,GAAGhB,kBAAkB,CAAC,QAAD,EAAWK,UAAX,CAAvC;AAEA,OAAO,MAAMR,KAAS,GAAG,MAAM;AAC7B,sBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAEmB,YAA1B;AAAwC,IAAA,YAAY,EAAEf,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIgB,WAAD,IAAmC,CAClCA,WAAW,KAAK,OAAhB,gBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAEf,QAFR;AAGE,IAAA,IAAI,EAAEC,QAHR;AAIE,IAAA,MAAM,EAAEC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAOI,IAR8B,CADtC,CADF;AAcD,CAfM","sourcesContent":["import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\n\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'user') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n          />\n        ) : null,\n      ]}\n    </ReactAdmin>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}