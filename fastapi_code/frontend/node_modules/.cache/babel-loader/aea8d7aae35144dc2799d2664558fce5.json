{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nexport var GET_LIST = 'GET_LIST';\nexport var GET_ONE = 'GET_ONE';\nexport var GET_MANY = 'GET_MANY';\nexport var GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\nexport var CREATE = 'CREATE';\nexport var UPDATE = 'UPDATE';\nexport var UPDATE_MANY = 'UPDATE_MANY';\nexport var DELETE = 'DELETE';\nexport var DELETE_MANY = 'DELETE_MANY';\nexport var fetchActionsWithRecordResponse = [GET_ONE, CREATE, UPDATE];\nexport var fetchActionsWithArrayOfIdentifiedRecordsResponse = [GET_LIST, GET_MANY, GET_MANY_REFERENCE];\nexport var fetchActionsWithArrayOfRecordsResponse = __spreadArrays(fetchActionsWithArrayOfIdentifiedRecordsResponse, [UPDATE_MANY, DELETE_MANY]);\nexport var fetchActionsWithTotalResponse = [GET_LIST, GET_MANY_REFERENCE];\nexport var sanitizeFetchType = function (fetchType) {\n  switch (fetchType) {\n    case GET_LIST:\n      return 'getList';\n\n    case GET_ONE:\n      return 'getOne';\n\n    case GET_MANY:\n      return 'getMany';\n\n    case GET_MANY_REFERENCE:\n      return 'getManyReference';\n\n    case CREATE:\n      return 'create';\n\n    case UPDATE:\n      return 'update';\n\n    case UPDATE_MANY:\n      return 'updateMany';\n\n    case DELETE:\n      return 'delete';\n\n    case DELETE_MANY:\n      return 'deleteMany';\n\n    default:\n      return fetchType;\n  }\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/core/dataFetchActions.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","GET_LIST","GET_ONE","GET_MANY","GET_MANY_REFERENCE","CREATE","UPDATE","UPDATE_MANY","DELETE","DELETE_MANY","fetchActionsWithRecordResponse","fetchActionsWithArrayOfIdentifiedRecordsResponse","fetchActionsWithArrayOfRecordsResponse","fetchActionsWithTotalResponse","sanitizeFetchType","fetchType"],"mappings":"AAAA,IAAIA,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBC,EAAE,GAAGC,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGC,EAAlD,EAAsDD,CAAC,EAAvD,EAA2DD,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;;AAC3D,OAAK,IAAIC,CAAC,GAAGC,KAAK,CAACN,CAAD,CAAb,EAAkBO,CAAC,GAAG,CAAtB,EAAyBN,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EACI,KAAK,IAAIO,CAAC,GAAGL,SAAS,CAACF,CAAD,CAAjB,EAAsBQ,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACJ,MAAzC,EAAiDK,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACIF,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;AACR,SAAOJ,CAAP;AACH,CAND;;AAOA,OAAO,IAAIM,QAAQ,GAAG,UAAf;AACP,OAAO,IAAIC,OAAO,GAAG,SAAd;AACP,OAAO,IAAIC,QAAQ,GAAG,UAAf;AACP,OAAO,IAAIC,kBAAkB,GAAG,oBAAzB;AACP,OAAO,IAAIC,MAAM,GAAG,QAAb;AACP,OAAO,IAAIC,MAAM,GAAG,QAAb;AACP,OAAO,IAAIC,WAAW,GAAG,aAAlB;AACP,OAAO,IAAIC,MAAM,GAAG,QAAb;AACP,OAAO,IAAIC,WAAW,GAAG,aAAlB;AACP,OAAO,IAAIC,8BAA8B,GAAG,CAACR,OAAD,EAAUG,MAAV,EAAkBC,MAAlB,CAArC;AACP,OAAO,IAAIK,gDAAgD,GAAG,CAC1DV,QAD0D,EAE1DE,QAF0D,EAG1DC,kBAH0D,CAAvD;AAKP,OAAO,IAAIQ,sCAAsC,GAAGvB,cAAc,CAACsB,gDAAD,EAAmD,CACjHJ,WADiH,EAEjHE,WAFiH,CAAnD,CAA3D;AAIP,OAAO,IAAII,6BAA6B,GAAG,CAACZ,QAAD,EAAWG,kBAAX,CAApC;AACP,OAAO,IAAIU,iBAAiB,GAAG,UAAUC,SAAV,EAAqB;AAChD,UAAQA,SAAR;AACI,SAAKd,QAAL;AACI,aAAO,SAAP;;AACJ,SAAKC,OAAL;AACI,aAAO,QAAP;;AACJ,SAAKC,QAAL;AACI,aAAO,SAAP;;AACJ,SAAKC,kBAAL;AACI,aAAO,kBAAP;;AACJ,SAAKC,MAAL;AACI,aAAO,QAAP;;AACJ,SAAKC,MAAL;AACI,aAAO,QAAP;;AACJ,SAAKC,WAAL;AACI,aAAO,YAAP;;AACJ,SAAKC,MAAL;AACI,aAAO,QAAP;;AACJ,SAAKC,WAAL;AACI,aAAO,YAAP;;AACJ;AACI,aAAOM,SAAP;AApBR;AAsBH,CAvBM","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nexport var GET_LIST = 'GET_LIST';\nexport var GET_ONE = 'GET_ONE';\nexport var GET_MANY = 'GET_MANY';\nexport var GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\nexport var CREATE = 'CREATE';\nexport var UPDATE = 'UPDATE';\nexport var UPDATE_MANY = 'UPDATE_MANY';\nexport var DELETE = 'DELETE';\nexport var DELETE_MANY = 'DELETE_MANY';\nexport var fetchActionsWithRecordResponse = [GET_ONE, CREATE, UPDATE];\nexport var fetchActionsWithArrayOfIdentifiedRecordsResponse = [\n    GET_LIST,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n];\nexport var fetchActionsWithArrayOfRecordsResponse = __spreadArrays(fetchActionsWithArrayOfIdentifiedRecordsResponse, [\n    UPDATE_MANY,\n    DELETE_MANY,\n]);\nexport var fetchActionsWithTotalResponse = [GET_LIST, GET_MANY_REFERENCE];\nexport var sanitizeFetchType = function (fetchType) {\n    switch (fetchType) {\n        case GET_LIST:\n            return 'getList';\n        case GET_ONE:\n            return 'getOne';\n        case GET_MANY:\n            return 'getMany';\n        case GET_MANY_REFERENCE:\n            return 'getManyReference';\n        case CREATE:\n            return 'create';\n        case UPDATE:\n            return 'update';\n        case UPDATE_MANY:\n            return 'updateMany';\n        case DELETE:\n            return 'delete';\n        case DELETE_MANY:\n            return 'deleteMany';\n        default:\n            return fetchType;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}