{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport { fieldSubscriptionItems, ARRAY_ERROR, version as version$1 } from 'final-form';\nimport { useForm, useField, version as version$2 } from 'react-final-form';\nimport React__default, { createElement } from 'react'; // shared logic between components that use either render prop,\n// children render function, or component prop\n\nfunction renderComponent(props, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return createElement(component, _extends({}, rest, {\n      children: children,\n      render: render\n    })); // inject children back in\n  }\n\n  if (render) {\n    return render(children === undefined ? rest : _extends({}, rest, {\n      children: children\n    })); // inject children back in\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(rest);\n}\n\nvar defaultIsEqual = function defaultIsEqual(aArray, bArray) {\n  return aArray === bArray || Array.isArray(aArray) && Array.isArray(bArray) && aArray.length === bArray.length && !aArray.some(function (a, index) {\n    return a !== bArray[index];\n  });\n};\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar useFieldArray = function useFieldArray(name, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      defaultValue = _ref.defaultValue,\n      initialValue = _ref.initialValue,\n      _ref$isEqual = _ref.isEqual,\n      isEqual = _ref$isEqual === void 0 ? defaultIsEqual : _ref$isEqual,\n      validateProp = _ref.validate;\n\n  var form = useForm('useFieldArray');\n  var formMutators = form.mutators;\n  var hasMutators = !!(formMutators && formMutators.push && formMutators.pop);\n\n  if (!hasMutators) {\n    throw new Error('Array mutators not found. You need to provide the mutators from final-form-arrays to your form');\n  }\n\n  var mutators = useConstant(function () {\n    return (// curry the field name onto all mutator calls\n      Object.keys(formMutators).reduce(function (result, key) {\n        result[key] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return formMutators[key].apply(formMutators, [name].concat(args));\n        };\n\n        return result;\n      }, {})\n    );\n  });\n  var validate = useConstant(function () {\n    return function (value, allValues, meta) {\n      if (!validateProp) return undefined;\n      var error = validateProp(value, allValues, meta);\n\n      if (!error || Array.isArray(error)) {\n        return error;\n      } else {\n        var arrayError = [] // gross, but we have to set a string key on the array\n        ;\n        arrayError[ARRAY_ERROR] = error;\n        return arrayError;\n      }\n    };\n  });\n\n  var _useField = useField(name, {\n    subscription: _extends({}, subscription, {\n      length: true\n    }),\n    defaultValue: defaultValue,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    validate: validate,\n    format: function format(v) {\n      return v;\n    }\n  }),\n      _useField$meta = _useField.meta,\n      length = _useField$meta.length,\n      meta = _objectWithoutPropertiesLoose(_useField$meta, [\"length\"]),\n      input = _useField.input,\n      fieldState = _objectWithoutPropertiesLoose(_useField, [\"meta\", \"input\"]);\n\n  var forEach = function forEach(iterator) {\n    // required || for Flow, but results in uncovered line in Jest/Istanbul\n    // istanbul ignore next\n    var len = length || 0;\n\n    for (var i = 0; i < len; i++) {\n      iterator(name + \"[\" + i + \"]\", i);\n    }\n  };\n\n  var map = function map(iterator) {\n    // required || for Flow, but results in uncovered line in Jest/Istanbul\n    // istanbul ignore next\n    var len = length || 0;\n    var results = [];\n\n    for (var i = 0; i < len; i++) {\n      results.push(iterator(name + \"[\" + i + \"]\", i));\n    }\n\n    return results;\n  };\n\n  return {\n    fields: _extends({\n      name: name,\n      forEach: forEach,\n      length: length || 0,\n      map: map\n    }, mutators, {}, fieldState, {\n      value: input.value\n    }),\n    meta: meta\n  };\n};\n\nvar version = \"3.1.2\";\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version$2,\n  'react-final-form-arrays': version\n};\n\nvar FieldArray = function FieldArray(_ref) {\n  var name = _ref.name,\n      subscription = _ref.subscription,\n      defaultValue = _ref.defaultValue,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      validate = _ref.validate,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"name\", \"subscription\", \"defaultValue\", \"initialValue\", \"isEqual\", \"validate\"]);\n\n  var _useFieldArray = useFieldArray(name, {\n    subscription: subscription,\n    defaultValue: defaultValue,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    validate: validate\n  }),\n      fields = _useFieldArray.fields,\n      meta = _useFieldArray.meta;\n\n  return renderComponent(_extends({\n    fields: fields,\n    meta: _extends({}, meta, {\n      __versions: versions\n    })\n  }, rest), \"FieldArray(\" + name + \")\");\n};\n\nexport { FieldArray, useFieldArray, version };","map":{"version":3,"sources":["/node_modules/react-final-form-arrays/dist/react-final-form-arrays.es.js"],"names":["_extends","_objectWithoutPropertiesLoose","fieldSubscriptionItems","ARRAY_ERROR","version","version$1","useForm","useField","version$2","React__default","createElement","renderComponent","props","name","render","children","component","rest","undefined","Error","defaultIsEqual","aArray","bArray","Array","isArray","length","some","a","index","useConstant","init","ref","useRef","current","all","reduce","result","key","useFieldArray","_temp","_ref","_ref$subscription","subscription","defaultValue","initialValue","_ref$isEqual","isEqual","validateProp","validate","form","formMutators","mutators","hasMutators","push","pop","Object","keys","_len","arguments","args","_key","apply","concat","value","allValues","meta","error","arrayError","_useField","format","v","_useField$meta","input","fieldState","forEach","iterator","len","i","map","results","fields","versions","FieldArray","_useFieldArray","__versions"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport { fieldSubscriptionItems, ARRAY_ERROR, version as version$1 } from 'final-form';\nimport { useForm, useField, version as version$2 } from 'react-final-form';\nimport React__default, { createElement } from 'react';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return createElement(component, _extends({}, rest, {\n      children: children,\n      render: render\n    })); // inject children back in\n  }\n\n  if (render) {\n    return render(children === undefined ? rest : _extends({}, rest, {\n      children: children\n    })); // inject children back in\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(rest);\n}\n\nvar defaultIsEqual = function defaultIsEqual(aArray, bArray) {\n  return aArray === bArray || Array.isArray(aArray) && Array.isArray(bArray) && aArray.length === bArray.length && !aArray.some(function (a, index) {\n    return a !== bArray[index];\n  });\n};\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar useFieldArray = function useFieldArray(name, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      defaultValue = _ref.defaultValue,\n      initialValue = _ref.initialValue,\n      _ref$isEqual = _ref.isEqual,\n      isEqual = _ref$isEqual === void 0 ? defaultIsEqual : _ref$isEqual,\n      validateProp = _ref.validate;\n\n  var form = useForm('useFieldArray');\n  var formMutators = form.mutators;\n  var hasMutators = !!(formMutators && formMutators.push && formMutators.pop);\n\n  if (!hasMutators) {\n    throw new Error('Array mutators not found. You need to provide the mutators from final-form-arrays to your form');\n  }\n\n  var mutators = useConstant(function () {\n    return (// curry the field name onto all mutator calls\n      Object.keys(formMutators).reduce(function (result, key) {\n        result[key] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return formMutators[key].apply(formMutators, [name].concat(args));\n        };\n\n        return result;\n      }, {})\n    );\n  });\n  var validate = useConstant(function () {\n    return function (value, allValues, meta) {\n      if (!validateProp) return undefined;\n      var error = validateProp(value, allValues, meta);\n\n      if (!error || Array.isArray(error)) {\n        return error;\n      } else {\n        var arrayError = [] // gross, but we have to set a string key on the array\n        ;\n        arrayError[ARRAY_ERROR] = error;\n        return arrayError;\n      }\n    };\n  });\n\n  var _useField = useField(name, {\n    subscription: _extends({}, subscription, {\n      length: true\n    }),\n    defaultValue: defaultValue,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    validate: validate,\n    format: function format(v) {\n      return v;\n    }\n  }),\n      _useField$meta = _useField.meta,\n      length = _useField$meta.length,\n      meta = _objectWithoutPropertiesLoose(_useField$meta, [\"length\"]),\n      input = _useField.input,\n      fieldState = _objectWithoutPropertiesLoose(_useField, [\"meta\", \"input\"]);\n\n  var forEach = function forEach(iterator) {\n    // required || for Flow, but results in uncovered line in Jest/Istanbul\n    // istanbul ignore next\n    var len = length || 0;\n\n    for (var i = 0; i < len; i++) {\n      iterator(name + \"[\" + i + \"]\", i);\n    }\n  };\n\n  var map = function map(iterator) {\n    // required || for Flow, but results in uncovered line in Jest/Istanbul\n    // istanbul ignore next\n    var len = length || 0;\n    var results = [];\n\n    for (var i = 0; i < len; i++) {\n      results.push(iterator(name + \"[\" + i + \"]\", i));\n    }\n\n    return results;\n  };\n\n  return {\n    fields: _extends({\n      name: name,\n      forEach: forEach,\n      length: length || 0,\n      map: map\n    }, mutators, {}, fieldState, {\n      value: input.value\n    }),\n    meta: meta\n  };\n};\n\nvar version = \"3.1.2\";\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version$2,\n  'react-final-form-arrays': version\n};\n\nvar FieldArray = function FieldArray(_ref) {\n  var name = _ref.name,\n      subscription = _ref.subscription,\n      defaultValue = _ref.defaultValue,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      validate = _ref.validate,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"name\", \"subscription\", \"defaultValue\", \"initialValue\", \"isEqual\", \"validate\"]);\n\n  var _useFieldArray = useFieldArray(name, {\n    subscription: subscription,\n    defaultValue: defaultValue,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    validate: validate\n  }),\n      fields = _useFieldArray.fields,\n      meta = _useFieldArray.meta;\n\n  return renderComponent(_extends({\n    fields: fields,\n    meta: _extends({}, meta, {\n      __versions: versions\n    })\n  }, rest), \"FieldArray(\" + name + \")\");\n};\n\nexport { FieldArray, useFieldArray, version };\n"]},"metadata":{},"sourceType":"module"}