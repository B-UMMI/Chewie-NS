{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { default as warning } from '../util/warning';\nimport useTranslate from './useTranslate';\nimport useLocale from './useLocale';\n/**\n * Higher-Order Component for getting access to the `locale` and the `translate` function in props.\n *\n * Requires that the app is decorated by the <TranslationProvider> to inject\n * the translation dictionaries and function in the context.\n *\n * @example\n *     import * as React from \"react\";\n *     import { translate } from 'react-admin';\n *\n *     const MyHelloButton = ({ translate }) => (\n *         <button>{translate('myroot.hello.world')}</button>\n *     );\n *\n *     export default translate(MyHelloButton);\n *\n * @param {*} BaseComponent The component to decorate\n */\n\nvar withTranslate = function (BaseComponent) {\n  warning(typeof BaseComponent === 'string', \"The translate function is a Higher Order Component, and should not be called directly with a translation key. Use the translate function passed as prop to your component props instead:\\n\\nconst MyHelloButton = ({ translate }) => (\\n    <button>{translate('myroot.hello.world')}</button>\\n);\");\n\n  var TranslatedComponent = function (props) {\n    var translate = useTranslate();\n    var locale = useLocale();\n    return React.createElement(BaseComponent, __assign({}, props, {\n      translate: translate,\n      locale: locale\n    }));\n  };\n\n  TranslatedComponent.defaultProps = BaseComponent.defaultProps;\n  return TranslatedComponent;\n};\n\nexport default withTranslate;","map":{"version":3,"sources":["/node_modules/ra-core/esm/i18n/translate.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","default","warning","useTranslate","useLocale","withTranslate","BaseComponent","TranslatedComponent","props","translate","locale","createElement","defaultProps"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAO,IAAIC,OAApB,QAAmC,iBAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA;;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,aAAa,GAAG,UAAUC,aAAV,EAAyB;AACzCJ,EAAAA,OAAO,CAAC,OAAOI,aAAP,KAAyB,QAA1B,EAAoC,oSAApC,CAAP;;AACA,MAAIC,mBAAmB,GAAG,UAAUC,KAAV,EAAiB;AACvC,QAAIC,SAAS,GAAGN,YAAY,EAA5B;AACA,QAAIO,MAAM,GAAGN,SAAS,EAAtB;AACA,WAAQJ,KAAK,CAACW,aAAN,CAAoBL,aAApB,EAAmCpB,QAAQ,CAAC,EAAD,EAAKsB,KAAL,EAAY;AAAEC,MAAAA,SAAS,EAAEA,SAAb;AAAwBC,MAAAA,MAAM,EAAEA;AAAhC,KAAZ,CAA3C,CAAR;AACH,GAJD;;AAKAH,EAAAA,mBAAmB,CAACK,YAApB,GAAmCN,aAAa,CAACM,YAAjD;AACA,SAAOL,mBAAP;AACH,CATD;;AAUA,eAAeF,aAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { default as warning } from '../util/warning';\nimport useTranslate from './useTranslate';\nimport useLocale from './useLocale';\n/**\n * Higher-Order Component for getting access to the `locale` and the `translate` function in props.\n *\n * Requires that the app is decorated by the <TranslationProvider> to inject\n * the translation dictionaries and function in the context.\n *\n * @example\n *     import * as React from \"react\";\n *     import { translate } from 'react-admin';\n *\n *     const MyHelloButton = ({ translate }) => (\n *         <button>{translate('myroot.hello.world')}</button>\n *     );\n *\n *     export default translate(MyHelloButton);\n *\n * @param {*} BaseComponent The component to decorate\n */\nvar withTranslate = function (BaseComponent) {\n    warning(typeof BaseComponent === 'string', \"The translate function is a Higher Order Component, and should not be called directly with a translation key. Use the translate function passed as prop to your component props instead:\\n\\nconst MyHelloButton = ({ translate }) => (\\n    <button>{translate('myroot.hello.world')}</button>\\n);\");\n    var TranslatedComponent = function (props) {\n        var translate = useTranslate();\n        var locale = useLocale();\n        return (React.createElement(BaseComponent, __assign({}, props, { translate: translate, locale: locale })));\n    };\n    TranslatedComponent.defaultProps = BaseComponent.defaultProps;\n    return TranslatedComponent;\n};\nexport default withTranslate;\n"]},"metadata":{},"sourceType":"module"}