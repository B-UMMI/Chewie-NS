{"ast":null,"code":"import { useState, useRef, useEffect, useCallback } from 'react';\nimport isEqual from 'lodash/isEqual'; // thanks Kent C Dodds for the following helpers\n\nexport function useSafeSetState(initialState) {\n  var _a = useState(initialState),\n      state = _a[0],\n      setState = _a[1];\n\n  var mountedRef = useRef(false);\n  useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      return mountedRef.current = false;\n    };\n  }, []);\n  var safeSetState = useCallback(function (args) {\n    if (mountedRef.current) {\n      return setState(args);\n    }\n  }, [mountedRef, setState]);\n  return [state, safeSetState];\n}\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\nexport function useDeepCompareEffect(callback, inputs) {\n  var cleanupRef = useRef();\n  useEffect(function () {\n    if (!isEqual(previousInputs, inputs)) {\n      cleanupRef.current = callback();\n    }\n\n    return cleanupRef.current;\n  });\n  var previousInputs = usePrevious(inputs);\n}\nexport function useTimeout(ms) {\n  if (ms === void 0) {\n    ms = 0;\n  }\n\n  var _a = useState(false),\n      ready = _a[0],\n      setReady = _a[1];\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setReady(true);\n    }, ms);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, [ms]);\n  return ready;\n}","map":{"version":3,"sources":["/node_modules/ra-core/esm/util/hooks.js"],"names":["useState","useRef","useEffect","useCallback","isEqual","useSafeSetState","initialState","_a","state","setState","mountedRef","current","safeSetState","args","usePrevious","value","ref","useDeepCompareEffect","callback","inputs","cleanupRef","previousInputs","useTimeout","ms","ready","setReady","timer","setTimeout","clearTimeout"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,YAAzB,EAAuC;AAC1C,MAAIC,EAAE,GAAGP,QAAQ,CAACM,YAAD,CAAjB;AAAA,MAAiCE,KAAK,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,MAAgDE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAA7D;;AACA,MAAIG,UAAU,GAAGT,MAAM,CAAC,KAAD,CAAvB;AACAC,EAAAA,SAAS,CAAC,YAAY;AAClBQ,IAAAA,UAAU,CAACC,OAAX,GAAqB,IAArB;AACA,WAAO,YAAY;AAAE,aAAQD,UAAU,CAACC,OAAX,GAAqB,KAA7B;AAAsC,KAA3D;AACH,GAHQ,EAGN,EAHM,CAAT;AAIA,MAAIC,YAAY,GAAGT,WAAW,CAAC,UAAUU,IAAV,EAAgB;AAC3C,QAAIH,UAAU,CAACC,OAAf,EAAwB;AACpB,aAAOF,QAAQ,CAACI,IAAD,CAAf;AACH;AACJ,GAJ6B,EAI3B,CAACH,UAAD,EAAaD,QAAb,CAJ2B,CAA9B;AAKA,SAAO,CAACD,KAAD,EAAQI,YAAR,CAAP;AACH;AACD,OAAO,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC/B,MAAIC,GAAG,GAAGf,MAAM,EAAhB;AACAC,EAAAA,SAAS,CAAC,YAAY;AAClBc,IAAAA,GAAG,CAACL,OAAJ,GAAcI,KAAd;AACH,GAFQ,CAAT;AAGA,SAAOC,GAAG,CAACL,OAAX;AACH;AACD,OAAO,SAASM,oBAAT,CAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;AACnD,MAAIC,UAAU,GAAGnB,MAAM,EAAvB;AACAC,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACE,OAAO,CAACiB,cAAD,EAAiBF,MAAjB,CAAZ,EAAsC;AAClCC,MAAAA,UAAU,CAACT,OAAX,GAAqBO,QAAQ,EAA7B;AACH;;AACD,WAAOE,UAAU,CAACT,OAAlB;AACH,GALQ,CAAT;AAMA,MAAIU,cAAc,GAAGP,WAAW,CAACK,MAAD,CAAhC;AACH;AACD,OAAO,SAASG,UAAT,CAAoBC,EAApB,EAAwB;AAC3B,MAAIA,EAAE,KAAK,KAAK,CAAhB,EAAmB;AAAEA,IAAAA,EAAE,GAAG,CAAL;AAAS;;AAC9B,MAAIhB,EAAE,GAAGP,QAAQ,CAAC,KAAD,CAAjB;AAAA,MAA0BwB,KAAK,GAAGjB,EAAE,CAAC,CAAD,CAApC;AAAA,MAAyCkB,QAAQ,GAAGlB,EAAE,CAAC,CAAD,CAAtD;;AACAL,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIwB,KAAK,GAAGC,UAAU,CAAC,YAAY;AAC/BF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFqB,EAEnBF,EAFmB,CAAtB;AAGA,WAAO,YAAY;AACfK,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGH,GAPQ,EAON,CAACH,EAAD,CAPM,CAAT;AAQA,SAAOC,KAAP;AACH","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\nimport isEqual from 'lodash/isEqual';\n// thanks Kent C Dodds for the following helpers\nexport function useSafeSetState(initialState) {\n    var _a = useState(initialState), state = _a[0], setState = _a[1];\n    var mountedRef = useRef(false);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () { return (mountedRef.current = false); };\n    }, []);\n    var safeSetState = useCallback(function (args) {\n        if (mountedRef.current) {\n            return setState(args);\n        }\n    }, [mountedRef, setState]);\n    return [state, safeSetState];\n}\nexport function usePrevious(value) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = value;\n    });\n    return ref.current;\n}\nexport function useDeepCompareEffect(callback, inputs) {\n    var cleanupRef = useRef();\n    useEffect(function () {\n        if (!isEqual(previousInputs, inputs)) {\n            cleanupRef.current = callback();\n        }\n        return cleanupRef.current;\n    });\n    var previousInputs = usePrevious(inputs);\n}\nexport function useTimeout(ms) {\n    if (ms === void 0) { ms = 0; }\n    var _a = useState(false), ready = _a[0], setReady = _a[1];\n    useEffect(function () {\n        var timer = setTimeout(function () {\n            setReady(true);\n        }, ms);\n        return function () {\n            clearTimeout(timer);\n        };\n    }, [ms]);\n    return ready;\n}\n"]},"metadata":{},"sourceType":"module"}