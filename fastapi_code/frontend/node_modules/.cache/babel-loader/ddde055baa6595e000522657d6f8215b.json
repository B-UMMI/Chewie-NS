{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldTitle } from 'ra-core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    label: {\n      position: 'relative'\n    },\n    value: {\n      fontFamily: theme.typography.fontFamily,\n      color: 'currentColor',\n      padding: theme.spacing(1) + \"px 0 \" + theme.spacing(1) / 2 + \"px\",\n      border: 0,\n      boxSizing: 'content-box',\n      verticalAlign: 'middle',\n      background: 'none',\n      margin: 0,\n      display: 'block',\n      width: '100%'\n    }\n  };\n}, {\n  name: 'RaLabeled'\n});\n/**\n * Use any component as read-only Input, labeled just like other Inputs.\n *\n * Useful to use a Field in the Edit or Create components.\n * The child component will receive the current record.\n *\n * This component name doesn't have a typo. We had to choose between\n * the American English \"Labeled\", and the British English \"Labelled\".\n * We flipped a coin.\n *\n * @example\n * <Labeled label=\"Comments\">\n *     <FooComponent source=\"title\" />\n * </Labeled>\n */\n\nvar Labeled = function (props) {\n  var children = props.children,\n      className = props.className,\n      classesOverride = props.classes,\n      fullWidth = props.fullWidth,\n      id = props.id,\n      input = props.input,\n      isRequired = props.isRequired,\n      label = props.label,\n      _a = props.margin,\n      margin = _a === void 0 ? 'dense' : _a,\n      meta = props.meta,\n      resource = props.resource,\n      source = props.source,\n      rest = __rest(props, [\"children\", \"className\", \"classes\", \"fullWidth\", \"id\", \"input\", \"isRequired\", \"label\", \"margin\", \"meta\", \"resource\", \"source\"]);\n\n  var classes = useStyles(props);\n\n  if (!label && !source) {\n    // @ts-ignore\n    var name_1 = children && children.type && children.type.name;\n    throw new Error(\"Cannot create label for component <\" + name_1 + \">: You must set either the label or source props. You can also disable automated label insertion by setting 'addLabel: false' in the component default props\");\n  }\n\n  var restProps = fullWidth ? __assign(__assign({}, rest), {\n    fullWidth: fullWidth\n  }) : rest;\n  return React.createElement(FormControl, {\n    className: className,\n    fullWidth: fullWidth,\n    error: meta && meta.touched && !!meta.error,\n    margin: margin\n  }, React.createElement(InputLabel, {\n    htmlFor: id,\n    shrink: true,\n    className: classes.label\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired\n  })), React.createElement(\"div\", {\n    className: classes.value\n  }, children && typeof children.type !== 'string' ? React.cloneElement(children, __assign({\n    input: input,\n    resource: resource\n  }, restProps)) : children));\n};\n\nLabeled.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  input: PropTypes.object,\n  isRequired: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  meta: PropTypes.object,\n  onChange: PropTypes.func,\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  labelStyle: PropTypes.object\n};\nexport default Labeled;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/Labeled.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","InputLabel","FormControl","makeStyles","FieldTitle","useStyles","theme","label","position","value","fontFamily","typography","color","padding","spacing","border","boxSizing","verticalAlign","background","margin","display","width","name","Labeled","props","children","className","classesOverride","classes","fullWidth","id","input","isRequired","_a","meta","resource","source","rest","name_1","type","Error","restProps","createElement","error","touched","htmlFor","shrink","cloneElement","propTypes","basePath","string","element","object","bool","oneOfType","onChange","func","record","labelStyle"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldTitle } from 'ra-core';\nvar useStyles = makeStyles(function (theme) { return ({\n    label: {\n        position: 'relative',\n    },\n    value: {\n        fontFamily: theme.typography.fontFamily,\n        color: 'currentColor',\n        padding: theme.spacing(1) + \"px 0 \" + theme.spacing(1) / 2 + \"px\",\n        border: 0,\n        boxSizing: 'content-box',\n        verticalAlign: 'middle',\n        background: 'none',\n        margin: 0,\n        display: 'block',\n        width: '100%',\n    },\n}); }, { name: 'RaLabeled' });\n/**\n * Use any component as read-only Input, labeled just like other Inputs.\n *\n * Useful to use a Field in the Edit or Create components.\n * The child component will receive the current record.\n *\n * This component name doesn't have a typo. We had to choose between\n * the American English \"Labeled\", and the British English \"Labelled\".\n * We flipped a coin.\n *\n * @example\n * <Labeled label=\"Comments\">\n *     <FooComponent source=\"title\" />\n * </Labeled>\n */\nvar Labeled = function (props) {\n    var children = props.children, className = props.className, classesOverride = props.classes, fullWidth = props.fullWidth, id = props.id, input = props.input, isRequired = props.isRequired, label = props.label, _a = props.margin, margin = _a === void 0 ? 'dense' : _a, meta = props.meta, resource = props.resource, source = props.source, rest = __rest(props, [\"children\", \"className\", \"classes\", \"fullWidth\", \"id\", \"input\", \"isRequired\", \"label\", \"margin\", \"meta\", \"resource\", \"source\"]);\n    var classes = useStyles(props);\n    if (!label && !source) {\n        // @ts-ignore\n        var name_1 = children && children.type && children.type.name;\n        throw new Error(\"Cannot create label for component <\" + name_1 + \">: You must set either the label or source props. You can also disable automated label insertion by setting 'addLabel: false' in the component default props\");\n    }\n    var restProps = fullWidth ? __assign(__assign({}, rest), { fullWidth: fullWidth }) : rest;\n    return (React.createElement(FormControl, { className: className, fullWidth: fullWidth, error: meta && meta.touched && !!meta.error, margin: margin },\n        React.createElement(InputLabel, { htmlFor: id, shrink: true, className: classes.label },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })),\n        React.createElement(\"div\", { className: classes.value }, children && typeof children.type !== 'string'\n            ? React.cloneElement(children, __assign({ input: input,\n                resource: resource }, restProps))\n            : children)));\n};\nLabeled.propTypes = {\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    fullWidth: PropTypes.bool,\n    id: PropTypes.string,\n    input: PropTypes.object,\n    isRequired: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    meta: PropTypes.object,\n    onChange: PropTypes.func,\n    record: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    labelStyle: PropTypes.object,\n};\nexport default Labeled;\n"]},"metadata":{},"sourceType":"module"}