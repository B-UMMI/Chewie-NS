{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { isRequired, FieldTitle, composeValidators } from 'ra-core';\nimport { useFieldArray } from 'react-final-form-arrays';\nimport { InputLabel, FormControl } from '@material-ui/core';\nimport sanitizeRestProps from './sanitizeRestProps';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-final-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see https://github.com/final-form/react-final-form-arrays\n */\n\nvar ArrayInput = function (_a) {\n  var className = _a.className,\n      defaultValue = _a.defaultValue,\n      label = _a.label,\n      children = _a.children,\n      record = _a.record,\n      resource = _a.resource,\n      source = _a.source,\n      validate = _a.validate,\n      variant = _a.variant,\n      _b = _a.margin,\n      margin = _b === void 0 ? 'dense' : _b,\n      rest = __rest(_a, [\"className\", \"defaultValue\", \"label\", \"children\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"margin\"]);\n\n  var sanitizedValidate = Array.isArray(validate) ? composeValidators(validate) : validate;\n  var fieldProps = useFieldArray(source, __assign({\n    initialValue: defaultValue,\n    validate: sanitizedValidate\n  }, rest));\n  return React.createElement(FormControl, __assign({\n    fullWidth: true,\n    margin: \"normal\",\n    className: className\n  }, sanitizeRestProps(rest)), React.createElement(InputLabel, {\n    htmlFor: source,\n    shrink: true\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired(validate)\n  })), cloneElement(Children.only(children), __assign(__assign({}, fieldProps), {\n    record: record,\n    resource: resource,\n    source: source,\n    variant: variant,\n    margin: margin\n  })));\n};\n\nArrayInput.propTypes = {\n  // @ts-ignore\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultValue: PropTypes.any,\n  isRequired: PropTypes.bool,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  record: PropTypes.object,\n  options: PropTypes.object,\n  validate: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.func)])\n};\nArrayInput.defaultProps = {\n  options: {},\n  fullWidth: true\n};\nexport default ArrayInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/ArrayInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","Children","PropTypes","isRequired","FieldTitle","composeValidators","useFieldArray","InputLabel","FormControl","sanitizeRestProps","ArrayInput","_a","className","defaultValue","label","children","record","resource","source","validate","variant","_b","margin","rest","sanitizedValidate","Array","isArray","fieldProps","initialValue","createElement","fullWidth","htmlFor","shrink","only","propTypes","node","string","any","bool","object","options","oneOfType","func","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { isRequired, FieldTitle, composeValidators } from 'ra-core';\nimport { useFieldArray } from 'react-final-form-arrays';\nimport { InputLabel, FormControl } from '@material-ui/core';\nimport sanitizeRestProps from './sanitizeRestProps';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-final-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see https://github.com/final-form/react-final-form-arrays\n */\nvar ArrayInput = function (_a) {\n    var className = _a.className, defaultValue = _a.defaultValue, label = _a.label, children = _a.children, record = _a.record, resource = _a.resource, source = _a.source, validate = _a.validate, variant = _a.variant, _b = _a.margin, margin = _b === void 0 ? 'dense' : _b, rest = __rest(_a, [\"className\", \"defaultValue\", \"label\", \"children\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"margin\"]);\n    var sanitizedValidate = Array.isArray(validate)\n        ? composeValidators(validate)\n        : validate;\n    var fieldProps = useFieldArray(source, __assign({ initialValue: defaultValue, validate: sanitizedValidate }, rest));\n    return (React.createElement(FormControl, __assign({ fullWidth: true, margin: \"normal\", className: className }, sanitizeRestProps(rest)),\n        React.createElement(InputLabel, { htmlFor: source, shrink: true },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired(validate) })),\n        cloneElement(Children.only(children), __assign(__assign({}, fieldProps), { record: record,\n            resource: resource,\n            source: source,\n            variant: variant,\n            margin: margin }))));\n};\nArrayInput.propTypes = {\n    // @ts-ignore\n    children: PropTypes.node,\n    className: PropTypes.string,\n    defaultValue: PropTypes.any,\n    isRequired: PropTypes.bool,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    record: PropTypes.object,\n    options: PropTypes.object,\n    validate: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.arrayOf(PropTypes.func),\n    ]),\n};\nArrayInput.defaultProps = {\n    options: {},\n    fullWidth: true,\n};\nexport default ArrayInput;\n"]},"metadata":{},"sourceType":"module"}