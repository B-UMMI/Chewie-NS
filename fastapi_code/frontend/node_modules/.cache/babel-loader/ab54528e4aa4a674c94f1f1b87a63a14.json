{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showNotification } from '../actions/notificationActions';\n/**\n * Hook for Notification Side Effect\n *\n * @example\n *\n * const notify = useNotify();\n * // simple message (info level)\n * notify('Level complete');\n * // specify level\n * notify('A problem occurred', 'warning')\n * // pass arguments to the translation function\n * notify('Deleted %{count} elements', 'info', { smart_count: 23 })\n * // show the action as undoable in the notification\n * notify('Post renamed', 'info', {}, true)\n */\n\nvar useNotify = function () {\n  var dispatch = useDispatch();\n  return useCallback(function (message, type, messageArgs, undoable, autoHideDuration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (messageArgs === void 0) {\n      messageArgs = {};\n    }\n\n    if (undoable === void 0) {\n      undoable = false;\n    }\n\n    dispatch(showNotification(message, type, {\n      messageArgs: messageArgs,\n      undoable: undoable,\n      autoHideDuration: autoHideDuration\n    }));\n  }, [dispatch]);\n};\n\nexport default useNotify;","map":{"version":3,"sources":["/node_modules/ra-core/esm/sideEffect/useNotify.js"],"names":["useCallback","useDispatch","showNotification","useNotify","dispatch","message","type","messageArgs","undoable","autoHideDuration"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAkC,gCAAlC;AACA;;;;;;;;;;;;;;;;AAeA,IAAIC,SAAS,GAAG,YAAY;AACxB,MAAIC,QAAQ,GAAGH,WAAW,EAA1B;AACA,SAAOD,WAAW,CAAC,UAAUK,OAAV,EAAmBC,IAAnB,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,gBAAhD,EAAkE;AACjF,QAAIH,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG,MAAP;AAAgB;;AACvC,QAAIC,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,MAAAA,WAAW,GAAG,EAAd;AAAmB;;AACjD,QAAIC,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB;;AAC9CJ,IAAAA,QAAQ,CAACF,gBAAgB,CAACG,OAAD,EAAUC,IAAV,EAAgB;AACrCC,MAAAA,WAAW,EAAEA,WADwB;AAErCC,MAAAA,QAAQ,EAAEA,QAF2B;AAGrCC,MAAAA,gBAAgB,EAAEA;AAHmB,KAAhB,CAAjB,CAAR;AAKH,GATiB,EASf,CAACL,QAAD,CATe,CAAlB;AAUH,CAZD;;AAaA,eAAeD,SAAf","sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showNotification, } from '../actions/notificationActions';\n/**\n * Hook for Notification Side Effect\n *\n * @example\n *\n * const notify = useNotify();\n * // simple message (info level)\n * notify('Level complete');\n * // specify level\n * notify('A problem occurred', 'warning')\n * // pass arguments to the translation function\n * notify('Deleted %{count} elements', 'info', { smart_count: 23 })\n * // show the action as undoable in the notification\n * notify('Post renamed', 'info', {}, true)\n */\nvar useNotify = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (message, type, messageArgs, undoable, autoHideDuration) {\n        if (type === void 0) { type = 'info'; }\n        if (messageArgs === void 0) { messageArgs = {}; }\n        if (undoable === void 0) { undoable = false; }\n        dispatch(showNotification(message, type, {\n            messageArgs: messageArgs,\n            undoable: undoable,\n            autoHideDuration: autoHideDuration,\n        }));\n    }, [dispatch]);\n};\nexport default useNotify;\n"]},"metadata":{},"sourceType":"module"}