{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useReducer, useEffect, useRef, useCallback } from 'react';\nimport { SORT_ASC, SORT_DESC } from '../reducer/admin/resource/list/queryReducer';\n\nvar sortReducer = function (state, action) {\n  switch (action.type) {\n    case 'SET_SORT':\n      return action.payload.sort;\n\n    case 'SET_SORT_FIELD':\n      {\n        var field = action.payload.field;\n        var order = state.field === field ? state.order === SORT_ASC ? SORT_DESC : SORT_ASC : SORT_ASC;\n        return {\n          field: field,\n          order: order\n        };\n      }\n\n    case 'SET_SORT_ORDER':\n      {\n        var order = action.payload.order;\n        return __assign(__assign({}, state), {\n          order: order\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var defaultSort = {\n  field: 'id',\n  order: 'DESC'\n};\n/**\n * set the sort { field, order }\n * @name setSort\n * @function\n * @param {Sort} sort the sort object\n */\n\n/**\n * set the sort field, swap the order if the field is the same\n * @name setSortField\n * @function\n * @param {string} field the sort field\n */\n\n/**\n * set the sort order\n * @name setSortOrder\n * @function\n * @param {string} order the sort order eiather ASC or DESC\n */\n\n/**\n * @typedef SortProps\n * @type {Object}\n * @property {Object} sort: the sort object.\n * @property {string} sort.field: the sort object.\n * @property {'ASC' | 'DESC'} sort.order: the sort object.\n * @property {setSort} setSort\n * @property {setSortField} setSortField\n * @property {setSortOrder} setSortOrder\n */\n\n/**\n * Hooks to provide sort state\n *\n * @example\n *\n * const { sort, setSort, setSortField, setSortOrder } = useSort({\n *      field: 'name',\n *      order: 'ASC',\n * });\n *\n * setSort({ field: 'name', order: 'ASC' });\n * // is the same as\n * setSortField('name');\n * setSortOrder('ASC');\n *\n * @param {Object} initialSort\n * @param {string} initialSort.field The initial sort field\n * @param {string} initialSort.order The initial sort order\n * @returns {SortProps} The sort props\n */\n\nvar useSortState = function (initialSort) {\n  if (initialSort === void 0) {\n    initialSort = defaultSort;\n  }\n\n  var _a = useReducer(sortReducer, initialSort),\n      sort = _a[0],\n      dispatch = _a[1];\n\n  var isFirstRender = useRef(true);\n  useEffect(function () {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    dispatch({\n      type: 'SET_SORT',\n      payload: {\n        sort: initialSort\n      }\n    });\n  }, [initialSort.field, initialSort.order]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    setSort: useCallback(function (sort) {\n      return dispatch({\n        type: 'SET_SORT',\n        payload: {\n          sort: sort\n        }\n      });\n    }, [dispatch]),\n    setSortField: useCallback(function (field) {\n      return dispatch({\n        type: 'SET_SORT_FIELD',\n        payload: {\n          field: field\n        }\n      });\n    }, [dispatch]),\n    setSortOrder: useCallback(function (order) {\n      return dispatch({\n        type: 'SET_SORT_ORDER',\n        payload: {\n          order: order\n        }\n      });\n    }, [dispatch]),\n    sort: sort\n  };\n};\n\nexport default useSortState;","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/useSortState.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useReducer","useEffect","useRef","useCallback","SORT_ASC","SORT_DESC","sortReducer","state","action","type","payload","sort","field","order","defaultSort","useSortState","initialSort","_a","dispatch","isFirstRender","current","setSort","setSortField","setSortOrder"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useReducer, useEffect, useRef, useCallback } from 'react';\nimport { SORT_ASC, SORT_DESC, } from '../reducer/admin/resource/list/queryReducer';\nvar sortReducer = function (state, action) {\n    switch (action.type) {\n        case 'SET_SORT':\n            return action.payload.sort;\n        case 'SET_SORT_FIELD': {\n            var field = action.payload.field;\n            var order = state.field === field\n                ? state.order === SORT_ASC\n                    ? SORT_DESC\n                    : SORT_ASC\n                : SORT_ASC;\n            return { field: field, order: order };\n        }\n        case 'SET_SORT_ORDER': {\n            var order = action.payload.order;\n            return __assign(__assign({}, state), { order: order });\n        }\n        default:\n            return state;\n    }\n};\nexport var defaultSort = { field: 'id', order: 'DESC' };\n/**\n * set the sort { field, order }\n * @name setSort\n * @function\n * @param {Sort} sort the sort object\n */\n/**\n * set the sort field, swap the order if the field is the same\n * @name setSortField\n * @function\n * @param {string} field the sort field\n */\n/**\n * set the sort order\n * @name setSortOrder\n * @function\n * @param {string} order the sort order eiather ASC or DESC\n */\n/**\n * @typedef SortProps\n * @type {Object}\n * @property {Object} sort: the sort object.\n * @property {string} sort.field: the sort object.\n * @property {'ASC' | 'DESC'} sort.order: the sort object.\n * @property {setSort} setSort\n * @property {setSortField} setSortField\n * @property {setSortOrder} setSortOrder\n */\n/**\n * Hooks to provide sort state\n *\n * @example\n *\n * const { sort, setSort, setSortField, setSortOrder } = useSort({\n *      field: 'name',\n *      order: 'ASC',\n * });\n *\n * setSort({ field: 'name', order: 'ASC' });\n * // is the same as\n * setSortField('name');\n * setSortOrder('ASC');\n *\n * @param {Object} initialSort\n * @param {string} initialSort.field The initial sort field\n * @param {string} initialSort.order The initial sort order\n * @returns {SortProps} The sort props\n */\nvar useSortState = function (initialSort) {\n    if (initialSort === void 0) { initialSort = defaultSort; }\n    var _a = useReducer(sortReducer, initialSort), sort = _a[0], dispatch = _a[1];\n    var isFirstRender = useRef(true);\n    useEffect(function () {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n        dispatch({ type: 'SET_SORT', payload: { sort: initialSort } });\n    }, [initialSort.field, initialSort.order]); // eslint-disable-line react-hooks/exhaustive-deps\n    return {\n        setSort: useCallback(function (sort) { return dispatch({ type: 'SET_SORT', payload: { sort: sort } }); }, [dispatch]),\n        setSortField: useCallback(function (field) {\n            return dispatch({ type: 'SET_SORT_FIELD', payload: { field: field } });\n        }, [dispatch]),\n        setSortOrder: useCallback(function (order) {\n            return dispatch({ type: 'SET_SORT_ORDER', payload: { order: order } });\n        }, [dispatch]),\n        sort: sort,\n    };\n};\nexport default useSortState;\n"]},"metadata":{},"sourceType":"module"}