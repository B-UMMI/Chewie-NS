{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport admin, { getResources as adminGetResources, getReferenceResource as adminGetReferenceResource, getPossibleReferenceValues as adminGetPossibleReferenceValues } from './admin';\nexport { getNotification } from './admin/notifications';\nexport default (function (customReducers, history) {\n  return combineReducers(__assign({\n    admin: admin,\n    router: connectRouter(history)\n  }, customReducers));\n});\nexport var getPossibleReferenceValues = function (state, props) {\n  return adminGetPossibleReferenceValues(state.admin, props);\n};\nexport var getResources = function (state) {\n  return adminGetResources(state.admin);\n};\nexport var getReferenceResource = function (state, props) {\n  return adminGetReferenceResource(state.admin, props);\n};\nexport { getPossibleReferences } from './admin';","map":{"version":3,"sources":["/node_modules/ra-core/esm/reducer/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","combineReducers","connectRouter","admin","getResources","adminGetResources","getReferenceResource","adminGetReferenceResource","getPossibleReferenceValues","adminGetPossibleReferenceValues","getNotification","customReducers","history","router","state","props","getPossibleReferences"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,YAAY,IAAIC,iBAAhC,EAAmDC,oBAAoB,IAAIC,yBAA3E,EAAsGC,0BAA0B,IAAIC,+BAApI,QAA4K,SAA5K;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,gBAAgB,UAAUC,cAAV,EAA0BC,OAA1B,EAAmC;AAC/C,SAAOX,eAAe,CAACd,QAAQ,CAAC;AAAEgB,IAAAA,KAAK,EAAEA,KAAT;AAAgBU,IAAAA,MAAM,EAAEX,aAAa,CAACU,OAAD;AAArC,GAAD,EAAmDD,cAAnD,CAAT,CAAtB;AACH,CAFD;AAGA,OAAO,IAAIH,0BAA0B,GAAG,UAAUM,KAAV,EAAiBC,KAAjB,EAAwB;AAC5D,SAAON,+BAA+B,CAACK,KAAK,CAACX,KAAP,EAAcY,KAAd,CAAtC;AACH,CAFM;AAGP,OAAO,IAAIX,YAAY,GAAG,UAAUU,KAAV,EAAiB;AAAE,SAAOT,iBAAiB,CAACS,KAAK,CAACX,KAAP,CAAxB;AAAwC,CAA9E;AACP,OAAO,IAAIG,oBAAoB,GAAG,UAAUQ,KAAV,EAAiBC,KAAjB,EAAwB;AACtD,SAAOR,yBAAyB,CAACO,KAAK,CAACX,KAAP,EAAcY,KAAd,CAAhC;AACH,CAFM;AAGP,SAASC,qBAAT,QAAsC,SAAtC","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport admin, { getResources as adminGetResources, getReferenceResource as adminGetReferenceResource, getPossibleReferenceValues as adminGetPossibleReferenceValues, } from './admin';\nexport { getNotification } from './admin/notifications';\nexport default (function (customReducers, history) {\n    return combineReducers(__assign({ admin: admin, router: connectRouter(history) }, customReducers));\n});\nexport var getPossibleReferenceValues = function (state, props) {\n    return adminGetPossibleReferenceValues(state.admin, props);\n};\nexport var getResources = function (state) { return adminGetResources(state.admin); };\nexport var getReferenceResource = function (state, props) {\n    return adminGetReferenceResource(state.admin, props);\n};\nexport { getPossibleReferences } from './admin';\n"]},"metadata":{},"sourceType":"module"}