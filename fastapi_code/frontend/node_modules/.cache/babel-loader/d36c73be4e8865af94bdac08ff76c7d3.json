{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\nimport { useHistory } from 'react-router-dom';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, is, data) => ...)\n */\n\nvar useRedirect = function () {\n  var dispatch = useDispatch();\n  var history = useHistory(); // Note: history is mutable. This prevents render loops in useCallback.\n\n  return useCallback(function (redirectTo, basePath, id, data) {\n    if (basePath === void 0) {\n      basePath = '';\n    }\n\n    if (!redirectTo) {\n      if (history.location.state || history.location.search) {\n        history.replace(__assign(__assign({}, history.location), {\n          state: {},\n          search: undefined\n        }));\n      } else {\n        dispatch(refreshView());\n      }\n\n      return;\n    }\n\n    history.push(resolveRedirectTo(redirectTo, basePath, id, data));\n  }, [dispatch, history]);\n};\n\nexport default useRedirect;","map":{"version":3,"sources":["/node_modules/ra-core/esm/sideEffect/useRedirect.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useCallback","useDispatch","resolveRedirectTo","refreshView","useHistory","useRedirect","dispatch","history","redirectTo","basePath","id","data","location","state","search","replace","undefined","push"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;;;;;;;;;;;;;;;;AAeA,IAAIC,WAAW,GAAG,YAAY;AAC1B,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAIM,OAAO,GAAGH,UAAU,EAAxB,CAF0B,CAEE;;AAC5B,SAAOJ,WAAW,CAAC,UAAUQ,UAAV,EAAsBC,QAAtB,EAAgCC,EAAhC,EAAoCC,IAApC,EAA0C;AACzD,QAAIF,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,EAAX;AAAgB;;AAC3C,QAAI,CAACD,UAAL,EAAiB;AACb,UAAID,OAAO,CAACK,QAAR,CAAiBC,KAAjB,IAA0BN,OAAO,CAACK,QAAR,CAAiBE,MAA/C,EAAuD;AACnDP,QAAAA,OAAO,CAACQ,OAAR,CAAgB7B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqB,OAAO,CAACK,QAAb,CAAT,EAAiC;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAEE;AAArB,SAAjC,CAAxB;AACH,OAFD,MAGK;AACDV,QAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACH;;AACD;AACH;;AACDI,IAAAA,OAAO,CAACU,IAAR,CAAaf,iBAAiB,CAACM,UAAD,EAAaC,QAAb,EAAuBC,EAAvB,EAA2BC,IAA3B,CAA9B;AACH,GAZiB,EAYf,CAACL,QAAD,EAAWC,OAAX,CAZe,CAAlB;AAaH,CAhBD;;AAiBA,eAAeF,WAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\nimport { useHistory } from 'react-router-dom';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, is, data) => ...)\n */\nvar useRedirect = function () {\n    var dispatch = useDispatch();\n    var history = useHistory(); // Note: history is mutable. This prevents render loops in useCallback.\n    return useCallback(function (redirectTo, basePath, id, data) {\n        if (basePath === void 0) { basePath = ''; }\n        if (!redirectTo) {\n            if (history.location.state || history.location.search) {\n                history.replace(__assign(__assign({}, history.location), { state: {}, search: undefined }));\n            }\n            else {\n                dispatch(refreshView());\n            }\n            return;\n        }\n        history.push(resolveRedirectTo(redirectTo, basePath, id, data));\n    }, [dispatch, history]);\n};\nexport default useRedirect;\n"]},"metadata":{},"sourceType":"module"}