{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ActionHide from '@material-ui/icons/HighlightOff';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useTranslate } from 'ra-core';\nvar emptyRecord = {};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    body: {\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    spacer: {\n      width: theme.spacing(2)\n    },\n    hideButton: {}\n  };\n}, {\n  name: 'RaFilterFormInput'\n});\n\nvar FilterFormInput = function (props) {\n  var filterElement = props.filterElement,\n      handleHide = props.handleHide,\n      resource = props.resource,\n      variant = props.variant,\n      margin = props.margin;\n  var translate = useTranslate();\n  var classes = useStyles(props);\n  return React.createElement(\"div\", {\n    \"data-source\": filterElement.props.source,\n    className: classnames('filter-field', classes.body)\n  }, !filterElement.props.alwaysOn && React.createElement(IconButton, {\n    className: classnames('hide-filter', classes.hideButton),\n    onClick: handleHide,\n    \"data-key\": filterElement.props.source,\n    title: translate('ra.action.remove_filter')\n  }, React.createElement(ActionHide, null)), React.cloneElement(filterElement, {\n    allowEmpty: filterElement.props.allowEmpty === undefined ? true : filterElement.props.allowEmpty,\n    resource: resource,\n    record: emptyRecord,\n    variant: variant,\n    margin: margin,\n    helperText: false,\n    // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)\n    defaultValue: undefined\n  }), React.createElement(\"div\", {\n    className: classes.spacer\n  }, \"\\u00A0\"));\n};\n\nFilterFormInput.propTypes = {\n  filterElement: PropTypes.node,\n  handleHide: PropTypes.func,\n  classes: PropTypes.object,\n  resource: PropTypes.string,\n  margin: PropTypes.string,\n  variant: PropTypes.string\n};\nexport default FilterFormInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/list/filter/FilterFormInput.js"],"names":["React","PropTypes","IconButton","ActionHide","makeStyles","classnames","useTranslate","emptyRecord","useStyles","theme","body","display","alignItems","spacer","width","spacing","hideButton","name","FilterFormInput","props","filterElement","handleHide","resource","variant","margin","translate","classes","createElement","source","className","alwaysOn","onClick","title","cloneElement","allowEmpty","undefined","record","helperText","defaultValue","propTypes","node","func","object","string"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ActionHide from '@material-ui/icons/HighlightOff';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useTranslate } from 'ra-core';\nvar emptyRecord = {};\nvar useStyles = makeStyles(function (theme) { return ({\n    body: { display: 'flex', alignItems: 'flex-end' },\n    spacer: { width: theme.spacing(2) },\n    hideButton: {},\n}); }, { name: 'RaFilterFormInput' });\nvar FilterFormInput = function (props) {\n    var filterElement = props.filterElement, handleHide = props.handleHide, resource = props.resource, variant = props.variant, margin = props.margin;\n    var translate = useTranslate();\n    var classes = useStyles(props);\n    return (React.createElement(\"div\", { \"data-source\": filterElement.props.source, className: classnames('filter-field', classes.body) },\n        !filterElement.props.alwaysOn && (React.createElement(IconButton, { className: classnames('hide-filter', classes.hideButton), onClick: handleHide, \"data-key\": filterElement.props.source, title: translate('ra.action.remove_filter') },\n            React.createElement(ActionHide, null))),\n        React.cloneElement(filterElement, {\n            allowEmpty: filterElement.props.allowEmpty === undefined\n                ? true\n                : filterElement.props.allowEmpty,\n            resource: resource,\n            record: emptyRecord,\n            variant: variant,\n            margin: margin,\n            helperText: false,\n            // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)\n            defaultValue: undefined,\n        }),\n        React.createElement(\"div\", { className: classes.spacer }, \"\\u00A0\")));\n};\nFilterFormInput.propTypes = {\n    filterElement: PropTypes.node,\n    handleHide: PropTypes.func,\n    classes: PropTypes.object,\n    resource: PropTypes.string,\n    margin: PropTypes.string,\n    variant: PropTypes.string,\n};\nexport default FilterFormInput;\n"]},"metadata":{},"sourceType":"module"}