{"ast":null,"code":"module.exports = function parse(text, matches) {\n  var result = [];\n\n  if (matches.length === 0) {\n    result.push({\n      text: text,\n      highlight: false\n    });\n  } else {\n    if (matches[0][0] > 0) {\n      result.push({\n        text: text.slice(0, matches[0][0]),\n        highlight: false\n      });\n    }\n  }\n\n  matches.forEach(function (match, i) {\n    var startIndex = match[0];\n    var endIndex = match[1];\n    result.push({\n      text: text.slice(startIndex, endIndex),\n      highlight: true\n    });\n\n    if (i === matches.length - 1) {\n      if (endIndex < text.length) {\n        result.push({\n          text: text.slice(endIndex, text.length),\n          highlight: false\n        });\n      }\n    } else if (endIndex < matches[i + 1][0]) {\n      result.push({\n        text: text.slice(endIndex, matches[i + 1][0]),\n        highlight: false\n      });\n    }\n  });\n  return result;\n};","map":{"version":3,"sources":["/node_modules/autosuggest-highlight/parse/index.js"],"names":["module","exports","parse","text","matches","result","length","push","highlight","slice","forEach","match","i","startIndex","endIndex"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC7C,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACxBD,IAAAA,MAAM,CAACE,IAAP,CAAY;AACVJ,MAAAA,IAAI,EAAEA,IADI;AAEVK,MAAAA,SAAS,EAAE;AAFD,KAAZ;AAID,GALD,MAKO;AACL,QAAIJ,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,IAAgB,CAApB,EAAuB;AACrBC,MAAAA,MAAM,CAACE,IAAP,CAAY;AACVJ,QAAAA,IAAI,EAAEA,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcL,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAd,CADI;AAEVI,QAAAA,SAAS,EAAE;AAFD,OAAZ;AAID;AACF;;AAEDJ,EAAAA,OAAO,CAACM,OAAR,CAAgB,UAASC,KAAT,EAAgBC,CAAhB,EAAmB;AACjC,QAAIC,UAAU,GAAGF,KAAK,CAAC,CAAD,CAAtB;AACA,QAAIG,QAAQ,GAAGH,KAAK,CAAC,CAAD,CAApB;AAEAN,IAAAA,MAAM,CAACE,IAAP,CAAY;AACVJ,MAAAA,IAAI,EAAEA,IAAI,CAACM,KAAL,CAAWI,UAAX,EAAuBC,QAAvB,CADI;AAEVN,MAAAA,SAAS,EAAE;AAFD,KAAZ;;AAKA,QAAII,CAAC,KAAKR,OAAO,CAACE,MAAR,GAAiB,CAA3B,EAA8B;AAC5B,UAAIQ,QAAQ,GAAGX,IAAI,CAACG,MAApB,EAA4B;AAC1BD,QAAAA,MAAM,CAACE,IAAP,CAAY;AACVJ,UAAAA,IAAI,EAAEA,IAAI,CAACM,KAAL,CAAWK,QAAX,EAAqBX,IAAI,CAACG,MAA1B,CADI;AAEVE,UAAAA,SAAS,EAAE;AAFD,SAAZ;AAID;AACF,KAPD,MAOO,IAAIM,QAAQ,GAAGV,OAAO,CAACQ,CAAC,GAAG,CAAL,CAAP,CAAe,CAAf,CAAf,EAAkC;AACvCP,MAAAA,MAAM,CAACE,IAAP,CAAY;AACVJ,QAAAA,IAAI,EAAEA,IAAI,CAACM,KAAL,CAAWK,QAAX,EAAqBV,OAAO,CAACQ,CAAC,GAAG,CAAL,CAAP,CAAe,CAAf,CAArB,CADI;AAEVJ,QAAAA,SAAS,EAAE;AAFD,OAAZ;AAID;AACF,GAtBD;AAwBA,SAAOH,MAAP;AACD,CA1CD","sourcesContent":["module.exports = function parse(text, matches) {\n  var result = [];\n\n  if (matches.length === 0) {\n    result.push({\n      text: text,\n      highlight: false\n    });\n  } else {\n    if (matches[0][0] > 0) {\n      result.push({\n        text: text.slice(0, matches[0][0]),\n        highlight: false\n      });\n    }\n  }\n\n  matches.forEach(function(match, i) {\n    var startIndex = match[0];\n    var endIndex = match[1];\n\n    result.push({\n      text: text.slice(startIndex, endIndex),\n      highlight: true\n    });\n\n    if (i === matches.length - 1) {\n      if (endIndex < text.length) {\n        result.push({\n          text: text.slice(endIndex, text.length),\n          highlight: false\n        });\n      }\n    } else if (endIndex < matches[i + 1][0]) {\n      result.push({\n        text: text.slice(endIndex, matches[i + 1][0]),\n        highlight: false\n      });\n    }\n  });\n\n  return result;\n};\n"]},"metadata":{},"sourceType":"script"}