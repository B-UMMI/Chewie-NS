{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useReference, getResourceLinkPath } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Link from '../Link';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport { fieldPropTypes } from './types';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop sould be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(reference, record) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\n\nvar ReferenceField = function (_a) {\n  var children = _a.children,\n      record = _a.record,\n      source = _a.source,\n      props = __rest(_a, [\"children\", \"record\", \"source\"]);\n\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceField> only accepts a single child');\n  }\n\n  var basePath = props.basePath,\n      resource = props.resource;\n  var resourceLinkPath = getResourceLinkPath(__assign(__assign({}, props), {\n    resource: resource,\n    record: record,\n    source: source,\n    basePath: basePath\n  }));\n  return React.createElement(PureReferenceFieldView, __assign({}, props, useReference({\n    reference: props.reference,\n    id: get(record, source)\n  }), {\n    resourceLinkPath: resourceLinkPath\n  }), children);\n};\n\nReferenceField.propTypes = {\n  addLabel: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.any,\n  className: PropTypes.string,\n  cellClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  label: PropTypes.string,\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sortBy: PropTypes.string,\n  sortByOrder: fieldPropTypes.sortByOrder,\n  source: PropTypes.string.isRequired,\n  translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  link: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]).isRequired\n};\nReferenceField.defaultProps = {\n  addLabel: true,\n  classes: {},\n  link: 'edit'\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    link: {\n      color: theme.palette.primary.main\n    }\n  };\n}, {\n  name: 'RaReferenceField'\n}); // useful to prevent click bubbling in a datagrid with rowClick\n\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\n\nexport var ReferenceFieldView = function (props) {\n  var basePath = props.basePath,\n      children = props.children,\n      className = props.className,\n      classesOverride = props.classes,\n      error = props.error,\n      loaded = props.loaded,\n      loading = props.loading,\n      record = props.record,\n      reference = props.reference,\n      referenceRecord = props.referenceRecord,\n      resource = props.resource,\n      resourceLinkPath = props.resourceLinkPath,\n      source = props.source,\n      _a = props.translateChoice,\n      translateChoice = _a === void 0 ? false : _a,\n      rest = __rest(props, [\"basePath\", \"children\", \"className\", \"classes\", \"error\", \"loaded\", \"loading\", \"record\", \"reference\", \"referenceRecord\", \"resource\", \"resourceLinkPath\", \"source\", \"translateChoice\"]);\n\n  var classes = useStyles(props);\n\n  if (!loaded) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  if (error) {\n    return React.createElement(ErrorIcon, {\n      \"aria-errormessage\": error.message ? error.message : error,\n      color: \"error\",\n      fontSize: \"small\",\n      role: \"presentation\"\n    });\n  }\n\n  if (!referenceRecord) {\n    return null;\n  }\n\n  if (resourceLinkPath) {\n    return React.createElement(Link, {\n      to: resourceLinkPath,\n      className: className,\n      onClick: stopPropagation\n    }, cloneElement(Children.only(children), __assign({\n      className: classnames(children.props.className, classes.link // force color override for Typography components\n      ),\n      record: referenceRecord,\n      resource: reference,\n      basePath: basePath,\n      translateChoice: translateChoice\n    }, sanitizeRestProps(rest))));\n  }\n\n  return cloneElement(Children.only(children), __assign({\n    record: referenceRecord,\n    resource: reference,\n    basePath: basePath,\n    translateChoice: translateChoice\n  }, sanitizeRestProps(rest)));\n};\nReferenceFieldView.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  className: PropTypes.string,\n  classes: PropTypes.any,\n  loading: PropTypes.bool,\n  record: PropTypes.any,\n  reference: PropTypes.string,\n  referenceRecord: PropTypes.any,\n  resource: PropTypes.string,\n  resourceLinkPath: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([false])]),\n  source: PropTypes.string,\n  translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};\nvar PureReferenceFieldView = memo(ReferenceFieldView);\nexport default ReferenceField;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/field/ReferenceField.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Children","cloneElement","memo","PropTypes","classnames","get","makeStyles","ErrorIcon","useReference","getResourceLinkPath","LinearProgress","Link","sanitizeRestProps","fieldPropTypes","ReferenceField","_a","children","record","source","props","count","Error","basePath","resource","resourceLinkPath","createElement","PureReferenceFieldView","reference","id","propTypes","addLabel","bool","string","element","isRequired","classes","any","className","cellClassName","headerClassName","label","sortBy","sortByOrder","translateChoice","oneOfType","func","linkType","link","defaultProps","useStyles","theme","color","palette","primary","main","name","stopPropagation","ReferenceFieldView","classesOverride","error","loaded","loading","referenceRecord","rest","message","fontSize","role","to","onClick","only","oneOf"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;AACJ,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKgB,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,IAAjC,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAmD,SAAnD;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAIC,cAAc,GAAG,UAAUC,EAAV,EAAc;AAC/B,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AAAA,MAA4BC,MAAM,GAAGF,EAAE,CAACE,MAAxC;AAAA,MAAgDC,MAAM,GAAGH,EAAE,CAACG,MAA5D;AAAA,MAAoEC,KAAK,GAAGzB,MAAM,CAACqB,EAAD,EAAK,CAAC,UAAD,EAAa,QAAb,EAAuB,QAAvB,CAAL,CAAlF;;AACA,MAAIhB,KAAK,CAACC,QAAN,CAAeoB,KAAf,CAAqBJ,QAArB,MAAmC,CAAvC,EAA0C;AACtC,UAAM,IAAIK,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,MAAIC,QAAQ,GAAGH,KAAK,CAACG,QAArB;AAAA,MAA+BC,QAAQ,GAAGJ,KAAK,CAACI,QAAhD;AACA,MAAIC,gBAAgB,GAAGf,mBAAmB,CAAC7B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuC,KAAL,CAAT,EAAsB;AAAEI,IAAAA,QAAQ,EAAEA,QAAZ;AACrEN,IAAAA,MAAM,EAAEA,MAD6D;AAErEC,IAAAA,MAAM,EAAEA,MAF6D;AAGrEI,IAAAA,QAAQ,EAAEA;AAH2D,GAAtB,CAAT,CAA1C;AAIA,SAAQvB,KAAK,CAAC0B,aAAN,CAAoBC,sBAApB,EAA4C9C,QAAQ,CAAC,EAAD,EAAKuC,KAAL,EAAYX,YAAY,CAAC;AACjFmB,IAAAA,SAAS,EAAER,KAAK,CAACQ,SADgE;AAEjFC,IAAAA,EAAE,EAAEvB,GAAG,CAACY,MAAD,EAASC,MAAT;AAF0E,GAAD,CAAxB,EAGxD;AAAEM,IAAAA,gBAAgB,EAAEA;AAApB,GAHwD,CAApD,EAGqCR,QAHrC,CAAR;AAIH,CAdD;;AAeAF,cAAc,CAACe,SAAf,GAA2B;AACvBC,EAAAA,QAAQ,EAAE3B,SAAS,CAAC4B,IADG;AAEvBT,EAAAA,QAAQ,EAAEnB,SAAS,CAAC6B,MAFG;AAGvBhB,EAAAA,QAAQ,EAAEb,SAAS,CAAC8B,OAAV,CAAkBC,UAHL;AAIvBC,EAAAA,OAAO,EAAEhC,SAAS,CAACiC,GAJI;AAKvBC,EAAAA,SAAS,EAAElC,SAAS,CAAC6B,MALE;AAMvBM,EAAAA,aAAa,EAAEnC,SAAS,CAAC6B,MANF;AAOvBO,EAAAA,eAAe,EAAEpC,SAAS,CAAC6B,MAPJ;AAQvBQ,EAAAA,KAAK,EAAErC,SAAS,CAAC6B,MARM;AASvBf,EAAAA,MAAM,EAAEd,SAAS,CAACiC,GATK;AAUvBT,EAAAA,SAAS,EAAExB,SAAS,CAAC6B,MAAV,CAAiBE,UAVL;AAWvBX,EAAAA,QAAQ,EAAEpB,SAAS,CAAC6B,MAXG;AAYvBS,EAAAA,MAAM,EAAEtC,SAAS,CAAC6B,MAZK;AAavBU,EAAAA,WAAW,EAAE7B,cAAc,CAAC6B,WAbL;AAcvBxB,EAAAA,MAAM,EAAEf,SAAS,CAAC6B,MAAV,CAAiBE,UAdF;AAevBS,EAAAA,eAAe,EAAExC,SAAS,CAACyC,SAAV,CAAoB,CAACzC,SAAS,CAAC0C,IAAX,EAAiB1C,SAAS,CAAC4B,IAA3B,CAApB,CAfM;AAgBvBe,EAAAA,QAAQ,EAAE3C,SAAS,CAACyC,SAAV,CAAoB,CAC1BzC,SAAS,CAAC6B,MADgB,EAE1B7B,SAAS,CAAC4B,IAFgB,EAG1B5B,SAAS,CAAC0C,IAHgB,CAApB,CAhBa;AAqBvBE,EAAAA,IAAI,EAAE5C,SAAS,CAACyC,SAAV,CAAoB,CACtBzC,SAAS,CAAC6B,MADY,EAEtB7B,SAAS,CAAC4B,IAFY,EAGtB5B,SAAS,CAAC0C,IAHY,CAApB,EAIHX;AAzBoB,CAA3B;AA2BApB,cAAc,CAACkC,YAAf,GAA8B;AAC1BlB,EAAAA,QAAQ,EAAE,IADgB;AAE1BK,EAAAA,OAAO,EAAE,EAFiB;AAG1BY,EAAAA,IAAI,EAAE;AAHoB,CAA9B;AAKA,IAAIE,SAAS,GAAG3C,UAAU,CAAC,UAAU4C,KAAV,EAAiB;AAAE,SAAQ;AAClDH,IAAAA,IAAI,EAAE;AACFI,MAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC;AAD3B;AAD4C,GAAR;AAIzC,CAJqB,EAInB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAJmB,CAA1B,C,CAKA;;AACA,IAAIC,eAAe,GAAG,UAAU7D,CAAV,EAAa;AAAE,SAAOA,CAAC,CAAC6D,eAAF,EAAP;AAA6B,CAAlE;;AACA,OAAO,IAAIC,kBAAkB,GAAG,UAAUtC,KAAV,EAAiB;AAC7C,MAAIG,QAAQ,GAAGH,KAAK,CAACG,QAArB;AAAA,MAA+BN,QAAQ,GAAGG,KAAK,CAACH,QAAhD;AAAA,MAA0DqB,SAAS,GAAGlB,KAAK,CAACkB,SAA5E;AAAA,MAAuFqB,eAAe,GAAGvC,KAAK,CAACgB,OAA/G;AAAA,MAAwHwB,KAAK,GAAGxC,KAAK,CAACwC,KAAtI;AAAA,MAA6IC,MAAM,GAAGzC,KAAK,CAACyC,MAA5J;AAAA,MAAoKC,OAAO,GAAG1C,KAAK,CAAC0C,OAApL;AAAA,MAA6L5C,MAAM,GAAGE,KAAK,CAACF,MAA5M;AAAA,MAAoNU,SAAS,GAAGR,KAAK,CAACQ,SAAtO;AAAA,MAAiPmC,eAAe,GAAG3C,KAAK,CAAC2C,eAAzQ;AAAA,MAA0RvC,QAAQ,GAAGJ,KAAK,CAACI,QAA3S;AAAA,MAAqTC,gBAAgB,GAAGL,KAAK,CAACK,gBAA9U;AAAA,MAAgWN,MAAM,GAAGC,KAAK,CAACD,MAA/W;AAAA,MAAuXH,EAAE,GAAGI,KAAK,CAACwB,eAAlY;AAAA,MAAmZA,eAAe,GAAG5B,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA7b;AAAA,MAAicgD,IAAI,GAAGrE,MAAM,CAACyB,KAAD,EAAQ,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,EAAsC,SAAtC,EAAiD,OAAjD,EAA0D,QAA1D,EAAoE,SAApE,EAA+E,QAA/E,EAAyF,WAAzF,EAAsG,iBAAtG,EAAyH,UAAzH,EAAqI,kBAArI,EAAyJ,QAAzJ,EAAmK,iBAAnK,CAAR,CAA9c;;AACA,MAAIgB,OAAO,GAAGc,SAAS,CAAC9B,KAAD,CAAvB;;AACA,MAAI,CAACyC,MAAL,EAAa;AACT,WAAO7D,KAAK,CAAC0B,aAAN,CAAoBf,cAApB,EAAoC,IAApC,CAAP;AACH;;AACD,MAAIiD,KAAJ,EAAW;AACP,WAAQ5D,KAAK,CAAC0B,aAAN,CAAoBlB,SAApB,EAA+B;AAAE,2BAAqBoD,KAAK,CAACK,OAAN,GAAgBL,KAAK,CAACK,OAAtB,GAAgCL,KAAvD;AAA8DR,MAAAA,KAAK,EAAE,OAArE;AAA8Ec,MAAAA,QAAQ,EAAE,OAAxF;AAAiGC,MAAAA,IAAI,EAAE;AAAvG,KAA/B,CAAR;AACH;;AACD,MAAI,CAACJ,eAAL,EAAsB;AAClB,WAAO,IAAP;AACH;;AACD,MAAItC,gBAAJ,EAAsB;AAClB,WAAQzB,KAAK,CAAC0B,aAAN,CAAoBd,IAApB,EAA0B;AAAEwD,MAAAA,EAAE,EAAE3C,gBAAN;AAAwBa,MAAAA,SAAS,EAAEA,SAAnC;AAA8C+B,MAAAA,OAAO,EAAEZ;AAAvD,KAA1B,EAAoGvD,YAAY,CAACD,QAAQ,CAACqE,IAAT,CAAcrD,QAAd,CAAD,EAA0BpC,QAAQ,CAAC;AAAEyD,MAAAA,SAAS,EAAEjC,UAAU,CAACY,QAAQ,CAACG,KAAT,CAAekB,SAAhB,EAA2BF,OAAO,CAACY,IAAnC,CAAwC;AAAxC,OAAvB;AACpJ9B,MAAAA,MAAM,EAAE6C,eAD4I;AAC3HvC,MAAAA,QAAQ,EAAEI,SADiH;AACtGL,MAAAA,QAAQ,EAAEA,QAD4F;AAEvJqB,MAAAA,eAAe,EAAEA;AAFsI,KAAD,EAElH/B,iBAAiB,CAACmD,IAAD,CAFiG,CAAlC,CAAhH,CAAR;AAGH;;AACD,SAAO9D,YAAY,CAACD,QAAQ,CAACqE,IAAT,CAAcrD,QAAd,CAAD,EAA0BpC,QAAQ,CAAC;AAAEqC,IAAAA,MAAM,EAAE6C,eAAV;AAA2BvC,IAAAA,QAAQ,EAAEI,SAArC;AAAgDL,IAAAA,QAAQ,EAAEA,QAA1D;AAClDqB,IAAAA,eAAe,EAAEA;AADiC,GAAD,EACb/B,iBAAiB,CAACmD,IAAD,CADJ,CAAlC,CAAnB;AAEH,CAnBM;AAoBPN,kBAAkB,CAAC5B,SAAnB,GAA+B;AAC3BP,EAAAA,QAAQ,EAAEnB,SAAS,CAAC6B,MADO;AAE3BhB,EAAAA,QAAQ,EAAEb,SAAS,CAAC8B,OAFO;AAG3BI,EAAAA,SAAS,EAAElC,SAAS,CAAC6B,MAHM;AAI3BG,EAAAA,OAAO,EAAEhC,SAAS,CAACiC,GAJQ;AAK3ByB,EAAAA,OAAO,EAAE1D,SAAS,CAAC4B,IALQ;AAM3Bd,EAAAA,MAAM,EAAEd,SAAS,CAACiC,GANS;AAO3BT,EAAAA,SAAS,EAAExB,SAAS,CAAC6B,MAPM;AAQ3B8B,EAAAA,eAAe,EAAE3D,SAAS,CAACiC,GARA;AAS3Bb,EAAAA,QAAQ,EAAEpB,SAAS,CAAC6B,MATO;AAU3BR,EAAAA,gBAAgB,EAAErB,SAAS,CAACyC,SAAV,CAAoB,CAClCzC,SAAS,CAAC6B,MADwB,EAElC7B,SAAS,CAACmE,KAAV,CAAgB,CAAC,KAAD,CAAhB,CAFkC,CAApB,CAVS;AAc3BpD,EAAAA,MAAM,EAAEf,SAAS,CAAC6B,MAdS;AAe3BW,EAAAA,eAAe,EAAExC,SAAS,CAACyC,SAAV,CAAoB,CAACzC,SAAS,CAAC0C,IAAX,EAAiB1C,SAAS,CAAC4B,IAA3B,CAApB;AAfU,CAA/B;AAiBA,IAAIL,sBAAsB,GAAGxB,IAAI,CAACuD,kBAAD,CAAjC;AACA,eAAe3C,cAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useReference, getResourceLinkPath, } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Link from '../Link';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport { fieldPropTypes } from './types';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop sould be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(reference, record) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\nvar ReferenceField = function (_a) {\n    var children = _a.children, record = _a.record, source = _a.source, props = __rest(_a, [\"children\", \"record\", \"source\"]);\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceField> only accepts a single child');\n    }\n    var basePath = props.basePath, resource = props.resource;\n    var resourceLinkPath = getResourceLinkPath(__assign(__assign({}, props), { resource: resource,\n        record: record,\n        source: source,\n        basePath: basePath }));\n    return (React.createElement(PureReferenceFieldView, __assign({}, props, useReference({\n        reference: props.reference,\n        id: get(record, source),\n    }), { resourceLinkPath: resourceLinkPath }), children));\n};\nReferenceField.propTypes = {\n    addLabel: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    classes: PropTypes.any,\n    className: PropTypes.string,\n    cellClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortByOrder: fieldPropTypes.sortByOrder,\n    source: PropTypes.string.isRequired,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    linkType: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    link: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]).isRequired,\n};\nReferenceField.defaultProps = {\n    addLabel: true,\n    classes: {},\n    link: 'edit',\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    link: {\n        color: theme.palette.primary.main,\n    },\n}); }, { name: 'RaReferenceField' });\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) { return e.stopPropagation(); };\nexport var ReferenceFieldView = function (props) {\n    var basePath = props.basePath, children = props.children, className = props.className, classesOverride = props.classes, error = props.error, loaded = props.loaded, loading = props.loading, record = props.record, reference = props.reference, referenceRecord = props.referenceRecord, resource = props.resource, resourceLinkPath = props.resourceLinkPath, source = props.source, _a = props.translateChoice, translateChoice = _a === void 0 ? false : _a, rest = __rest(props, [\"basePath\", \"children\", \"className\", \"classes\", \"error\", \"loaded\", \"loading\", \"record\", \"reference\", \"referenceRecord\", \"resource\", \"resourceLinkPath\", \"source\", \"translateChoice\"]);\n    var classes = useStyles(props);\n    if (!loaded) {\n        return React.createElement(LinearProgress, null);\n    }\n    if (error) {\n        return (React.createElement(ErrorIcon, { \"aria-errormessage\": error.message ? error.message : error, color: \"error\", fontSize: \"small\", role: \"presentation\" }));\n    }\n    if (!referenceRecord) {\n        return null;\n    }\n    if (resourceLinkPath) {\n        return (React.createElement(Link, { to: resourceLinkPath, className: className, onClick: stopPropagation }, cloneElement(Children.only(children), __assign({ className: classnames(children.props.className, classes.link // force color override for Typography components\n            ), record: referenceRecord, resource: reference, basePath: basePath,\n            translateChoice: translateChoice }, sanitizeRestProps(rest)))));\n    }\n    return cloneElement(Children.only(children), __assign({ record: referenceRecord, resource: reference, basePath: basePath,\n        translateChoice: translateChoice }, sanitizeRestProps(rest)));\n};\nReferenceFieldView.propTypes = {\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    classes: PropTypes.any,\n    loading: PropTypes.bool,\n    record: PropTypes.any,\n    reference: PropTypes.string,\n    referenceRecord: PropTypes.any,\n    resource: PropTypes.string,\n    resourceLinkPath: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.oneOf([false]),\n    ]),\n    source: PropTypes.string,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n};\nvar PureReferenceFieldView = memo(ReferenceFieldView);\nexport default ReferenceField;\n"]},"metadata":{},"sourceType":"module"}