{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { createElement } from 'react';\n\nvar InferredElement =\n/** @class */\nfunction () {\n  function InferredElement(type, props, children) {\n    this.type = type;\n    this.props = props;\n    this.children = children;\n  }\n\n  InferredElement.prototype.getElement = function (props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (!this.isDefined()) {\n      return;\n    }\n\n    return this.children ? createElement(this.type.component, __assign(__assign({}, this.props), props), this.children.length > 0 ? this.children.map(function (child, index) {\n      return child.getElement({\n        key: index\n      });\n    }) : this.children.getElement()) : createElement(this.type.component, __assign(__assign({}, this.props), props));\n  };\n\n  InferredElement.prototype.getProps = function () {\n    return this.props;\n  };\n\n  InferredElement.prototype.isDefined = function () {\n    return !!this.type;\n  };\n\n  InferredElement.prototype.getRepresentation = function () {\n    if (!this.isDefined()) {\n      return;\n    }\n\n    if (this.type.representation) {\n      return this.type.representation(this.props, this.children);\n    }\n\n    return \"<\" + (this.type.component.displayName || this.type.component.name) + \" source=\\\"\" + this.props.source + \"\\\" />\";\n  };\n\n  return InferredElement;\n}();\n\nexport default InferredElement;","map":{"version":3,"sources":["/node_modules/ra-core/esm/inference/InferredElement.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","createElement","InferredElement","type","props","children","getElement","isDefined","component","map","child","index","key","getProps","getRepresentation","representation","displayName","name","source"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createElement } from 'react';\nvar InferredElement = /** @class */ (function () {\n    function InferredElement(type, props, children) {\n        this.type = type;\n        this.props = props;\n        this.children = children;\n    }\n    InferredElement.prototype.getElement = function (props) {\n        if (props === void 0) { props = {}; }\n        if (!this.isDefined()) {\n            return;\n        }\n        return this.children\n            ? createElement(this.type.component, __assign(__assign({}, this.props), props), this.children.length > 0\n                ? this.children.map(function (child, index) {\n                    return child.getElement({ key: index });\n                })\n                : this.children.getElement())\n            : createElement(this.type.component, __assign(__assign({}, this.props), props));\n    };\n    InferredElement.prototype.getProps = function () {\n        return this.props;\n    };\n    InferredElement.prototype.isDefined = function () {\n        return !!this.type;\n    };\n    InferredElement.prototype.getRepresentation = function () {\n        if (!this.isDefined()) {\n            return;\n        }\n        if (this.type.representation) {\n            return this.type.representation(this.props, this.children);\n        }\n        return \"<\" + (this.type.component.displayName || this.type.component.name) + \" source=\\\"\" + this.props.source + \"\\\" />\";\n    };\n    return InferredElement;\n}());\nexport default InferredElement;\n"]},"metadata":{},"sourceType":"module"}