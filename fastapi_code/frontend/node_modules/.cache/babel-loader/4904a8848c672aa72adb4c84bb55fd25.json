{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { linkToRecord, sanitizeListRestProps, useListContext } from 'ra-core';\nimport Link from '../Link';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: -theme.spacing(1),\n      marginBottom: -theme.spacing(1)\n    },\n    link: {}\n  };\n}, {\n  name: 'RaSingleFieldList'\n}); // useful to prevent click bubbling in a datagrid with rowClick\n\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n}; // Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\n\n\nvar handleClick = function () {};\n/**\n * Iterator component to be used to display a list of entities, using a single field\n *\n * @example Display all the books by the current author\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * By default, it includes a link to the <Edit> page of the related record\n * (`/books/:id` in the previous example).\n *\n * Set the linkType prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType=\"show\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * You can also prevent `<SingleFieldList>` from adding link to children by setting\n * `linkType` to false.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType={false}>\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n */\n\n\nvar SingleFieldList = function (props) {\n  var classesOverride = props.classes,\n      className = props.className,\n      children = props.children,\n      _a = props.linkType,\n      linkType = _a === void 0 ? 'edit' : _a,\n      rest = __rest(props, [\"classes\", \"className\", \"children\", \"linkType\"]);\n\n  var _b = useListContext(props),\n      ids = _b.ids,\n      data = _b.data,\n      loaded = _b.loaded,\n      resource = _b.resource,\n      basePath = _b.basePath;\n\n  var classes = useStyles(props);\n\n  if (loaded === false) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  return React.createElement(\"div\", __assign({\n    className: classnames(classes.root, className)\n  }, sanitizeListRestProps(rest)), ids.map(function (id) {\n    var resourceLinkPath = !linkType ? false : linkToRecord(basePath, id, linkType);\n\n    if (resourceLinkPath) {\n      return React.createElement(Link, {\n        className: classes.link,\n        key: id,\n        to: resourceLinkPath,\n        onClick: stopPropagation\n      }, cloneElement(Children.only(children), {\n        record: data[id],\n        resource: resource,\n        basePath: basePath,\n        // Workaround to force ChipField to be clickable\n        onClick: handleClick\n      }));\n    }\n\n    return cloneElement(Children.only(children), {\n      key: id,\n      record: data[id],\n      resource: resource,\n      basePath: basePath\n    });\n  }));\n};\n\nSingleFieldList.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  data: PropTypes.object,\n  ids: PropTypes.array,\n  // @ts-ignore\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  resource: PropTypes.string\n};\nexport default SingleFieldList;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/list/SingleFieldList.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","Children","PropTypes","classnames","LinearProgress","makeStyles","linkToRecord","sanitizeListRestProps","useListContext","Link","useStyles","theme","root","display","flexWrap","marginTop","spacing","marginBottom","link","name","stopPropagation","handleClick","SingleFieldList","props","classesOverride","classes","className","children","_a","linkType","rest","_b","ids","data","loaded","resource","basePath","createElement","map","id","resourceLinkPath","key","to","onClick","only","record","propTypes","string","element","isRequired","object","array","oneOfType","bool"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { linkToRecord, sanitizeListRestProps, useListContext } from 'ra-core';\nimport Link from '../Link';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: -theme.spacing(1),\n        marginBottom: -theme.spacing(1),\n    },\n    link: {},\n}); }, { name: 'RaSingleFieldList' });\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) { return e.stopPropagation(); };\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nvar handleClick = function () { };\n/**\n * Iterator component to be used to display a list of entities, using a single field\n *\n * @example Display all the books by the current author\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * By default, it includes a link to the <Edit> page of the related record\n * (`/books/:id` in the previous example).\n *\n * Set the linkType prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType=\"show\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * You can also prevent `<SingleFieldList>` from adding link to children by setting\n * `linkType` to false.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType={false}>\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n */\nvar SingleFieldList = function (props) {\n    var classesOverride = props.classes, className = props.className, children = props.children, _a = props.linkType, linkType = _a === void 0 ? 'edit' : _a, rest = __rest(props, [\"classes\", \"className\", \"children\", \"linkType\"]);\n    var _b = useListContext(props), ids = _b.ids, data = _b.data, loaded = _b.loaded, resource = _b.resource, basePath = _b.basePath;\n    var classes = useStyles(props);\n    if (loaded === false) {\n        return React.createElement(LinearProgress, null);\n    }\n    return (React.createElement(\"div\", __assign({ className: classnames(classes.root, className) }, sanitizeListRestProps(rest)), ids.map(function (id) {\n        var resourceLinkPath = !linkType\n            ? false\n            : linkToRecord(basePath, id, linkType);\n        if (resourceLinkPath) {\n            return (React.createElement(Link, { className: classes.link, key: id, to: resourceLinkPath, onClick: stopPropagation }, cloneElement(Children.only(children), {\n                record: data[id],\n                resource: resource,\n                basePath: basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick,\n            })));\n        }\n        return cloneElement(Children.only(children), {\n            key: id,\n            record: data[id],\n            resource: resource,\n            basePath: basePath,\n        });\n    })));\n};\nSingleFieldList.propTypes = {\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object,\n    ids: PropTypes.array,\n    // @ts-ignore\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    resource: PropTypes.string,\n};\nexport default SingleFieldList;\n"]},"metadata":{},"sourceType":"module"}