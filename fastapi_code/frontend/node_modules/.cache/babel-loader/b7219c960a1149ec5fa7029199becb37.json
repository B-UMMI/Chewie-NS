{"ast":null,"code":"import { useCallback } from 'react';\nimport inflection from 'inflection';\nimport useVersion from './useVersion';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport { useNotify, useRedirect, useRefresh } from '../sideEffect';\nimport { useSaveModifiers } from './saveModifiers';\nimport { useGetOne, useUpdate } from '../dataProvider';\nimport { useTranslate } from '../i18n';\nimport { CRUD_GET_ONE, CRUD_UPDATE } from '../actions';\n/**\n * Prepare data for the Edit view\n *\n * @param {Object} props The props passed to the Edit component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Edit view\n *\n * @example\n *\n * import { useEditController } from 'react-admin';\n * import EditView from './EditView';\n *\n * const MyEdit = props => {\n *     const controllerProps = useEditController(props);\n *     return <EditView {...controllerProps} {...props} />;\n * }\n */\n\nvar useEditController = function (props) {\n  useCheckMinimumRequiredProps('Edit', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      id = props.id,\n      resource = props.resource,\n      successMessage = props.successMessage,\n      _a = props.undoable,\n      undoable = _a === void 0 ? true : _a,\n      onSuccess = props.onSuccess,\n      onFailure = props.onFailure,\n      transform = props.transform;\n  var translate = useTranslate();\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n  var version = useVersion();\n\n  if (process.env.NODE_ENV !== 'production' && successMessage) {\n    console.log('<Edit successMessage> prop is deprecated, use the onSuccess prop instead.');\n  }\n\n  var _b = useSaveModifiers({\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    transform: transform\n  }),\n      onSuccessRef = _b.onSuccessRef,\n      setOnSuccess = _b.setOnSuccess,\n      onFailureRef = _b.onFailureRef,\n      setOnFailure = _b.setOnFailure,\n      transformRef = _b.transformRef,\n      setTransform = _b.setTransform;\n\n  var _c = useGetOne(resource, id, {\n    action: CRUD_GET_ONE,\n    onFailure: function () {\n      notify('ra.notification.item_doesnt_exist', 'warning');\n      redirect('list', basePath);\n      refresh();\n    }\n  }),\n      record = _c.data,\n      loading = _c.loading,\n      loaded = _c.loaded;\n\n  var resourceName = translate(\"resources.\" + resource + \".name\", {\n    smart_count: 1,\n    _: inflection.humanize(inflection.singularize(resource))\n  });\n  var defaultTitle = translate('ra.page.edit', {\n    name: \"\" + resourceName,\n    id: id,\n    record: record\n  });\n\n  var _d = useUpdate(resource, id, {}, // set by the caller\n  record),\n      update = _d[0],\n      saving = _d[1].loading;\n\n  var save = useCallback(function (data, redirectTo, _a) {\n    if (redirectTo === void 0) {\n      redirectTo = DefaultRedirect;\n    }\n\n    var _b = _a === void 0 ? {} : _a,\n        onSuccessFromSave = _b.onSuccess,\n        onFailureFromSave = _b.onFailure,\n        transformFromSave = _b.transform;\n\n    Promise.resolve(transformFromSave ? transformFromSave(data) : transformRef.current ? transformRef.current(data) : data).then(function (data) {\n      return update({\n        payload: {\n          data: data\n        }\n      }, {\n        action: CRUD_UPDATE,\n        onSuccess: onSuccessFromSave ? onSuccessFromSave : onSuccessRef.current ? onSuccessRef.current : function () {\n          notify(successMessage || 'ra.notification.updated', 'info', {\n            smart_count: 1\n          }, undoable);\n          redirect(redirectTo, basePath, data.id, data);\n        },\n        onFailure: onFailureFromSave ? onFailureFromSave : onFailureRef.current ? onFailureRef.current : function (error) {\n          notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n\n          if (undoable) {\n            refresh();\n          }\n        },\n        undoable: undoable\n      });\n    });\n  }, [transformRef, update, onSuccessRef, onFailureRef, undoable, notify, successMessage, redirect, basePath, refresh]);\n  return {\n    loading: loading,\n    loaded: loaded,\n    saving: saving,\n    defaultTitle: defaultTitle,\n    save: save,\n    setOnSuccess: setOnSuccess,\n    setOnFailure: setOnFailure,\n    setTransform: setTransform,\n    resource: resource,\n    basePath: basePath,\n    record: record,\n    redirect: DefaultRedirect,\n    version: version\n  };\n};\n\nexport default useEditController;\nvar DefaultRedirect = 'list';","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/useEditController.js"],"names":["useCallback","inflection","useVersion","useCheckMinimumRequiredProps","useNotify","useRedirect","useRefresh","useSaveModifiers","useGetOne","useUpdate","useTranslate","CRUD_GET_ONE","CRUD_UPDATE","useEditController","props","basePath","id","resource","successMessage","_a","undoable","onSuccess","onFailure","transform","translate","notify","redirect","refresh","version","process","env","NODE_ENV","console","log","_b","onSuccessRef","setOnSuccess","onFailureRef","setOnFailure","transformRef","setTransform","_c","action","record","data","loading","loaded","resourceName","smart_count","_","humanize","singularize","defaultTitle","name","_d","update","saving","save","redirectTo","DefaultRedirect","onSuccessFromSave","onFailureFromSave","transformFromSave","Promise","resolve","current","then","payload","error","message"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\nimport inflection from 'inflection';\nimport useVersion from './useVersion';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport { useNotify, useRedirect, useRefresh, } from '../sideEffect';\nimport { useSaveModifiers, } from './saveModifiers';\nimport { useGetOne, useUpdate } from '../dataProvider';\nimport { useTranslate } from '../i18n';\nimport { CRUD_GET_ONE, CRUD_UPDATE } from '../actions';\n/**\n * Prepare data for the Edit view\n *\n * @param {Object} props The props passed to the Edit component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Edit view\n *\n * @example\n *\n * import { useEditController } from 'react-admin';\n * import EditView from './EditView';\n *\n * const MyEdit = props => {\n *     const controllerProps = useEditController(props);\n *     return <EditView {...controllerProps} {...props} />;\n * }\n */\nvar useEditController = function (props) {\n    useCheckMinimumRequiredProps('Edit', ['basePath', 'resource'], props);\n    var basePath = props.basePath, id = props.id, resource = props.resource, successMessage = props.successMessage, _a = props.undoable, undoable = _a === void 0 ? true : _a, onSuccess = props.onSuccess, onFailure = props.onFailure, transform = props.transform;\n    var translate = useTranslate();\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var refresh = useRefresh();\n    var version = useVersion();\n    if (process.env.NODE_ENV !== 'production' && successMessage) {\n        console.log('<Edit successMessage> prop is deprecated, use the onSuccess prop instead.');\n    }\n    var _b = useSaveModifiers({ onSuccess: onSuccess, onFailure: onFailure, transform: transform }), onSuccessRef = _b.onSuccessRef, setOnSuccess = _b.setOnSuccess, onFailureRef = _b.onFailureRef, setOnFailure = _b.setOnFailure, transformRef = _b.transformRef, setTransform = _b.setTransform;\n    var _c = useGetOne(resource, id, {\n        action: CRUD_GET_ONE,\n        onFailure: function () {\n            notify('ra.notification.item_doesnt_exist', 'warning');\n            redirect('list', basePath);\n            refresh();\n        },\n    }), record = _c.data, loading = _c.loading, loaded = _c.loaded;\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n        smart_count: 1,\n        _: inflection.humanize(inflection.singularize(resource)),\n    });\n    var defaultTitle = translate('ra.page.edit', {\n        name: \"\" + resourceName,\n        id: id,\n        record: record,\n    });\n    var _d = useUpdate(resource, id, {}, // set by the caller\n    record), update = _d[0], saving = _d[1].loading;\n    var save = useCallback(function (data, redirectTo, _a) {\n        if (redirectTo === void 0) { redirectTo = DefaultRedirect; }\n        var _b = _a === void 0 ? {} : _a, onSuccessFromSave = _b.onSuccess, onFailureFromSave = _b.onFailure, transformFromSave = _b.transform;\n        Promise.resolve(transformFromSave\n            ? transformFromSave(data)\n            : transformRef.current\n                ? transformRef.current(data)\n                : data).then(function (data) {\n            return update({ payload: { data: data } }, {\n                action: CRUD_UPDATE,\n                onSuccess: onSuccessFromSave\n                    ? onSuccessFromSave\n                    : onSuccessRef.current\n                        ? onSuccessRef.current\n                        : function () {\n                            notify(successMessage ||\n                                'ra.notification.updated', 'info', {\n                                smart_count: 1,\n                            }, undoable);\n                            redirect(redirectTo, basePath, data.id, data);\n                        },\n                onFailure: onFailureFromSave\n                    ? onFailureFromSave\n                    : onFailureRef.current\n                        ? onFailureRef.current\n                        : function (error) {\n                            notify(typeof error === 'string'\n                                ? error\n                                : error.message ||\n                                    'ra.notification.http_error', 'warning');\n                            if (undoable) {\n                                refresh();\n                            }\n                        },\n                undoable: undoable,\n            });\n        });\n    }, [\n        transformRef,\n        update,\n        onSuccessRef,\n        onFailureRef,\n        undoable,\n        notify,\n        successMessage,\n        redirect,\n        basePath,\n        refresh,\n    ]);\n    return {\n        loading: loading,\n        loaded: loaded,\n        saving: saving,\n        defaultTitle: defaultTitle,\n        save: save,\n        setOnSuccess: setOnSuccess,\n        setOnFailure: setOnFailure,\n        setTransform: setTransform,\n        resource: resource,\n        basePath: basePath,\n        record: record,\n        redirect: DefaultRedirect,\n        version: version,\n    };\n};\nexport default useEditController;\nvar DefaultRedirect = 'list';\n"]},"metadata":{},"sourceType":"module"}