{"ast":null,"code":"import { GET_LIST } from '../../core';\nexport var crudGetAll = function (resource, sort, filter, maxResults, callback) {\n  return {\n    type: CRUD_GET_ALL,\n    payload: {\n      sort: sort,\n      filter: filter,\n      pagination: {\n        page: 1,\n        perPage: maxResults\n      }\n    },\n    meta: {\n      resource: resource,\n      fetch: GET_LIST,\n      onSuccess: {\n        callback: callback\n      },\n      onFailure: {\n        notification: {\n          body: 'ra.notification.http_error',\n          level: 'warning'\n        }\n      }\n    }\n  };\n};\nexport var CRUD_GET_ALL = 'RA/CRUD_GET_ALL';\nexport var CRUD_GET_ALL_LOADING = 'RA/CRUD_GET_ALL_LOADING';\nexport var CRUD_GET_ALL_FAILURE = 'RA/CRUD_GET_ALL_FAILURE';\nexport var CRUD_GET_ALL_SUCCESS = 'RA/CRUD_GET_ALL_SUCCESS';","map":{"version":3,"sources":["/node_modules/ra-core/esm/actions/dataActions/crudGetAll.js"],"names":["GET_LIST","crudGetAll","resource","sort","filter","maxResults","callback","type","CRUD_GET_ALL","payload","pagination","page","perPage","meta","fetch","onSuccess","onFailure","notification","body","level","CRUD_GET_ALL_LOADING","CRUD_GET_ALL_FAILURE","CRUD_GET_ALL_SUCCESS"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,QAAV,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwD;AAAE,SAAQ;AACtFC,IAAAA,IAAI,EAAEC,YADgF;AAEtFC,IAAAA,OAAO,EAAE;AAAEN,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,MAAM,EAAEA,MAAtB;AAA8BM,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAEP;AAApB;AAA1C,KAF6E;AAGtFQ,IAAAA,IAAI,EAAE;AACFX,MAAAA,QAAQ,EAAEA,QADR;AAEFY,MAAAA,KAAK,EAAEd,QAFL;AAGFe,MAAAA,SAAS,EAAE;AACPT,QAAAA,QAAQ,EAAEA;AADH,OAHT;AAMFU,MAAAA,SAAS,EAAE;AACPC,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAE,4BADI;AAEVC,UAAAA,KAAK,EAAE;AAFG;AADP;AANT;AAHgF,GAAR;AAgB7E,CAhBE;AAiBP,OAAO,IAAIX,YAAY,GAAG,iBAAnB;AACP,OAAO,IAAIY,oBAAoB,GAAG,yBAA3B;AACP,OAAO,IAAIC,oBAAoB,GAAG,yBAA3B;AACP,OAAO,IAAIC,oBAAoB,GAAG,yBAA3B","sourcesContent":["import { GET_LIST } from '../../core';\nexport var crudGetAll = function (resource, sort, filter, maxResults, callback) { return ({\n    type: CRUD_GET_ALL,\n    payload: { sort: sort, filter: filter, pagination: { page: 1, perPage: maxResults } },\n    meta: {\n        resource: resource,\n        fetch: GET_LIST,\n        onSuccess: {\n            callback: callback,\n        },\n        onFailure: {\n            notification: {\n                body: 'ra.notification.http_error',\n                level: 'warning',\n            },\n        },\n    },\n}); };\nexport var CRUD_GET_ALL = 'RA/CRUD_GET_ALL';\nexport var CRUD_GET_ALL_LOADING = 'RA/CRUD_GET_ALL_LOADING';\nexport var CRUD_GET_ALL_FAILURE = 'RA/CRUD_GET_ALL_FAILURE';\nexport var CRUD_GET_ALL_SUCCESS = 'RA/CRUD_GET_ALL_SUCCESS';\n"]},"metadata":{},"sourceType":"module"}