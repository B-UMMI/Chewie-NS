{"ast":null,"code":"import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse } from '../core';\n\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n  if (logger === void 0) {\n    logger = console.error;\n  }\n\n  if (!response) {\n    logger(\"The dataProvider returned an empty response for '\" + type + \"'.\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (!response.hasOwnProperty('data')) {\n    logger(\"The response to '\" + type + \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\" + type + \"'.\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithArrayOfRecordsResponse.includes(type) && !Array.isArray(response.data)) {\n    logger(\"The response to '\" + type + \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) && Array.isArray(response.data) && response.data.length > 0 && !response.data[0].hasOwnProperty('id')) {\n    logger(\"The response to '\" + type + \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithRecordResponse.includes(type) && !response.data.hasOwnProperty('id')) {\n    logger(\"The response to '\" + type + \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithTotalResponse.includes(type) && !response.hasOwnProperty('total')) {\n    logger(\"The response to '\" + type + \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\" + type + \"'\");\n    throw new Error('ra.notification.data_provider_error');\n  }\n}\n\nexport default validateResponseFormat;","map":{"version":3,"sources":["/node_modules/ra-core/esm/dataProvider/validateResponseFormat.js"],"names":["fetchActionsWithRecordResponse","fetchActionsWithArrayOfIdentifiedRecordsResponse","fetchActionsWithArrayOfRecordsResponse","fetchActionsWithTotalResponse","validateResponseFormat","response","type","logger","console","error","Error","hasOwnProperty","includes","Array","isArray","data","length"],"mappings":"AAAA,SAASA,8BAAT,EAAyCC,gDAAzC,EAA2FC,sCAA3F,EAAmIC,6BAAnI,QAAyK,SAAzK;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,IAA1C,EAAgDC,MAAhD,CAAuD;AAAvD,EACE;AACE,MAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAGC,OAAO,CAACC,KAAjB;AAAyB;;AAClD,MAAI,CAACJ,QAAL,EAAe;AACXE,IAAAA,MAAM,CAAC,sDAAsDD,IAAtD,GAA6D,IAA9D,CAAN;AACA,UAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,MAAI,CAACL,QAAQ,CAACM,cAAT,CAAwB,MAAxB,CAAL,EAAsC;AAClCJ,IAAAA,MAAM,CAAC,sBAAsBD,IAAtB,GAA6B,8HAA7B,GAA8JA,IAA9J,GAAqK,IAAtK,CAAN;AACA,UAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,MAAIR,sCAAsC,CAACU,QAAvC,CAAgDN,IAAhD,KACA,CAACO,KAAK,CAACC,OAAN,CAAcT,QAAQ,CAACU,IAAvB,CADL,EACmC;AAC/BR,IAAAA,MAAM,CAAC,sBAAsBD,IAAtB,GAA6B,kHAA7B,GAAkJA,IAAlJ,GAAyJ,GAA1J,CAAN;AACA,UAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,MAAIT,gDAAgD,CAACW,QAAjD,CAA0DN,IAA1D,KACAO,KAAK,CAACC,OAAN,CAAcT,QAAQ,CAACU,IAAvB,CADA,IAEAV,QAAQ,CAACU,IAAT,CAAcC,MAAd,GAAuB,CAFvB,IAGA,CAACX,QAAQ,CAACU,IAAT,CAAc,CAAd,EAAiBJ,cAAjB,CAAgC,IAAhC,CAHL,EAG4C;AACxCJ,IAAAA,MAAM,CAAC,sBAAsBD,IAAtB,GAA6B,iJAA7B,GAAiLA,IAAjL,GAAwL,GAAzL,CAAN;AACA,UAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,MAAIV,8BAA8B,CAACY,QAA/B,CAAwCN,IAAxC,KACA,CAACD,QAAQ,CAACU,IAAT,CAAcJ,cAAd,CAA6B,IAA7B,CADL,EACyC;AACrCJ,IAAAA,MAAM,CAAC,sBAAsBD,IAAtB,GAA6B,sIAA7B,GAAsKA,IAAtK,GAA6K,GAA9K,CAAN;AACA,UAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,MAAIP,6BAA6B,CAACS,QAA9B,CAAuCN,IAAvC,KACA,CAACD,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CADL,EACuC;AACnCJ,IAAAA,MAAM,CAAC,sBAAsBD,IAAtB,GAA6B,8IAA7B,GAA8KA,IAA9K,GAAqL,GAAtL,CAAN;AACA,UAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AACH;AACJ;;AACD,eAAeN,sBAAf","sourcesContent":["import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse, } from '../core';\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n    if (logger === void 0) { logger = console.error; }\n    if (!response) {\n        logger(\"The dataProvider returned an empty response for '\" + type + \"'.\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (!response.hasOwnProperty('data')) {\n        logger(\"The response to '\" + type + \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\" + type + \"'.\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithArrayOfRecordsResponse.includes(type) &&\n        !Array.isArray(response.data)) {\n        logger(\"The response to '\" + type + \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) &&\n        Array.isArray(response.data) &&\n        response.data.length > 0 &&\n        !response.data[0].hasOwnProperty('id')) {\n        logger(\"The response to '\" + type + \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithRecordResponse.includes(type) &&\n        !response.data.hasOwnProperty('id')) {\n        logger(\"The response to '\" + type + \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithTotalResponse.includes(type) &&\n        !response.hasOwnProperty('total')) {\n        logger(\"The response to '\" + type + \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\" + type + \"'\");\n        throw new Error('ra.notification.data_provider_error');\n    }\n}\nexport default validateResponseFormat;\n"]},"metadata":{},"sourceType":"module"}