{"ast":null,"code":"import { useCallback } from 'react'; // @ts-ignore\n\nimport inflection from 'inflection';\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport { useCreate } from '../dataProvider';\nimport { useNotify, useRedirect } from '../sideEffect';\nimport { useSaveModifiers } from './saveModifiers';\nimport { useTranslate } from '../i18n';\nimport { useVersion } from '.';\nimport { CRUD_CREATE } from '../actions';\n/**\n * Prepare data for the Create view\n *\n * @param {Object} props The props passed to the Create component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Create view\n *\n * @example\n *\n * import { useCreateController } from 'react-admin';\n * import CreateView from './CreateView';\n *\n * const MyCreate = props => {\n *     const controllerProps = useCreateController(props);\n *     return <CreateView {...controllerProps} {...props} />;\n * }\n */\n\nvar useCreateController = function (props) {\n  useCheckMinimumRequiredProps('Create', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      resource = props.resource,\n      _a = props.record,\n      record = _a === void 0 ? {} : _a,\n      hasShow = props.hasShow,\n      hasEdit = props.hasEdit,\n      successMessage = props.successMessage,\n      onSuccess = props.onSuccess,\n      onFailure = props.onFailure,\n      transform = props.transform;\n  var location = useLocation();\n  var translate = useTranslate();\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var recordToUse = getRecord(location, record);\n  var version = useVersion();\n\n  if (process.env.NODE_ENV !== 'production' && successMessage) {\n    console.log('<Edit successMessage> prop is deprecated, use the onSuccess prop instead.');\n  }\n\n  var _b = useSaveModifiers({\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    transform: transform\n  }),\n      onSuccessRef = _b.onSuccessRef,\n      setOnSuccess = _b.setOnSuccess,\n      onFailureRef = _b.onFailureRef,\n      setOnFailure = _b.setOnFailure,\n      transformRef = _b.transformRef,\n      setTransform = _b.setTransform;\n\n  var _c = useCreate(resource),\n      create = _c[0],\n      saving = _c[1].loading;\n\n  var save = useCallback(function (data, redirectTo, _a) {\n    if (redirectTo === void 0) {\n      redirectTo = 'list';\n    }\n\n    var _b = _a === void 0 ? {} : _a,\n        onSuccessFromSave = _b.onSuccess,\n        onFailureFromSave = _b.onFailure,\n        transformFromSave = _b.transform;\n\n    return Promise.resolve(transformFromSave ? transformFromSave(data) : transformRef.current ? transformRef.current(data) : data).then(function (data) {\n      return create({\n        payload: {\n          data: data\n        }\n      }, {\n        action: CRUD_CREATE,\n        onSuccess: onSuccessFromSave ? onSuccessFromSave : onSuccessRef.current ? onSuccessRef.current : function (_a) {\n          var newRecord = _a.data;\n          notify(successMessage || 'ra.notification.created', 'info', {\n            smart_count: 1\n          });\n          redirect(redirectTo, basePath, newRecord.id, newRecord);\n        },\n        onFailure: onFailureFromSave ? onFailureFromSave : onFailureRef.current ? onFailureRef.current : function (error) {\n          notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n        }\n      });\n    });\n  }, [transformRef, create, onSuccessRef, onFailureRef, notify, successMessage, redirect, basePath]);\n  var resourceName = translate(\"resources.\" + resource + \".name\", {\n    smart_count: 1,\n    _: inflection.humanize(inflection.singularize(resource))\n  });\n  var defaultTitle = translate('ra.page.create', {\n    name: \"\" + resourceName\n  });\n  return {\n    loading: false,\n    loaded: true,\n    saving: saving,\n    defaultTitle: defaultTitle,\n    save: save,\n    setOnSuccess: setOnSuccess,\n    setOnFailure: setOnFailure,\n    setTransform: setTransform,\n    resource: resource,\n    basePath: basePath,\n    record: recordToUse,\n    redirect: getDefaultRedirectRoute(hasShow, hasEdit),\n    version: version\n  };\n};\n\nexport default useCreateController;\nexport var getRecord = function (_a, record) {\n  var state = _a.state,\n      search = _a.search;\n\n  if (record === void 0) {\n    record = {};\n  }\n\n  if (state && state.record) {\n    return state.record;\n  }\n\n  if (search) {\n    try {\n      var searchParams = parse(search);\n\n      if (searchParams.source) {\n        if (Array.isArray(searchParams.source)) {\n          console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n          return;\n        }\n\n        return JSON.parse(searchParams.source);\n      }\n    } catch (e) {\n      console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n    }\n  }\n\n  return record;\n};\n\nvar getDefaultRedirectRoute = function (hasShow, hasEdit) {\n  if (hasEdit) {\n    return 'edit';\n  }\n\n  if (hasShow) {\n    return 'show';\n  }\n\n  return 'list';\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/useCreateController.js"],"names":["useCallback","inflection","parse","useLocation","useCheckMinimumRequiredProps","useCreate","useNotify","useRedirect","useSaveModifiers","useTranslate","useVersion","CRUD_CREATE","useCreateController","props","basePath","resource","_a","record","hasShow","hasEdit","successMessage","onSuccess","onFailure","transform","location","translate","notify","redirect","recordToUse","getRecord","version","process","env","NODE_ENV","console","log","_b","onSuccessRef","setOnSuccess","onFailureRef","setOnFailure","transformRef","setTransform","_c","create","saving","loading","save","data","redirectTo","onSuccessFromSave","onFailureFromSave","transformFromSave","Promise","resolve","current","then","payload","action","newRecord","smart_count","id","error","message","resourceName","_","humanize","singularize","defaultTitle","name","loaded","getDefaultRedirectRoute","state","search","searchParams","source","Array","isArray","JSON","e"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\n// @ts-ignore\nimport inflection from 'inflection';\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport { useCreate } from '../dataProvider';\nimport { useNotify, useRedirect } from '../sideEffect';\nimport { useSaveModifiers, } from './saveModifiers';\nimport { useTranslate } from '../i18n';\nimport { useVersion } from '.';\nimport { CRUD_CREATE } from '../actions';\n/**\n * Prepare data for the Create view\n *\n * @param {Object} props The props passed to the Create component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Create view\n *\n * @example\n *\n * import { useCreateController } from 'react-admin';\n * import CreateView from './CreateView';\n *\n * const MyCreate = props => {\n *     const controllerProps = useCreateController(props);\n *     return <CreateView {...controllerProps} {...props} />;\n * }\n */\nvar useCreateController = function (props) {\n    useCheckMinimumRequiredProps('Create', ['basePath', 'resource'], props);\n    var basePath = props.basePath, resource = props.resource, _a = props.record, record = _a === void 0 ? {} : _a, hasShow = props.hasShow, hasEdit = props.hasEdit, successMessage = props.successMessage, onSuccess = props.onSuccess, onFailure = props.onFailure, transform = props.transform;\n    var location = useLocation();\n    var translate = useTranslate();\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var recordToUse = getRecord(location, record);\n    var version = useVersion();\n    if (process.env.NODE_ENV !== 'production' && successMessage) {\n        console.log('<Edit successMessage> prop is deprecated, use the onSuccess prop instead.');\n    }\n    var _b = useSaveModifiers({ onSuccess: onSuccess, onFailure: onFailure, transform: transform }), onSuccessRef = _b.onSuccessRef, setOnSuccess = _b.setOnSuccess, onFailureRef = _b.onFailureRef, setOnFailure = _b.setOnFailure, transformRef = _b.transformRef, setTransform = _b.setTransform;\n    var _c = useCreate(resource), create = _c[0], saving = _c[1].loading;\n    var save = useCallback(function (data, redirectTo, _a) {\n        if (redirectTo === void 0) { redirectTo = 'list'; }\n        var _b = _a === void 0 ? {} : _a, onSuccessFromSave = _b.onSuccess, onFailureFromSave = _b.onFailure, transformFromSave = _b.transform;\n        return Promise.resolve(transformFromSave\n            ? transformFromSave(data)\n            : transformRef.current\n                ? transformRef.current(data)\n                : data).then(function (data) {\n            return create({ payload: { data: data } }, {\n                action: CRUD_CREATE,\n                onSuccess: onSuccessFromSave\n                    ? onSuccessFromSave\n                    : onSuccessRef.current\n                        ? onSuccessRef.current\n                        : function (_a) {\n                            var newRecord = _a.data;\n                            notify(successMessage ||\n                                'ra.notification.created', 'info', {\n                                smart_count: 1,\n                            });\n                            redirect(redirectTo, basePath, newRecord.id, newRecord);\n                        },\n                onFailure: onFailureFromSave\n                    ? onFailureFromSave\n                    : onFailureRef.current\n                        ? onFailureRef.current\n                        : function (error) {\n                            notify(typeof error === 'string'\n                                ? error\n                                : error.message ||\n                                    'ra.notification.http_error', 'warning');\n                        },\n            });\n        });\n    }, [\n        transformRef,\n        create,\n        onSuccessRef,\n        onFailureRef,\n        notify,\n        successMessage,\n        redirect,\n        basePath,\n    ]);\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n        smart_count: 1,\n        _: inflection.humanize(inflection.singularize(resource)),\n    });\n    var defaultTitle = translate('ra.page.create', {\n        name: \"\" + resourceName,\n    });\n    return {\n        loading: false,\n        loaded: true,\n        saving: saving,\n        defaultTitle: defaultTitle,\n        save: save,\n        setOnSuccess: setOnSuccess,\n        setOnFailure: setOnFailure,\n        setTransform: setTransform,\n        resource: resource,\n        basePath: basePath,\n        record: recordToUse,\n        redirect: getDefaultRedirectRoute(hasShow, hasEdit),\n        version: version,\n    };\n};\nexport default useCreateController;\nexport var getRecord = function (_a, record) {\n    var state = _a.state, search = _a.search;\n    if (record === void 0) { record = {}; }\n    if (state && state.record) {\n        return state.record;\n    }\n    if (search) {\n        try {\n            var searchParams = parse(search);\n            if (searchParams.source) {\n                if (Array.isArray(searchParams.source)) {\n                    console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n                    return;\n                }\n                return JSON.parse(searchParams.source);\n            }\n        }\n        catch (e) {\n            console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n        }\n    }\n    return record;\n};\nvar getDefaultRedirectRoute = function (hasShow, hasEdit) {\n    if (hasEdit) {\n        return 'edit';\n    }\n    if (hasShow) {\n        return 'show';\n    }\n    return 'list';\n};\n"]},"metadata":{},"sourceType":"module"}