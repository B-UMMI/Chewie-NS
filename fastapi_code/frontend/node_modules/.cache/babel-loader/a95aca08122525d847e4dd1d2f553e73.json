{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport InputHelperText from './InputHelperText';\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\n\nvar convertDateToString = function (value) {\n  if (!(value instanceof Date) || isNaN(value.getDate())) return;\n  var pad = '00';\n  var yyyy = value.getFullYear().toString();\n  var MM = (value.getMonth() + 1).toString();\n  var dd = value.getDate().toString();\n  return yyyy + \"-\" + (pad + MM).slice(-2) + \"-\" + (pad + dd).slice(-2);\n};\n\nvar dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n\nvar getStringFromDate = function (value) {\n  // null, undefined and empty string values should not go through dateFormatter\n  // otherwise, it returns undefined and will make the input an uncontrolled one.\n  if (value == null || value === '') {\n    return '';\n  }\n\n  if (value instanceof Date) {\n    return convertDateToString(value);\n  } // valid dates should not be converted\n\n\n  if (dateRegex.test(value)) {\n    return value;\n  }\n\n  return convertDateToString(new Date(value));\n};\n\nvar DateInput = function (_a) {\n  var _b = _a.format,\n      format = _b === void 0 ? getStringFromDate : _b,\n      label = _a.label,\n      options = _a.options,\n      source = _a.source,\n      resource = _a.resource,\n      helperText = _a.helperText,\n      _c = _a.margin,\n      margin = _c === void 0 ? 'dense' : _c,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      onFocus = _a.onFocus,\n      parse = _a.parse,\n      validate = _a.validate,\n      _d = _a.variant,\n      variant = _d === void 0 ? 'filled' : _d,\n      rest = __rest(_a, [\"format\", \"label\", \"options\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\", \"variant\"]);\n\n  var _e = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _e.id,\n      input = _e.input,\n      isRequired = _e.isRequired,\n      _f = _e.meta,\n      error = _f.error,\n      touched = _f.touched;\n\n  return React.createElement(TextField, __assign({\n    id: id\n  }, input, {\n    variant: variant,\n    margin: margin,\n    type: \"date\",\n    error: !!(touched && error),\n    helperText: React.createElement(InputHelperText, {\n      touched: touched,\n      error: error,\n      helperText: helperText\n    }),\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    InputLabelProps: {\n      shrink: true\n    }\n  }, options, sanitizeRestProps(rest)));\n};\n\nDateInput.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.object,\n  resource: PropTypes.string,\n  source: PropTypes.string\n};\nDateInput.defaultProps = {\n  options: {}\n};\nexport default DateInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/DateInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","TextField","useInput","FieldTitle","sanitizeRestProps","InputHelperText","convertDateToString","value","Date","isNaN","getDate","pad","yyyy","getFullYear","toString","MM","getMonth","dd","slice","dateRegex","getStringFromDate","test","DateInput","_a","_b","format","label","options","source","resource","helperText","_c","margin","onBlur","onChange","onFocus","parse","validate","_d","variant","rest","_e","id","input","isRequired","_f","meta","error","touched","createElement","type","InputLabelProps","shrink","propTypes","string","object","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport InputHelperText from './InputHelperText';\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\nvar convertDateToString = function (value) {\n    if (!(value instanceof Date) || isNaN(value.getDate()))\n        return;\n    var pad = '00';\n    var yyyy = value.getFullYear().toString();\n    var MM = (value.getMonth() + 1).toString();\n    var dd = value.getDate().toString();\n    return yyyy + \"-\" + (pad + MM).slice(-2) + \"-\" + (pad + dd).slice(-2);\n};\nvar dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\nvar getStringFromDate = function (value) {\n    // null, undefined and empty string values should not go through dateFormatter\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\n    if (value == null || value === '') {\n        return '';\n    }\n    if (value instanceof Date) {\n        return convertDateToString(value);\n    }\n    // valid dates should not be converted\n    if (dateRegex.test(value)) {\n        return value;\n    }\n    return convertDateToString(new Date(value));\n};\nvar DateInput = function (_a) {\n    var _b = _a.format, format = _b === void 0 ? getStringFromDate : _b, label = _a.label, options = _a.options, source = _a.source, resource = _a.resource, helperText = _a.helperText, _c = _a.margin, margin = _c === void 0 ? 'dense' : _c, onBlur = _a.onBlur, onChange = _a.onChange, onFocus = _a.onFocus, parse = _a.parse, validate = _a.validate, _d = _a.variant, variant = _d === void 0 ? 'filled' : _d, rest = __rest(_a, [\"format\", \"label\", \"options\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\", \"variant\"]);\n    var _e = useInput(__assign({ format: format,\n        onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        resource: resource,\n        source: source,\n        validate: validate }, rest)), id = _e.id, input = _e.input, isRequired = _e.isRequired, _f = _e.meta, error = _f.error, touched = _f.touched;\n    return (React.createElement(TextField, __assign({ id: id }, input, { variant: variant, margin: margin, type: \"date\", error: !!(touched && error), helperText: React.createElement(InputHelperText, { touched: touched, error: error, helperText: helperText }), label: React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired }), InputLabelProps: {\n            shrink: true,\n        } }, options, sanitizeRestProps(rest))));\n};\nDateInput.propTypes = {\n    label: PropTypes.string,\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\nDateInput.defaultProps = {\n    options: {},\n};\nexport default DateInput;\n"]},"metadata":{},"sourceType":"module"}