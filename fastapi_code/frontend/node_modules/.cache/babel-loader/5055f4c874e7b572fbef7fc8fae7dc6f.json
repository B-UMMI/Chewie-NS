{"ast":null,"code":"import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crudGetMatchingAccumulate } from '../../actions/accumulateActions';\nimport { getPossibleReferences, getPossibleReferenceValues, getReferenceResource } from '../../reducer';\nimport { useDeepCompareEffect } from '../../util/hooks';\n\nvar defaultReferenceSource = function (resource, source) {\n  return resource + \"@\" + source;\n};\n\nexport default (function (_a) {\n  var reference = _a.reference,\n      _b = _a.referenceSource,\n      referenceSource = _b === void 0 ? defaultReferenceSource : _b,\n      resource = _a.resource,\n      source = _a.source,\n      filter = _a.filter,\n      pagination = _a.pagination,\n      sort = _a.sort,\n      id = _a.id;\n  var dispatch = useDispatch();\n  useDeepCompareEffect(function () {\n    dispatch(crudGetMatchingAccumulate(reference, referenceSource(resource, source), pagination, sort, filter));\n  }, [dispatch, filter, reference, referenceSource, resource, source, pagination, sort]);\n  var matchingReferences = useGetMatchingReferenceSelector({\n    referenceSource: referenceSource,\n    reference: reference,\n    resource: resource,\n    source: source,\n    id: id\n  });\n\n  if (!matchingReferences) {\n    return {\n      loading: true,\n      error: null,\n      matchingReferences: null\n    };\n  }\n\n  if (matchingReferences.error) {\n    return {\n      loading: false,\n      matchingReferences: null,\n      error: matchingReferences.error\n    };\n  }\n\n  return {\n    loading: false,\n    error: null,\n    matchingReferences: matchingReferences\n  };\n});\n\nvar useGetMatchingReferenceSelector = function (_a) {\n  var referenceSource = _a.referenceSource,\n      reference = _a.reference,\n      resource = _a.resource,\n      source = _a.source,\n      id = _a.id;\n  var getMatchingReferences = useCallback(function (state) {\n    var referenceResource = getReferenceResource(state, {\n      reference: reference\n    });\n\n    if ( // resources are registered\n    Object.keys(state.admin.resources).length > 0 && // no registered resource matching the reference\n    !referenceResource) {\n      throw new Error(\"Cannot fetch a reference to \\\"\" + reference + \"\\\" (unknown resource).\\nYou must add <Resource name=\\\"\" + reference + \"\\\" /> as child of <Admin> to use \\\"\" + reference + \"\\\" in a reference\");\n    }\n\n    var possibleValues = getPossibleReferenceValues(state, {\n      referenceSource: referenceSource,\n      resource: resource,\n      source: source\n    });\n    return getPossibleReferences(referenceResource, possibleValues, [id]);\n  }, [referenceSource, reference, resource, source, id]);\n  return useSelector(getMatchingReferences);\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/input/useGetMatchingReferences.js"],"names":["useCallback","useSelector","useDispatch","crudGetMatchingAccumulate","getPossibleReferences","getPossibleReferenceValues","getReferenceResource","useDeepCompareEffect","defaultReferenceSource","resource","source","_a","reference","_b","referenceSource","filter","pagination","sort","id","dispatch","matchingReferences","useGetMatchingReferenceSelector","loading","error","getMatchingReferences","state","referenceResource","Object","keys","admin","resources","length","Error","possibleValues"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crudGetMatchingAccumulate } from '../../actions/accumulateActions';\nimport { getPossibleReferences, getPossibleReferenceValues, getReferenceResource, } from '../../reducer';\nimport { useDeepCompareEffect } from '../../util/hooks';\nvar defaultReferenceSource = function (resource, source) {\n    return resource + \"@\" + source;\n};\nexport default (function (_a) {\n    var reference = _a.reference, _b = _a.referenceSource, referenceSource = _b === void 0 ? defaultReferenceSource : _b, resource = _a.resource, source = _a.source, filter = _a.filter, pagination = _a.pagination, sort = _a.sort, id = _a.id;\n    var dispatch = useDispatch();\n    useDeepCompareEffect(function () {\n        dispatch(crudGetMatchingAccumulate(reference, referenceSource(resource, source), pagination, sort, filter));\n    }, [\n        dispatch,\n        filter,\n        reference,\n        referenceSource,\n        resource,\n        source,\n        pagination,\n        sort,\n    ]);\n    var matchingReferences = useGetMatchingReferenceSelector({\n        referenceSource: referenceSource,\n        reference: reference,\n        resource: resource,\n        source: source,\n        id: id,\n    });\n    if (!matchingReferences) {\n        return {\n            loading: true,\n            error: null,\n            matchingReferences: null,\n        };\n    }\n    if (matchingReferences.error) {\n        return {\n            loading: false,\n            matchingReferences: null,\n            error: matchingReferences.error,\n        };\n    }\n    return {\n        loading: false,\n        error: null,\n        matchingReferences: matchingReferences,\n    };\n});\nvar useGetMatchingReferenceSelector = function (_a) {\n    var referenceSource = _a.referenceSource, reference = _a.reference, resource = _a.resource, source = _a.source, id = _a.id;\n    var getMatchingReferences = useCallback(function (state) {\n        var referenceResource = getReferenceResource(state, {\n            reference: reference,\n        });\n        if (\n        // resources are registered\n        Object.keys(state.admin.resources).length > 0 &&\n            // no registered resource matching the reference\n            !referenceResource) {\n            throw new Error(\"Cannot fetch a reference to \\\"\" + reference + \"\\\" (unknown resource).\\nYou must add <Resource name=\\\"\" + reference + \"\\\" /> as child of <Admin> to use \\\"\" + reference + \"\\\" in a reference\");\n        }\n        var possibleValues = getPossibleReferenceValues(state, {\n            referenceSource: referenceSource,\n            resource: resource,\n            source: source,\n        });\n        return getPossibleReferences(referenceResource, possibleValues, [\n            id,\n        ]);\n    }, [referenceSource, reference, resource, source, id]);\n    return useSelector(getMatchingReferences);\n};\n"]},"metadata":{},"sourceType":"module"}