{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose'; //      \n\nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n}; //      \n\n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2; // object set\n\n\n    if (current === undefined || current === null) {\n      var _ref; // recurse\n\n\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error'; //      \n\n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n} //      \n\n\nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating']; //      \n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; //      \n\n\nfunction subscriptionFilter(dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n} //      \n\n\nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}; //      \n\n\nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited']; //      \n\nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n} //      \n\n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n};\n\nvar version = \"4.20.1\";\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };","map":{"version":3,"sources":["/node_modules/final-form/dist/final-form.es.js"],"names":["_extends","_objectWithoutPropertiesLoose","keysCache","keysRegex","toPath","key","undefined","length","Error","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","Number","setInRecursor","index","value","destroyArrays","_extends2","_ref","_result2","_result","numKeys","Object","keys","_removed","_final","map","numericKey","_result3","_array","existingValue","result","array","concat","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","modifiedSinceLastSubmit","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","dirtySinceLastSubmit","valid","dirty","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","configOptions","tripleEquals","hasAnyError","convertToExternalFormState","hasSubmitErrors","hasValidationErrors","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","clearAsyncValidationPromise","changeValue","mutate","before","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","runRecordLevelValidation","setErrors","promises","errorsOrPromise","push","getValidators","validators","validator","runFieldLevelValidation","setError","errorOrPromise","promise","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","hasAsyncValidations","asyncValidationPromiseKey","Promise","all","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldState","fieldSubscriber","markAllFieldsTouched","hasSyncErrors","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","_safeFieldKeys$reduce","callDebug","notifying","scheduleNotification","beforeSubmit","afterSubmit","resetModifiedAfterSubmit","batch","getFieldState","getRegisteredFields","getState","initialize","savedDirtyValues","isValidationPaused","pauseValidation","registerField","fieldConfig","haveValidator","silent","getValidator","initialValue","defaultValue","validatorRemoved","lastOne","reset","restart","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","console","submitIsBlocked","resolvePromise","completeCalled","complete","resolve","subscribe","memoized"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.20.1\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"]},"metadata":{},"sourceType":"module"}