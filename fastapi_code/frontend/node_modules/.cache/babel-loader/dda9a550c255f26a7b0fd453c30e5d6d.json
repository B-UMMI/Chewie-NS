{"ast":null,"code":"import { GET_ONE } from '../../core';\nexport var crudGetOne = function (resource, id, basePath, refresh) {\n  if (refresh === void 0) {\n    refresh = true;\n  }\n\n  return {\n    type: CRUD_GET_ONE,\n    payload: {\n      id: id\n    },\n    meta: {\n      resource: resource,\n      fetch: GET_ONE,\n      basePath: basePath,\n      onFailure: {\n        notification: {\n          body: 'ra.notification.item_doesnt_exist',\n          level: 'warning'\n        },\n        redirectTo: 'list',\n        refresh: refresh\n      }\n    }\n  };\n};\nexport var CRUD_GET_ONE = 'RA/CRUD_GET_ONE';\nexport var CRUD_GET_ONE_LOADING = 'RA/CRUD_GET_ONE_LOADING';\nexport var CRUD_GET_ONE_FAILURE = 'RA/CRUD_GET_ONE_FAILURE';\nexport var CRUD_GET_ONE_SUCCESS = 'RA/CRUD_GET_ONE_SUCCESS';","map":{"version":3,"sources":["/node_modules/ra-core/esm/actions/dataActions/crudGetOne.js"],"names":["GET_ONE","crudGetOne","resource","id","basePath","refresh","type","CRUD_GET_ONE","payload","meta","fetch","onFailure","notification","body","level","redirectTo","CRUD_GET_ONE_LOADING","CRUD_GET_ONE_FAILURE","CRUD_GET_ONE_SUCCESS"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,QAAV,EAAoBC,EAApB,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2C;AAC/D,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,SAAQ;AACJC,IAAAA,IAAI,EAAEC,YADF;AAEJC,IAAAA,OAAO,EAAE;AAAEL,MAAAA,EAAE,EAAEA;AAAN,KAFL;AAGJM,IAAAA,IAAI,EAAE;AACFP,MAAAA,QAAQ,EAAEA,QADR;AAEFQ,MAAAA,KAAK,EAAEV,OAFL;AAGFI,MAAAA,QAAQ,EAAEA,QAHR;AAIFO,MAAAA,SAAS,EAAE;AACPC,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAE,mCADI;AAEVC,UAAAA,KAAK,EAAE;AAFG,SADP;AAKPC,QAAAA,UAAU,EAAE,MALL;AAMPV,QAAAA,OAAO,EAAEA;AANF;AAJT;AAHF,GAAR;AAiBH,CAnBM;AAoBP,OAAO,IAAIE,YAAY,GAAG,iBAAnB;AACP,OAAO,IAAIS,oBAAoB,GAAG,yBAA3B;AACP,OAAO,IAAIC,oBAAoB,GAAG,yBAA3B;AACP,OAAO,IAAIC,oBAAoB,GAAG,yBAA3B","sourcesContent":["import { GET_ONE } from '../../core';\nexport var crudGetOne = function (resource, id, basePath, refresh) {\n    if (refresh === void 0) { refresh = true; }\n    return ({\n        type: CRUD_GET_ONE,\n        payload: { id: id },\n        meta: {\n            resource: resource,\n            fetch: GET_ONE,\n            basePath: basePath,\n            onFailure: {\n                notification: {\n                    body: 'ra.notification.item_doesnt_exist',\n                    level: 'warning',\n                },\n                redirectTo: 'list',\n                refresh: refresh,\n            },\n        },\n    });\n};\nexport var CRUD_GET_ONE = 'RA/CRUD_GET_ONE';\nexport var CRUD_GET_ONE_LOADING = 'RA/CRUD_GET_ONE_LOADING';\nexport var CRUD_GET_ONE_FAILURE = 'RA/CRUD_GET_ONE_FAILURE';\nexport var CRUD_GET_ONE_SUCCESS = 'RA/CRUD_GET_ONE_SUCCESS';\n"]},"metadata":{},"sourceType":"module"}