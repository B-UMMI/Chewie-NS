{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport useDataProvider from './useDataProvider';\nimport { useMemo } from 'react';\nimport useDeclarativeSideEffects from './useDeclarativeSideEffects';\n/**\n * This version of the useDataProvider hook ensure Query and Mutation components are still usable\n * with side effects declared as objects.\n *\n * @deprecated This is for backward compatibility only and will be removed in next major version.\n */\n\nvar useDataProviderWithDeclarativeSideEffects = function () {\n  var dataProvider = useDataProvider();\n  var getSideEffects = useDeclarativeSideEffects();\n  var dataProviderProxy = useMemo(function () {\n    return new Proxy(dataProvider, {\n      get: function (target, name) {\n        if (typeof name === 'symbol') {\n          return;\n        }\n\n        return function (resource, payload, options) {\n          var _a = getSideEffects(resource, options),\n              onSuccess = _a.onSuccess,\n              onFailure = _a.onFailure;\n\n          try {\n            return target[name.toString()](resource, payload, __assign(__assign({}, options), {\n              onSuccess: onSuccess,\n              onFailure: onFailure\n            }));\n          } catch (e) {\n            // turn synchronous exceptions (e.g. in parameter preparation)\n            // into async ones, otherwise they'll be lost\n            return Promise.reject(e);\n          }\n        };\n      }\n    });\n  }, [dataProvider, getSideEffects]);\n  return dataProviderProxy;\n};\n\nexport default useDataProviderWithDeclarativeSideEffects;","map":{"version":3,"sources":["/node_modules/ra-core/esm/dataProvider/useDataProviderWithDeclarativeSideEffects.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useDataProvider","useMemo","useDeclarativeSideEffects","useDataProviderWithDeclarativeSideEffects","dataProvider","getSideEffects","dataProviderProxy","Proxy","get","target","name","resource","payload","options","_a","onSuccess","onFailure","toString","e","Promise","reject"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA;;;;;;;AAMA,IAAIC,yCAAyC,GAAG,YAAY;AACxD,MAAIC,YAAY,GAAGJ,eAAe,EAAlC;AACA,MAAIK,cAAc,GAAGH,yBAAyB,EAA9C;AACA,MAAII,iBAAiB,GAAGL,OAAO,CAAC,YAAY;AACxC,WAAO,IAAIM,KAAJ,CAAUH,YAAV,EAAwB;AAC3BI,MAAAA,GAAG,EAAE,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AACzB,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,eAAO,UAAUC,QAAV,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsC;AACzC,cAAIC,EAAE,GAAGT,cAAc,CAACM,QAAD,EAAWE,OAAX,CAAvB;AAAA,cAA4CE,SAAS,GAAGD,EAAE,CAACC,SAA3D;AAAA,cAAsEC,SAAS,GAAGF,EAAE,CAACE,SAArF;;AACA,cAAI;AACA,mBAAOP,MAAM,CAACC,IAAI,CAACO,QAAL,EAAD,CAAN,CAAwBN,QAAxB,EAAkCC,OAAlC,EAA2C1B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK2B,OAAL,CAAT,EAAwB;AAAEE,cAAAA,SAAS,EAAEA,SAAb;AAC9EC,cAAAA,SAAS,EAAEA;AADmE,aAAxB,CAAnD,CAAP;AAEH,WAHD,CAIA,OAAOE,CAAP,EAAU;AACN;AACA;AACA,mBAAOC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAP;AACH;AACJ,SAXD;AAYH;AAjB0B,KAAxB,CAAP;AAmBH,GApB8B,EAoB5B,CAACd,YAAD,EAAeC,cAAf,CApB4B,CAA/B;AAqBA,SAAOC,iBAAP;AACH,CAzBD;;AA0BA,eAAeH,yCAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport useDataProvider from './useDataProvider';\nimport { useMemo } from 'react';\nimport useDeclarativeSideEffects from './useDeclarativeSideEffects';\n/**\n * This version of the useDataProvider hook ensure Query and Mutation components are still usable\n * with side effects declared as objects.\n *\n * @deprecated This is for backward compatibility only and will be removed in next major version.\n */\nvar useDataProviderWithDeclarativeSideEffects = function () {\n    var dataProvider = useDataProvider();\n    var getSideEffects = useDeclarativeSideEffects();\n    var dataProviderProxy = useMemo(function () {\n        return new Proxy(dataProvider, {\n            get: function (target, name) {\n                if (typeof name === 'symbol') {\n                    return;\n                }\n                return function (resource, payload, options) {\n                    var _a = getSideEffects(resource, options), onSuccess = _a.onSuccess, onFailure = _a.onFailure;\n                    try {\n                        return target[name.toString()](resource, payload, __assign(__assign({}, options), { onSuccess: onSuccess,\n                            onFailure: onFailure }));\n                    }\n                    catch (e) {\n                        // turn synchronous exceptions (e.g. in parameter preparation)\n                        // into async ones, otherwise they'll be lost\n                        return Promise.reject(e);\n                    }\n                };\n            },\n        });\n    }, [dataProvider, getSideEffects]);\n    return dataProviderProxy;\n};\nexport default useDataProviderWithDeclarativeSideEffects;\n"]},"metadata":{},"sourceType":"module"}