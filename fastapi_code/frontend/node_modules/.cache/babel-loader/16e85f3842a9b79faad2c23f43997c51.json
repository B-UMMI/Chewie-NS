{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody } from '@material-ui/core';\nimport classnames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport DatagridRow, { PureDatagridRow } from './DatagridRow';\n\nvar DatagridBody = function (_a) {\n  var basePath = _a.basePath,\n      children = _a.children,\n      classes = _a.classes,\n      className = _a.className,\n      data = _a.data,\n      expand = _a.expand,\n      hasBulkActions = _a.hasBulkActions,\n      hover = _a.hover,\n      ids = _a.ids,\n      onToggleItem = _a.onToggleItem,\n      resource = _a.resource,\n      row = _a.row,\n      rowClick = _a.rowClick,\n      rowStyle = _a.rowStyle,\n      selectedIds = _a.selectedIds,\n      isRowSelectable = _a.isRowSelectable,\n      rest = __rest(_a, [\"basePath\", \"children\", \"classes\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"ids\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n\n  return React.createElement(TableBody, __assign({\n    className: classnames('datagrid-body', className)\n  }, rest), ids.map(function (id, rowIndex) {\n    var _a;\n\n    return cloneElement(row, {\n      basePath: basePath,\n      classes: classes,\n      className: classnames(classes.row, (_a = {}, _a[classes.rowEven] = rowIndex % 2 === 0, _a[classes.rowOdd] = rowIndex % 2 !== 0, _a[classes.clickableRow] = rowClick, _a)),\n      expand: expand,\n      hasBulkActions: hasBulkActions,\n      hover: hover,\n      id: id,\n      key: id,\n      onToggleItem: onToggleItem,\n      record: data[id],\n      resource: resource,\n      rowClick: rowClick,\n      selectable: !isRowSelectable || isRowSelectable(data[id]),\n      selected: selectedIds.includes(id),\n      style: rowStyle ? rowStyle(data[id], rowIndex) : null\n    }, children);\n  }));\n};\n\nDatagridBody.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.any,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  // @ts-ignore\n  data: PropTypes.object.isRequired,\n  // @ts-ignore\n  expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n  hasBulkActions: PropTypes.bool.isRequired,\n  hover: PropTypes.bool,\n  ids: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  row: PropTypes.element,\n  rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  rowStyle: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  styles: PropTypes.object,\n  isRowSelectable: PropTypes.func\n};\nDatagridBody.defaultProps = {\n  data: {},\n  hasBulkActions: false,\n  ids: [],\n  row: React.createElement(DatagridRow, null)\n}; // trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\n\nDatagridBody.muiName = 'TableBody';\n\nvar areEqual = function (prevProps, nextProps) {\n  var _ = prevProps.children,\n      prevPropsWithoutChildren = __rest(prevProps, [\"children\"]);\n\n  var __ = nextProps.children,\n      nextPropsWithoutChildren = __rest(nextProps, [\"children\"]);\n\n  return isEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);\n};\n\nexport var PureDatagridBody = memo(DatagridBody, areEqual); // trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\n\nPureDatagridBody.muiName = 'TableBody'; // @ts-ignore\n\nPureDatagridBody.defaultProps = {\n  row: React.createElement(PureDatagridRow, null)\n};\nexport default DatagridBody;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/list/datagrid/DatagridBody.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","memo","PropTypes","TableBody","classnames","isEqual","DatagridRow","PureDatagridRow","DatagridBody","_a","basePath","children","classes","className","data","expand","hasBulkActions","hover","ids","onToggleItem","resource","row","rowClick","rowStyle","selectedIds","isRowSelectable","rest","createElement","map","id","rowIndex","rowEven","rowOdd","clickableRow","key","record","selectable","selected","includes","style","propTypes","string","any","node","object","isRequired","oneOfType","element","elementType","bool","arrayOf","func","styles","defaultProps","muiName","areEqual","prevProps","nextProps","_","prevPropsWithoutChildren","__","nextPropsWithoutChildren","PureDatagridBody"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody } from '@material-ui/core';\nimport classnames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport DatagridRow, { PureDatagridRow } from './DatagridRow';\nvar DatagridBody = function (_a) {\n    var basePath = _a.basePath, children = _a.children, classes = _a.classes, className = _a.className, data = _a.data, expand = _a.expand, hasBulkActions = _a.hasBulkActions, hover = _a.hover, ids = _a.ids, onToggleItem = _a.onToggleItem, resource = _a.resource, row = _a.row, rowClick = _a.rowClick, rowStyle = _a.rowStyle, selectedIds = _a.selectedIds, isRowSelectable = _a.isRowSelectable, rest = __rest(_a, [\"basePath\", \"children\", \"classes\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"ids\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n    return (React.createElement(TableBody, __assign({ className: classnames('datagrid-body', className) }, rest), ids.map(function (id, rowIndex) {\n        var _a;\n        return cloneElement(row, {\n            basePath: basePath,\n            classes: classes,\n            className: classnames(classes.row, (_a = {},\n                _a[classes.rowEven] = rowIndex % 2 === 0,\n                _a[classes.rowOdd] = rowIndex % 2 !== 0,\n                _a[classes.clickableRow] = rowClick,\n                _a)),\n            expand: expand,\n            hasBulkActions: hasBulkActions,\n            hover: hover,\n            id: id,\n            key: id,\n            onToggleItem: onToggleItem,\n            record: data[id],\n            resource: resource,\n            rowClick: rowClick,\n            selectable: !isRowSelectable || isRowSelectable(data[id]),\n            selected: selectedIds.includes(id),\n            style: rowStyle ? rowStyle(data[id], rowIndex) : null,\n        }, children);\n    })));\n};\nDatagridBody.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.any,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    // @ts-ignore\n    data: PropTypes.object.isRequired,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool.isRequired,\n    hover: PropTypes.bool,\n    ids: PropTypes.arrayOf(PropTypes.any).isRequired,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    row: PropTypes.element,\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    rowStyle: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    styles: PropTypes.object,\n    isRowSelectable: PropTypes.func,\n};\nDatagridBody.defaultProps = {\n    data: {},\n    hasBulkActions: false,\n    ids: [],\n    row: React.createElement(DatagridRow, null),\n};\n// trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\nDatagridBody.muiName = 'TableBody';\nvar areEqual = function (prevProps, nextProps) {\n    var _ = prevProps.children, prevPropsWithoutChildren = __rest(prevProps, [\"children\"]);\n    var __ = nextProps.children, nextPropsWithoutChildren = __rest(nextProps, [\"children\"]);\n    return isEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);\n};\nexport var PureDatagridBody = memo(DatagridBody, areEqual);\n// trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\nPureDatagridBody.muiName = 'TableBody';\n// @ts-ignore\nPureDatagridBody.defaultProps = {\n    row: React.createElement(PureDatagridRow, null),\n};\nexport default DatagridBody;\n"]},"metadata":{},"sourceType":"module"}