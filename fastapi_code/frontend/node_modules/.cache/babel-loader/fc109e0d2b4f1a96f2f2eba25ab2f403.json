{"ast":null,"code":"import { combineReducers } from 'redux';\nimport resources, { getResources as resourceGetResources, getReferenceResource as resourceGetReferenceResource } from './resource';\nimport loading from './loading';\nimport notifications from './notifications';\nimport references, { getPossibleReferenceValues as referencesGetPossibleReferenceValues } from './references';\nimport ui from './ui';\nimport customQueries from './customQueries';\n\nvar defaultReducer = function () {\n  return null;\n};\n\nexport default combineReducers({\n  /**\n   * ts-jest does some aggressive module mocking when unit testing reducers individually.\n   * To avoid 'No reducer provided for key \"...\"' warnings,\n   * we pass default reducers. Sorry for legibility.\n   *\n   * @see https://stackoverflow.com/questions/43375079/redux-warning-only-appearing-in-tests\n   */\n  resources: resources || defaultReducer,\n  customQueries: customQueries || defaultReducer,\n  loading: loading || defaultReducer,\n  notifications: notifications || defaultReducer,\n  references: references || defaultReducer,\n  ui: ui || defaultReducer\n});\nexport var getPossibleReferenceValues = function (state, props) {\n  return referencesGetPossibleReferenceValues(state.references, props);\n};\nexport var getResources = function (state) {\n  return resourceGetResources(state.resources);\n};\nexport var getReferenceResource = function (state, props) {\n  return resourceGetReferenceResource(state.resources, props);\n};\nexport { getPossibleReferences } from './references';","map":{"version":3,"sources":["/node_modules/ra-core/esm/reducer/admin/index.js"],"names":["combineReducers","resources","getResources","resourceGetResources","getReferenceResource","resourceGetReferenceResource","loading","notifications","references","getPossibleReferenceValues","referencesGetPossibleReferenceValues","ui","customQueries","defaultReducer","state","props","getPossibleReferences"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,SAAP,IAAoBC,YAAY,IAAIC,oBAApC,EAA0DC,oBAAoB,IAAIC,4BAAlF,QAAuH,YAAvH;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,IAAqBC,0BAA0B,IAAIC,oCAAnD,QAAgG,cAAhG;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,IAAIC,cAAc,GAAG,YAAY;AAAE,SAAO,IAAP;AAAc,CAAjD;;AACA,eAAeb,eAAe,CAAC;AAC3B;;;;;;;AAOAC,EAAAA,SAAS,EAAEA,SAAS,IAAIY,cARG;AAS3BD,EAAAA,aAAa,EAAEA,aAAa,IAAIC,cATL;AAU3BP,EAAAA,OAAO,EAAEA,OAAO,IAAIO,cAVO;AAW3BN,EAAAA,aAAa,EAAEA,aAAa,IAAIM,cAXL;AAY3BL,EAAAA,UAAU,EAAEA,UAAU,IAAIK,cAZC;AAa3BF,EAAAA,EAAE,EAAEA,EAAE,IAAIE;AAbiB,CAAD,CAA9B;AAeA,OAAO,IAAIJ,0BAA0B,GAAG,UAAUK,KAAV,EAAiBC,KAAjB,EAAwB;AAC5D,SAAOL,oCAAoC,CAACI,KAAK,CAACN,UAAP,EAAmBO,KAAnB,CAA3C;AACH,CAFM;AAGP,OAAO,IAAIb,YAAY,GAAG,UAAUY,KAAV,EAAiB;AAAE,SAAOX,oBAAoB,CAACW,KAAK,CAACb,SAAP,CAA3B;AAA+C,CAArF;AACP,OAAO,IAAIG,oBAAoB,GAAG,UAAUU,KAAV,EAAiBC,KAAjB,EAAwB;AACtD,SAAOV,4BAA4B,CAACS,KAAK,CAACb,SAAP,EAAkBc,KAAlB,CAAnC;AACH,CAFM;AAGP,SAASC,qBAAT,QAAsC,cAAtC","sourcesContent":["import { combineReducers } from 'redux';\nimport resources, { getResources as resourceGetResources, getReferenceResource as resourceGetReferenceResource, } from './resource';\nimport loading from './loading';\nimport notifications from './notifications';\nimport references, { getPossibleReferenceValues as referencesGetPossibleReferenceValues, } from './references';\nimport ui from './ui';\nimport customQueries from './customQueries';\nvar defaultReducer = function () { return null; };\nexport default combineReducers({\n    /**\n     * ts-jest does some aggressive module mocking when unit testing reducers individually.\n     * To avoid 'No reducer provided for key \"...\"' warnings,\n     * we pass default reducers. Sorry for legibility.\n     *\n     * @see https://stackoverflow.com/questions/43375079/redux-warning-only-appearing-in-tests\n     */\n    resources: resources || defaultReducer,\n    customQueries: customQueries || defaultReducer,\n    loading: loading || defaultReducer,\n    notifications: notifications || defaultReducer,\n    references: references || defaultReducer,\n    ui: ui || defaultReducer,\n});\nexport var getPossibleReferenceValues = function (state, props) {\n    return referencesGetPossibleReferenceValues(state.references, props);\n};\nexport var getResources = function (state) { return resourceGetResources(state.resources); };\nexport var getReferenceResource = function (state, props) {\n    return resourceGetReferenceResource(state.resources, props);\n};\nexport { getPossibleReferences } from './references';\n"]},"metadata":{},"sourceType":"module"}