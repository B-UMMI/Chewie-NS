{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useContext, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContentSave from '@material-ui/icons/Save';\nimport classnames from 'classnames';\nimport { useTranslate, useNotify, SideEffectContext, FormContext } from 'ra-core';\nimport { sanitizeButtonRestProps } from './Button';\n/**\n * Submit button for resource forms (Edit and Create).\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <Toolbar>)\n * @prop {string} className\n * @prop {string} label Button label. Defaults to 'ra.action.save', translated.\n * @prop {boolean} disabled Disable the button.\n * @prop {string} variant Material-ui variant for the button. Defaults to 'contained'.\n * @prop {ReactElement} icon\n * @prop {string|boolean} redirect Override of the default redirect in case of success. Can be 'list', 'show', 'edit' (for create views), or false (to stay on the creation form).\n * @prop {function} onSave (deprecated)\n * @prop {function} onSuccess Callback to execute instead of the default success side effects. Receives the dataProvider response as argument.\n * @prop {function} onFailure Callback to execute instead of the default error side effects. Receives the dataProvider error response as argument.\n * @prop {function} transform Callback to execute before calling the dataProvider. Receives the data from the form, must return that transformed data. Can be asynchronous (and return a Promise)\n *\n * @param {Prop} props\n *\n * @example // with custom redirection\n *\n * <SaveButton label=\"post.action.save_and_edit\" redirect=\"edit\" />\n *\n * @example // with no redirection\n *\n * <SaveButton label=\"post.action.save_and_add\" redirect={false} />\n *\n * @example // with custom success side effect\n *\n * const MySaveButton = props => {\n *     const notify = useNotify();\n *     const redirect = useRedirect();\n *     const onSuccess = (response) => {\n *         notify(`Post \"${response.data.title}\" saved!`);\n *         redirect('/posts');\n *     };\n *     return <SaveButton {...props} onSuccess={onSuccess} />;\n * }\n */\n\nvar SaveButton = function (props) {\n  var className = props.className,\n      classesOverride = props.classes,\n      invalid = props.invalid,\n      _a = props.label,\n      label = _a === void 0 ? 'ra.action.save' : _a,\n      disabled = props.disabled,\n      redirect = props.redirect,\n      saving = props.saving,\n      submitOnEnter = props.submitOnEnter,\n      _b = props.variant,\n      variant = _b === void 0 ? 'contained' : _b,\n      _c = props.icon,\n      icon = _c === void 0 ? defaultIcon : _c,\n      onClick = props.onClick,\n      handleSubmitWithRedirect = props.handleSubmitWithRedirect,\n      onSave = props.onSave,\n      onSuccess = props.onSuccess,\n      onFailure = props.onFailure,\n      transform = props.transform,\n      rest = __rest(props, [\"className\", \"classes\", \"invalid\", \"label\", \"disabled\", \"redirect\", \"saving\", \"submitOnEnter\", \"variant\", \"icon\", \"onClick\", \"handleSubmitWithRedirect\", \"onSave\", \"onSuccess\", \"onFailure\", \"transform\"]);\n\n  var classes = useStyles(props);\n  var notify = useNotify();\n  var translate = useTranslate();\n  var setOnSave = useContext(FormContext).setOnSave;\n\n  var _d = useContext(SideEffectContext),\n      setOnSuccess = _d.setOnSuccess,\n      setOnFailure = _d.setOnFailure,\n      setTransform = _d.setTransform;\n\n  var handleClick = function (event) {\n    // deprecated: use onSuccess and transform instead of onSave\n    if (typeof onSave === 'function') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.log('<SaveButton onSave> prop is deprecated, use the onSuccess prop instead.');\n      }\n\n      setOnSave(onSave);\n    } else {\n      // we reset to the Form default save function\n      setOnSave();\n    }\n\n    if (onSuccess) {\n      setOnSuccess(onSuccess);\n    }\n\n    if (onFailure) {\n      setOnFailure(onFailure);\n    }\n\n    if (transform) {\n      setTransform(transform);\n    }\n\n    if (saving) {\n      // prevent double submission\n      event.preventDefault();\n    } else {\n      if (invalid) {\n        notify('ra.message.invalid_form', 'warning');\n      } // always submit form explicitly regardless of button type\n\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      handleSubmitWithRedirect(redirect);\n    }\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  };\n\n  var type = submitOnEnter ? 'submit' : 'button';\n  var displayedLabel = label && translate(label, {\n    _: label\n  });\n  return React.createElement(Button, __assign({\n    className: classnames(classes.button, className),\n    variant: variant,\n    type: type,\n    onClick: handleClick,\n    color: saving ? 'default' : 'primary',\n    \"aria-label\": displayedLabel,\n    disabled: disabled\n  }, sanitizeButtonRestProps(rest)), saving ? React.createElement(CircularProgress, {\n    size: 18,\n    thickness: 2,\n    className: classes.leftIcon\n  }) : cloneElement(icon, {\n    className: classnames(classes.leftIcon, classes.icon)\n  }), displayedLabel);\n};\n\nvar defaultIcon = React.createElement(ContentSave, null);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      position: 'relative'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1)\n    },\n    icon: {\n      fontSize: 18\n    }\n  };\n}, {\n  name: 'RaSaveButton'\n});\nSaveButton.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  handleSubmitWithRedirect: PropTypes.func,\n  // @deprecated\n  onSave: PropTypes.func,\n  invalid: PropTypes.bool,\n  label: PropTypes.string,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  saving: PropTypes.bool,\n  submitOnEnter: PropTypes.bool,\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained']),\n  icon: PropTypes.element\n};\nexport default SaveButton;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/button/SaveButton.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useContext","cloneElement","PropTypes","Button","CircularProgress","makeStyles","ContentSave","classnames","useTranslate","useNotify","SideEffectContext","FormContext","sanitizeButtonRestProps","SaveButton","props","className","classesOverride","classes","invalid","_a","label","disabled","redirect","saving","submitOnEnter","_b","variant","_c","icon","defaultIcon","onClick","handleSubmitWithRedirect","onSave","onSuccess","onFailure","transform","rest","useStyles","notify","translate","setOnSave","_d","setOnSuccess","setOnFailure","setTransform","handleClick","event","process","env","NODE_ENV","console","log","preventDefault","type","displayedLabel","_","createElement","button","color","size","thickness","leftIcon","theme","position","marginRight","spacing","fontSize","name","propTypes","string","object","func","bool","oneOfType","oneOf","element"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useContext, cloneElement, } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContentSave from '@material-ui/icons/Save';\nimport classnames from 'classnames';\nimport { useTranslate, useNotify, SideEffectContext, FormContext, } from 'ra-core';\nimport { sanitizeButtonRestProps } from './Button';\n/**\n * Submit button for resource forms (Edit and Create).\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <Toolbar>)\n * @prop {string} className\n * @prop {string} label Button label. Defaults to 'ra.action.save', translated.\n * @prop {boolean} disabled Disable the button.\n * @prop {string} variant Material-ui variant for the button. Defaults to 'contained'.\n * @prop {ReactElement} icon\n * @prop {string|boolean} redirect Override of the default redirect in case of success. Can be 'list', 'show', 'edit' (for create views), or false (to stay on the creation form).\n * @prop {function} onSave (deprecated)\n * @prop {function} onSuccess Callback to execute instead of the default success side effects. Receives the dataProvider response as argument.\n * @prop {function} onFailure Callback to execute instead of the default error side effects. Receives the dataProvider error response as argument.\n * @prop {function} transform Callback to execute before calling the dataProvider. Receives the data from the form, must return that transformed data. Can be asynchronous (and return a Promise)\n *\n * @param {Prop} props\n *\n * @example // with custom redirection\n *\n * <SaveButton label=\"post.action.save_and_edit\" redirect=\"edit\" />\n *\n * @example // with no redirection\n *\n * <SaveButton label=\"post.action.save_and_add\" redirect={false} />\n *\n * @example // with custom success side effect\n *\n * const MySaveButton = props => {\n *     const notify = useNotify();\n *     const redirect = useRedirect();\n *     const onSuccess = (response) => {\n *         notify(`Post \"${response.data.title}\" saved!`);\n *         redirect('/posts');\n *     };\n *     return <SaveButton {...props} onSuccess={onSuccess} />;\n * }\n */\nvar SaveButton = function (props) {\n    var className = props.className, classesOverride = props.classes, invalid = props.invalid, _a = props.label, label = _a === void 0 ? 'ra.action.save' : _a, disabled = props.disabled, redirect = props.redirect, saving = props.saving, submitOnEnter = props.submitOnEnter, _b = props.variant, variant = _b === void 0 ? 'contained' : _b, _c = props.icon, icon = _c === void 0 ? defaultIcon : _c, onClick = props.onClick, handleSubmitWithRedirect = props.handleSubmitWithRedirect, onSave = props.onSave, onSuccess = props.onSuccess, onFailure = props.onFailure, transform = props.transform, rest = __rest(props, [\"className\", \"classes\", \"invalid\", \"label\", \"disabled\", \"redirect\", \"saving\", \"submitOnEnter\", \"variant\", \"icon\", \"onClick\", \"handleSubmitWithRedirect\", \"onSave\", \"onSuccess\", \"onFailure\", \"transform\"]);\n    var classes = useStyles(props);\n    var notify = useNotify();\n    var translate = useTranslate();\n    var setOnSave = useContext(FormContext).setOnSave;\n    var _d = useContext(SideEffectContext), setOnSuccess = _d.setOnSuccess, setOnFailure = _d.setOnFailure, setTransform = _d.setTransform;\n    var handleClick = function (event) {\n        // deprecated: use onSuccess and transform instead of onSave\n        if (typeof onSave === 'function') {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log('<SaveButton onSave> prop is deprecated, use the onSuccess prop instead.');\n            }\n            setOnSave(onSave);\n        }\n        else {\n            // we reset to the Form default save function\n            setOnSave();\n        }\n        if (onSuccess) {\n            setOnSuccess(onSuccess);\n        }\n        if (onFailure) {\n            setOnFailure(onFailure);\n        }\n        if (transform) {\n            setTransform(transform);\n        }\n        if (saving) {\n            // prevent double submission\n            event.preventDefault();\n        }\n        else {\n            if (invalid) {\n                notify('ra.message.invalid_form', 'warning');\n            }\n            // always submit form explicitly regardless of button type\n            if (event) {\n                event.preventDefault();\n            }\n            handleSubmitWithRedirect(redirect);\n        }\n        if (typeof onClick === 'function') {\n            onClick(event);\n        }\n    };\n    var type = submitOnEnter ? 'submit' : 'button';\n    var displayedLabel = label && translate(label, { _: label });\n    return (React.createElement(Button, __assign({ className: classnames(classes.button, className), variant: variant, type: type, onClick: handleClick, color: saving ? 'default' : 'primary', \"aria-label\": displayedLabel, disabled: disabled }, sanitizeButtonRestProps(rest)),\n        saving ? (React.createElement(CircularProgress, { size: 18, thickness: 2, className: classes.leftIcon })) : (cloneElement(icon, {\n            className: classnames(classes.leftIcon, classes.icon),\n        })),\n        displayedLabel));\n};\nvar defaultIcon = React.createElement(ContentSave, null);\nvar useStyles = makeStyles(function (theme) { return ({\n    button: {\n        position: 'relative',\n    },\n    leftIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        fontSize: 18,\n    },\n}); }, { name: 'RaSaveButton' });\nSaveButton.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    handleSubmitWithRedirect: PropTypes.func,\n    // @deprecated\n    onSave: PropTypes.func,\n    invalid: PropTypes.bool,\n    label: PropTypes.string,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    saving: PropTypes.bool,\n    submitOnEnter: PropTypes.bool,\n    variant: PropTypes.oneOf(['text', 'outlined', 'contained']),\n    icon: PropTypes.element,\n};\nexport default SaveButton;\n"]},"metadata":{},"sourceType":"module"}