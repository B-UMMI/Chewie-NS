{"ast":null,"code":"import { DELETE_MANY } from '../../core';\nexport var crudDeleteMany = function (resource, ids, basePath, refresh) {\n  if (refresh === void 0) {\n    refresh = true;\n  }\n\n  return {\n    type: CRUD_DELETE_MANY,\n    payload: {\n      ids: ids\n    },\n    meta: {\n      resource: resource,\n      fetch: DELETE_MANY,\n      onSuccess: {\n        notification: {\n          body: 'ra.notification.deleted',\n          level: 'info',\n          messageArgs: {\n            smart_count: ids.length\n          }\n        },\n        basePath: basePath,\n        refresh: refresh,\n        unselectAll: true\n      },\n      onFailure: {\n        notification: {\n          body: 'ra.notification.http_error',\n          level: 'warning'\n        }\n      }\n    }\n  };\n};\nexport var CRUD_DELETE_MANY = 'RA/CRUD_DELETE_MANY';\nexport var CRUD_DELETE_MANY_LOADING = 'RA/CRUD_DELETE_MANY_LOADING';\nexport var CRUD_DELETE_MANY_FAILURE = 'RA/CRUD_DELETE_MANY_FAILURE';\nexport var CRUD_DELETE_MANY_SUCCESS = 'RA/CRUD_DELETE_MANY_SUCCESS';","map":{"version":3,"sources":["/node_modules/ra-core/esm/actions/dataActions/crudDeleteMany.js"],"names":["DELETE_MANY","crudDeleteMany","resource","ids","basePath","refresh","type","CRUD_DELETE_MANY","payload","meta","fetch","onSuccess","notification","body","level","messageArgs","smart_count","length","unselectAll","onFailure","CRUD_DELETE_MANY_LOADING","CRUD_DELETE_MANY_FAILURE","CRUD_DELETE_MANY_SUCCESS"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;AACpE,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,SAAQ;AACJC,IAAAA,IAAI,EAAEC,gBADF;AAEJC,IAAAA,OAAO,EAAE;AAAEL,MAAAA,GAAG,EAAEA;AAAP,KAFL;AAGJM,IAAAA,IAAI,EAAE;AACFP,MAAAA,QAAQ,EAAEA,QADR;AAEFQ,MAAAA,KAAK,EAAEV,WAFL;AAGFW,MAAAA,SAAS,EAAE;AACPC,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAE,yBADI;AAEVC,UAAAA,KAAK,EAAE,MAFG;AAGVC,UAAAA,WAAW,EAAE;AACTC,YAAAA,WAAW,EAAEb,GAAG,CAACc;AADR;AAHH,SADP;AAQPb,QAAAA,QAAQ,EAAEA,QARH;AASPC,QAAAA,OAAO,EAAEA,OATF;AAUPa,QAAAA,WAAW,EAAE;AAVN,OAHT;AAeFC,MAAAA,SAAS,EAAE;AACPP,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAE,4BADI;AAEVC,UAAAA,KAAK,EAAE;AAFG;AADP;AAfT;AAHF,GAAR;AA0BH,CA5BM;AA6BP,OAAO,IAAIP,gBAAgB,GAAG,qBAAvB;AACP,OAAO,IAAIa,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B","sourcesContent":["import { DELETE_MANY } from '../../core';\nexport var crudDeleteMany = function (resource, ids, basePath, refresh) {\n    if (refresh === void 0) { refresh = true; }\n    return ({\n        type: CRUD_DELETE_MANY,\n        payload: { ids: ids },\n        meta: {\n            resource: resource,\n            fetch: DELETE_MANY,\n            onSuccess: {\n                notification: {\n                    body: 'ra.notification.deleted',\n                    level: 'info',\n                    messageArgs: {\n                        smart_count: ids.length,\n                    },\n                },\n                basePath: basePath,\n                refresh: refresh,\n                unselectAll: true,\n            },\n            onFailure: {\n                notification: {\n                    body: 'ra.notification.http_error',\n                    level: 'warning',\n                },\n            },\n        },\n    });\n};\nexport var CRUD_DELETE_MANY = 'RA/CRUD_DELETE_MANY';\nexport var CRUD_DELETE_MANY_LOADING = 'RA/CRUD_DELETE_MANY_LOADING';\nexport var CRUD_DELETE_MANY_FAILURE = 'RA/CRUD_DELETE_MANY_FAILURE';\nexport var CRUD_DELETE_MANY_SUCCESS = 'RA/CRUD_DELETE_MANY_SUCCESS';\n"]},"metadata":{},"sourceType":"module"}