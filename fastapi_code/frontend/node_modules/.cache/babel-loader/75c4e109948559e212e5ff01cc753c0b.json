{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useChoices } from 'ra-core';\nvar useStyles = makeStyles({\n  checkbox: {\n    height: 32\n  }\n}, {\n  name: 'RaCheckboxGroupInputItem'\n});\n\nvar CheckboxGroupInputItem = function (props) {\n  var classesOverride = props.classes,\n      id = props.id,\n      choice = props.choice,\n      onChange = props.onChange,\n      optionText = props.optionText,\n      optionValue = props.optionValue,\n      options = props.options,\n      translateChoice = props.translateChoice,\n      value = props.value,\n      rest = __rest(props, [\"classes\", \"id\", \"choice\", \"onChange\", \"optionText\", \"optionValue\", \"options\", \"translateChoice\", \"value\"]);\n\n  var classes = useStyles(props);\n\n  var _a = useChoices({\n    optionText: optionText,\n    optionValue: optionValue,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _a.getChoiceText,\n      getChoiceValue = _a.getChoiceValue;\n\n  var choiceName = getChoiceText(choice);\n  return React.createElement(FormControlLabel, {\n    htmlFor: id + \"_\" + getChoiceValue(choice),\n    key: getChoiceValue(choice),\n    onChange: onChange,\n    control: React.createElement(Checkbox, __assign({\n      id: id + \"_\" + getChoiceValue(choice),\n      color: \"primary\",\n      className: classes.checkbox,\n      checked: value ? value.find(function (v) {\n        return v == getChoiceValue(choice);\n      }) !== // eslint-disable-line eqeqeq\n      undefined : false,\n      value: String(getChoiceValue(choice))\n    }, options, rest)),\n    label: choiceName\n  });\n};\n\nexport default CheckboxGroupInputItem;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/CheckboxGroupInputItem.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","FormControlLabel","Checkbox","makeStyles","useChoices","useStyles","checkbox","height","name","CheckboxGroupInputItem","props","classesOverride","classes","id","choice","onChange","optionText","optionValue","options","translateChoice","value","rest","_a","getChoiceText","getChoiceValue","choiceName","createElement","htmlFor","key","control","color","className","checked","find","v","undefined","String","label"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useChoices } from 'ra-core';\nvar useStyles = makeStyles({\n    checkbox: {\n        height: 32,\n    },\n}, { name: 'RaCheckboxGroupInputItem' });\nvar CheckboxGroupInputItem = function (props) {\n    var classesOverride = props.classes, id = props.id, choice = props.choice, onChange = props.onChange, optionText = props.optionText, optionValue = props.optionValue, options = props.options, translateChoice = props.translateChoice, value = props.value, rest = __rest(props, [\"classes\", \"id\", \"choice\", \"onChange\", \"optionText\", \"optionValue\", \"options\", \"translateChoice\", \"value\"]);\n    var classes = useStyles(props);\n    var _a = useChoices({\n        optionText: optionText,\n        optionValue: optionValue,\n        translateChoice: translateChoice,\n    }), getChoiceText = _a.getChoiceText, getChoiceValue = _a.getChoiceValue;\n    var choiceName = getChoiceText(choice);\n    return (React.createElement(FormControlLabel, { htmlFor: id + \"_\" + getChoiceValue(choice), key: getChoiceValue(choice), onChange: onChange, control: React.createElement(Checkbox, __assign({ id: id + \"_\" + getChoiceValue(choice), color: \"primary\", className: classes.checkbox, checked: value\n                ? value.find(function (v) { return v == getChoiceValue(choice); }) !== // eslint-disable-line eqeqeq\n                    undefined\n                : false, value: String(getChoiceValue(choice)) }, options, rest)), label: choiceName }));\n};\nexport default CheckboxGroupInputItem;\n"]},"metadata":{},"sourceType":"module"}