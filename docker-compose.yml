version: '3.7'
services:
 web_dev:
  build: .
  container_name: flask_app
  ports:
   - "5000:5000"
  volumes:
   - .:/app
  environment:
   - FLASK_ENV=development
   - BASE_URL=http://127.0.0.1:5000/NS/api/
   - DEFAULTHGRAPH=http://localhost:8890/test2
   - LOCAL_SPARQL=http://172.19.1.3:8890/sparql
   - URL_SEND_LOCAL_VIRTUOSO=http://172.19.1.3:8890/DAV/test_folder/data
   - CELERY_BROKER_URL='redis://172.19.1.4:6379/0'
   - CELERY_RESULT_BACKEND='redis://172.19.1.4:6379/0'
  networks: 
    test:
      ipv4_address: 172.19.1.1
 
 postgres_compose:
  image: postgres:10
  container_name: "postgres"
  # Setup the username, password, and database name. 
  environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=test
    - POSTGRES_DB=ref_ns_sec
  # Maps port 54320 (localhost) to port 5432 on the container. 
  ports:
    - "54320:5432" 
  volumes:
    - /home/pcerqueira/Lab_Software/refactored_ns/ns_security/postgres_data:/var/lib/postgresql/data
  networks: 
    test:
      ipv4_address: 172.19.1.2


### This service builds a virtuoso container from 2 Dockerfiles 
### as described in http://vos.openlinksw.com/owiki/wiki/VOS/VirtuosoDocker
#  virtuoso_base:
#   image: openlink/vos_base:v0
#   build: 
#    context: ./docker_images/virtuoso
#    dockerfile: Dockerfile.vos_base
#   #container_name: openlink/vos
#  virtuoso_run:
#   build: 
#    context: ./docker_images/virtuoso
#    dockerfile: Dockerfile.vos
#   container_name: virtuoso
#   depends_on: 
#     - virtuoso_base
#   volumes: 
#     - /home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso_data/db:/opt/virtuoso-opensource/var/lib/virtuoso/db
#   ports: 
#     - "8080:8890"
#     - "1112:1112"

 virtuoso:
  image: openlink/virtuoso-opensource-7:7.2.6-r2-gf5e32aa
  container_name: virtuoso
  environment:
      #- SPARQL_UPDATE=true
      - VIRTUOSO_DB_USER=demo
      - VIRTUOSO_DB_PASSWORD=chewiens
      - DEFAULT_GRAPH=http://localhost:8890/test2
      - DBA_PASSWORD=ummi
      - DAV_PASSWORD=ummi
      #- LOG_FILE_LOCATION=/var/lib/virtuoso-opensource-6.1/db/
      # - VIRTUOSO_INI_FILE=/home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso.ini
  volumes:
    # This volume contains the virtuoso database (virtuoso.db)
    - /home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso_data/db:/opt/virtuoso-opensource/database
  ports:
    - "8080:8890"
    - "1112:1111"
  networks: 
    test:
      ipv4_address: 172.19.1.3


### This builds a virtuoso container using tenforce's image.
### It uses a particular commit from openlink's github
 #virtuoso:
  #image: tenforce/virtuoso:1.3.2-virtuoso7.2.5.1
  #container_name: virtuoso_tenforce
  #environment:
      #- SPARQL_UPDATE=true
      #- VIRTUOSO_DB_USER=demo
      #- VIRTUOSO_DB_PASSWORD=chewiens
      #- DEFAULT_GRAPH=http://localhost:8890/test2
      #- DBA_PASSWORD=ummi
      ##- DAV_PASSWORD=ummi
      ##- LOG_FILE_LOCATION=/var/lib/virtuoso-opensource-6.1/db/
      ## - VIRTUOSO_INI_FILE=/home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso.ini
  #volumes:
    #- /home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso_data/db:/var/lib/virtuoso/db/toLoad
    ## - /home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso.db:/opt/virtuoso-opensource/database/virtuoso.db
  #ports:
    #- "8080:8890"
    #- "1112:1111"
  #networks: 
    #test:
      #ipv4_address: 172.19.1.3

      
### This builds a container using a Dockerfile with the same style as the tenforce image.
### It allows more control over image, mainly openlink's github commit.
#  virtuoso:
#   build: ./docker_images/virtuoso/tenforce_style
#   container_name: virtuoso
#   environment:
#       - SPARQL_UPDATE=true
#       - VIRTUOSO_DB_USER=demo
#       - VIRTUOSO_DB_PASSWORD=chewiens
#       - DEFAULT_GRAPH=http://localhost:8890/test2
#       - DBA_PASSWORD=ummi
#       - DAV_PASSWORD=ummi
#       #- LOG_FILE_LOCATION=/var/lib/virtuoso-opensource-6.1/db/
#       # - VIRTUOSO_INI_FILE=/home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso.ini
#   volumes:
#     - /home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso_data/db:/var/lib/virtuoso/db/toLoad
#     # - /home/pcerqueira/Lab_Software/refactored_ns/test_compose/virtuoso.db:/opt/virtuoso-opensource/database/virtuoso.db
#   ports:
#     - "8080:8890"
#     - "1112:1111"
#   networks: 
#     test:
#       ipv4_address: 172.19.1.3

 
 redis:
  image: redis:5.0.6
  container_name: redis
  networks: 
    test:
      ipv4_address: 172.19.1.4

 
 nginx:
  image: nginx:1.17
  container_name: nginx
  volumes:
   - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
   - /etc/nginx/conf.d:/etc/nginx/conf.d
  # deploy:
  #   replicas: 2
  #   restart_policy:
  #     condition: on-failure
  ports:
   - "8888:80"
   - "443:443"
  networks: 
    test:
      ipv4_address: 172.19.1.5


networks:
 test:
  ipam: 
    driver: default
    config: 
      - subnet: 172.19.0.0/16
