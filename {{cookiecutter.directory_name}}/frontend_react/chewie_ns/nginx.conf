worker_processes 5;

events { 
  worker_connections 4096;

  # worker processes will accept new connections by turn. 
  # Otherwise, all worker processes will be notified about new connections,
  # and if volume of new connections is low, some of the worker processes may just waste system resources.
  accept_mutex on;
}

http {

    # Avoid disclosing information about nginx
    server_tokens off;

    # Sets the maximum allowed size of the client request body.
    client_max_body_size    50m;

    # Sets buffer size for reading client request body.
    # In case the request body is larger than the buffer,
    # the whole body or only its part is written to a temporary file.
    client_body_buffer_size 128k;

    # Defines files that will be used as an index.
    index      index.html index.htm;
    
    # MIME types
    # List to identifying files on the Internet
    # according to their nature and format.
    include mime.types;
    default_type application/octet-stream;

    # logging

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    log_format main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # sets a timeout during which a keep-alive 
    # client connection will stay open on the server side.
    keepalive_timeout   75;

    # GZIP
    gzip on;
    gzip_static on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/javascript;

    map $request_method $access_control_max_age {
      OPTIONS 1728000; # 20 days
    }

    upstream app {
    # References to our app containers, via docker compose
	server flask_app:5000;
    }

    upstream pgadmin4 {
    # References to our app containers, via docker compose
        server pgadmin4:80;
    }
    
    upstream flower {
        server flower_container:5555;
   }

    # SSL 

    # Specifies a time during which a 
    # client may reuse the session parameters.
    ssl_session_timeout 1d;

    # Sets the types and sizes of caches that
    # store session parameters
    # a cache shared between all worker processes
    ssl_session_cache shared:SSL:10m;

    # Enables or disables session resumption 
    # through TLS session tickets. 
    ssl_session_tickets off;
    ssl_ecdh_curve secp384r1:X25519:prime256v1;
    ssl_buffer_size 8k;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam /etc/nginx/certs/dhparam.pem;

    # SSL Ciphers
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_protocols TLSv1.2 TLSv1.3;


# server {
#     listen 80;
#     server_name _;

#     location ^~ /.well-known {
#       allow all;
#       root  /data/letsencrypt/;
#     }

#     location / {
#         return 301 https://chewbbaca.online$request_uri;
#     }

# }

server {

    listen 443 ssl http2;
    server_name {{cookiecutter.server_name}};
    
    # SSL self-signed certificates
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    # # Letsencrypt certficates
    # ssl_certificate /etc/letsencrypt/live/chewbbaca.online/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/chewbbaca.online/privkey.pem;
    
    # Security headers
    include general-security-headers.conf;
        
    # Path to the static files
    root /var/www/my-app;

    location / {
    
        # Checks the existence of files in the specified 
        # order and uses the first found file for request processing.
        try_files $uri $uri/ /index.html;

        # General security headers.
        include general-security-headers.conf;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # ACME challenge location
    # location ^~ /.well-known {
    #   allow all;
    #   root  /data/letsencrypt/;
    # }

    # Media: images, icons, video, audio, HTC
    # location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    #      expires 1M;
    #      access_log off;
    #      include general-security-headers.conf;
    #      add_header Cache-Control "no-cache, no-store, must-revalidate";
    # }

    # Javascript and CSS files
    # location ~* \.(?:css|js)$ {
    #      try_files $uri =404;
    #      expires 1y;
    #      access_log off;
    #      include general-security-headers.conf;
    #      add_header Cache-Control "no-cache, no-store, must-revalidate";
    #  }


    location /NS/api/swagger.json {
        proxy_pass http://app/NS/api/swagger.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        include general-security-headers.conf;
        # include cors.conf;
    }

    location /NS/api/ {
        proxy_pass http://app/NS/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        include general-security-headers.conf;
        # include cors.conf;
    }


    location ^~ /swaggerui/ {
      proxy_pass http://app/swaggerui/;
      proxy_set_header  Host $host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Host $server_name;

      include general-security-headers.conf;
    #   include cors.conf;
    }

    location ^~ /api/ {
        proxy_pass http://app/;
        proxy_redirect    off;
        proxy_http_version 1.1;

        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

    }

    location ^~ /pgadmin {
        # auth_basic "Database Administrator's Area";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        root /var/www;

        proxy_set_header X-Script-Name /pgadmin;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;

        include general-security-headers.conf;

        proxy_pass http://pgadmin4/;
        proxy_redirect off;
    }
    
    
    location ^~ /flower {
        # auth_basic "Queue Administrator's Area";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        root /var/www;
        rewrite ^/flower/?(.*)$ /$1 break;

        proxy_pass http://flower/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;

        include general-security-headers.conf;
    }

    # Proxy download compressed files
    location ~* ^/compressed_schemas/(.*?)/(.*) {
        # Do not allow people to mess with this location directly
        # Only internal redirects are allowed
        internal;

        # Location-specific logging
        #access_log logs/internal_redirect.access.log main;
        #error_log logs/internal_redirect.error.log warn;

        # How to resolve remote URLs.
        # Itâ€™s inside a Docker container with dnsmasq running
        # so 127.0.0.1 is used
        resolver 127.0.0.1 ipv6=off;

        # Extract download url from the request
        set $download_uri $2;
        set $download_host $1;

        # Compose download url
        set $download_url http://$download_host/$download_uri;

        # Set download request headers
        proxy_set_header Host $download_host;
        proxy_set_header Authorization '';

        # The next two lines could be used if your storage
        # backend does not support Content-Disposition
        # headers used to specify file name browsers use
        # when save content to the disk
        proxy_hide_header Content-Disposition;
        include general-security-headers.conf;
        add_header Content-Disposition 'attachment; filename="$args"';

        # Do not touch local disks when proxying
        # content to clients
        proxy_max_temp_file_size 0;

        # Download the file and send it to client
        proxy_pass $download_url;

    }

    # Proxy download prodigal training files
    location ~* ^/prodigal_training_files/(.*?)/(.*) {
        
        internal;

        resolver 127.0.0.1 ipv6=off;

        set $download_uri $2;
        set $download_host $1;

        set $download_url http://$download_host/$download_uri;

        proxy_set_header Host $download_host;
        proxy_set_header Authorization '';

        proxy_hide_header Content-Disposition;
        include general-security-headers.conf;
        add_header Content-Disposition 'attachment; filename="$args"';

        proxy_max_temp_file_size 0;

        proxy_pass $download_url;

    }


}

# Redirect IP to Server Name
# server {
    
#     listen 443 ssl http2;

#     # SSL certificates
#     #ssl_certificate /etc/nginx/certs/cert.pem;
#     #ssl_certificate_key /etc/nginx/certs/key.pem;

#     # Letsencrypt certficates
#     ssl_certificate /etc/letsencrypt/live/chewbbaca.online/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/chewbbaca.online/privkey.pem;

#     server_name _;

#     return 301 $scheme://chewbbaca.online$request_uri;

# }

#     proxy_read_timeout 300s;
#     proxy_send_timeout 300s; 

}
