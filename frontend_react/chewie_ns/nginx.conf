worker_processes 5;

events { 
  worker_connections 4096; 
  accept_mutex on;
}

http {

    # Avoid disclosing information about nginx
    server_tokens off;

    client_max_body_size    50m;
    client_body_buffer_size 128k;

    index      index.html index.htm;
    
    # MIME
    include mime.types;
    default_type application/octet-stream;

    # logging

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    log_format main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    keepalive_timeout   65;

    # GZIP
    gzip on;
    gzip_static on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/javascript;

    map $request_method $access_control_max_age {
      OPTIONS 1728000; # 20 days
    }

    upstream app {
    # References to our app containers, via docker compose
	server flask_app:5000;
    }

    # SSL 
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    #ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam /etc/nginx/certs/dhparam.pem;

    # Ciphers
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;


server {
    listen 80;
    server_name chewbbaca.online;
    return 301 https://chewbbaca.online$request_uri;
}

server {

    listen 443 ssl http2;
    server_name chewbbaca.online;
    
    # SSL certificates
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    
    # security headers
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
    #add_header X-Frame-Options "SAMEORIGIN" always;
    #add_header X-Content-Type-Options "nosniff" always;
    #add_header Referrer-Policy "no-referrer-when-downgrade" always;
         
    root /var/www/my-app;

    location / {
	try_files $uri $uri/ /index.html;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
         expires 1M;
         access_log off;
         add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
         try_files $uri =404;
         expires 1y;
         access_log off;
         add_header Cache-Control "public";
     }


    location /NS/api/swagger.json {
        proxy_pass http://app/NS/api/swagger.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        
        include cors.conf;
    }

    location /NS/api/ {
        proxy_pass http://app/NS/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        
        include cors.conf;
    }


    location ^~ /swaggerui/ {
      proxy_pass http://app/swaggerui/;
      proxy_set_header  Host $host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Host $server_name;

      
      include cors.conf;
    }

    location ^~ /api/ {
        proxy_pass http://app/;
        proxy_redirect    off;
        proxy_http_version 1.1;

        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

    }

    # Proxy download compressed files
    location ~* ^/compressed_schemas/(.*?)/(.*) {
        # Do not allow people to mess with this location directly
        # Only internal redirects are allowed
        internal;

        # Location-specific logging
        #access_log logs/internal_redirect.access.log main;
        #error_log logs/internal_redirect.error.log warn;

        # How to resolve remote URLs.
        # Itâ€™s inside a Docker container with dnsmasq running
        # so 127.0.0.1 is used
        resolver 127.0.0.1 ipv6=off;

        # Extract download url from the request
        set $download_uri $2;
        set $download_host $1;

        # Compose download url
        set $download_url http://$download_host/$download_uri;

        # Set download request headers
        proxy_set_header Host $download_host;
        proxy_set_header Authorization '';

        # The next two lines could be used if your storage
        # backend does not support Content-Disposition
        # headers used to specify file name browsers use
        # when save content to the disk
        proxy_hide_header Content-Disposition;
        add_header Content-Disposition 'attachment; filename="$args"';

        # Do not touch local disks when proxying
        # content to clients
        proxy_max_temp_file_size 0;

        # Download the file and send it to client
        proxy_pass $download_url;

    }

    # Proxy download prodigal training files
    location ~* ^/prodigal_training_files/(.*?)/(.*) {
        
        internal;

        resolver 127.0.0.1 ipv6=off;

        set $download_uri $2;
        set $download_host $1;

        set $download_url http://$download_host/$download_uri;

        proxy_set_header Host $download_host;
        proxy_set_header Authorization '';

        proxy_hide_header Content-Disposition;
        add_header Content-Disposition 'attachment; filename="$args"';

        proxy_max_temp_file_size 0;

        proxy_pass $download_url;

    }


}

# Redirect IP to Server Name
server {
    
    listen 443 ssl http2;

    # SSL certificates
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    server_name 194.210.120.209;

    return 301 $scheme://chewbbaca.online$request_uri;

}

    proxy_read_timeout 120s;
    proxy_send_timeout 120s; 

}
