worker_processes 1;

events { worker_connections 1024; }

http {
    include    mime.types;
    #include    gzip.conf;

    #default_type application/octet-stream;

    #log_format main '$remote_addr - $remote_user [$time_local]  $status '
    #'"$request" $body_bytes_sent "$http_referer" '
    #'"$http_user_agent" "$http_x_forwarded_for"';
   
    upstream app {
    # References to our app containers, via docker compose
	server flask_app:5000;
}

    upstream ui {
        server react_app:3000;
} 

#server {

    #listen 80;
    #listen [::]:80 default_server;

    #server_name _;

    #location / {
    #    proxy_pass http://app/;
    #    proxy_redirect     off;
    #	 proxy_http_version 1.1;

    #    proxy_set_header   Host                 $host;
    #    proxy_set_header   X-Real-IP            $remote_addr;
    #    proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
    #    proxy_set_header   X-Forwarded-Proto    $scheme;
    #}

     #location / {
         #proxy_pass http://app/;
         #proxy_redirect     off;
	 #proxy_http_version 1.1;

         #proxy_set_header   Host                 $host;
         #proxy_set_header   X-Real-IP            $remote_addr;
         #proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
         #proxy_set_header   X-Forwarded-Proto    $scheme;

#}

server {

    listen 443 ssl;
    #listen [::]:443 ssl;
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_protocols TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    location / {
        proxy_pass http://ui/;
        proxy_redirect  off;
 
        proxy_http_version 1.1;
 
        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
}


    #location / {
       # #rewrite ^ /NS/api/docs$1;
       # proxy_pass http://app/;
       # proxy_redirect    off;  
       # #sub_filter "http://$host/" "https://$host/";
	# #sub_filter_once off;
        #proxy_http_version 1.1; 

        #proxy_set_header   Host                 $host;
        #proxy_set_header   X-Real-IP            $remote_addr;
        #proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        #proxy_set_header   X-Forwarded-Proto    $scheme;

        #proxy_ssl_verify       on;
        #proxy_ssl_verify_depth 2;    

#}

    location ^~ /api/ {
        #rewrite ^ /NS/api/docs$1;
        proxy_pass http://app/NS/api/docs;
        proxy_redirect    off;
        #sub_filter "http://$host/" "https://$host/";
        #sub_filter_once off;
        proxy_http_version 1.1;

        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

        #proxy_ssl_verify       on;
        #proxy_ssl_verify_depth 2;    

}

 #    location / {
 #       proxy_pass http://ui/;
 #       proxy_redirect  off;

 #       proxy_http_version 1.1;

 #       proxy_set_header   Host                 $host;
 #       proxy_set_header   X-Real-IP            $remote_addr;
 #       proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
 #       proxy_set_header   X-Forwarded-Proto    $scheme;
#}



}

#server {
#    listen 80;
    #server_name example.com;
    #location ~ /.well-known {
        #root /path/to/letsencrypt/verification/directory;
    #}
#    location / {
#        return 301 https://$host$request_uri;
#    }
#}

}
